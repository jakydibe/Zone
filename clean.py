0x1000  4  sub  rsp, 0x28
0x1004  7  lea  rcx, [rip + 0x1fff5]
0x100b  5  call  0x1083
0x1010  5  mov  eax, 0
0x1015  4  add  rsp, 0x28
0x1019  1  ret  
0x101a  1  int3  
0x101b  1  int3  
0x101c  1  int3  
0x101d  1  int3  
0x101e  1  int3  
0x101f  1  int3  
0x1020  1  int3  
0x1021  1  int3  
0x1022  1  int3  
0x1023  7  lea  rax, [rip + 0x21c46]
0x102a  1  ret  
0x102b  1  int3  
0x102c  1  int3  
0x102d  1  int3  
0x102e  1  int3  
0x102f  1  int3  
0x1030  1  int3  
0x1031  1  int3  
0x1032  1  int3  
0x1033  5  mov  qword ptr [rsp + 0x20], r9
0x1038  5  mov  qword ptr [rsp + 0x18], r8
0x103d  5  mov  qword ptr [rsp + 0x10], rdx
0x1042  5  mov  qword ptr [rsp + 8], rcx
0x1047  4  sub  rsp, 0x38
0x104b  5  call  0x1023
0x1050  5  mov  rcx, qword ptr [rsp + 0x58]
0x1055  5  mov  qword ptr [rsp + 0x20], rcx
0x105a  5  mov  r9, qword ptr [rsp + 0x50]
0x105f  5  mov  r8, qword ptr [rsp + 0x48]
0x1064  5  mov  rdx, qword ptr [rsp + 0x40]
0x1069  3  mov  rcx, qword ptr [rax]
0x106c  5  call  0x6e43
0x1071  4  add  rsp, 0x38
0x1075  1  ret  
0x1076  1  int3  
0x1077  1  int3  
0x1078  1  int3  
0x1079  1  int3  
0x107a  1  int3  
0x107b  1  int3  
0x107c  1  int3  
0x107d  1  int3  
0x107e  1  int3  
0x107f  1  int3  
0x1080  1  int3  
0x1081  1  int3  
0x1082  1  int3  
0x1083  5  mov  qword ptr [rsp + 8], rcx
0x1088  5  mov  qword ptr [rsp + 0x10], rdx
0x108d  5  mov  qword ptr [rsp + 0x18], r8
0x1092  5  mov  qword ptr [rsp + 0x20], r9
0x1097  4  sub  rsp, 0x38
0x109b  5  lea  rax, [rsp + 0x48]
0x10a0  5  mov  qword ptr [rsp + 0x28], rax
0x10a5  5  mov  ecx, 1
0x10aa  5  call  0x4e0b
0x10af  5  mov  r9, qword ptr [rsp + 0x28]
0x10b4  3  xor  r8d, r8d
0x10b7  5  mov  rdx, qword ptr [rsp + 0x40]
0x10bc  3  mov  rcx, rax
0x10bf  5  call  0x1033
0x10c4  4  mov  dword ptr [rsp + 0x20], eax
0x10c8  9  mov  qword ptr [rsp + 0x28], 0
0x10d1  4  mov  eax, dword ptr [rsp + 0x20]
0x10d5  4  add  rsp, 0x38
0x10d9  1  ret  
0x10da  1  int3  
0x10db  2  push  rbx
0x10dd  4  sub  rsp, 0x20
0x10e1  5  mov  ecx, 1
0x10e6  5  call  0x70f3
0x10eb  5  call  0x1657
0x10f0  2  mov  ecx, eax
0x10f2  5  call  0x7c8f
0x10f7  5  call  0x164b
0x10fc  2  mov  ebx, eax
0x10fe  5  call  0x7e53
0x1103  5  mov  ecx, 1
0x1108  2  mov  dword ptr [rax], ebx
0x110a  5  call  0x13d7
0x110f  2  test  al, al
0x1111  2  je  0x1186
0x1113  5  call  0x18d3
0x1118  7  lea  rcx, [rip + 0x7ed]
0x111f  5  call  0x1587
0x1124  5  call  0x164f
0x1129  2  mov  ecx, eax
0x112b  5  call  0x73af
0x1130  2  test  eax, eax
0x1132  2  jne  0x1186
0x1134  5  call  0x165f
0x1139  5  call  0x169b
0x113e  2  test  eax, eax
0x1140  2  je  0x114e
0x1142  7  lea  rcx, [rip + 0x4ff]
0x1149  5  call  0x715f
0x114e  5  call  0x1673
0x1153  5  call  0x1673
0x1158  5  call  0x164b
0x115d  2  mov  ecx, eax
0x115f  5  call  0x7db3
0x1164  5  call  0x166f
0x1169  2  test  al, al
0x116b  2  je  0x1172
0x116d  5  call  0x78e7
0x1172  5  call  0x164b
0x1177  5  call  0x180b
0x117c  2  test  eax, eax
0x117e  2  jne  0x1186
0x1180  4  add  rsp, 0x20
0x1184  1  pop  rbx
0x1185  1  ret  
0x1186  5  mov  ecx, 7
0x118b  5  call  0x16bf
0x1190  1  int3  
0x1191  1  int3  
0x1192  1  int3  
0x1193  4  sub  rsp, 0x28
0x1197  5  call  0x167f
0x119c  2  xor  eax, eax
0x119e  4  add  rsp, 0x28
0x11a2  1  ret  
0x11a3  4  sub  rsp, 0x28
0x11a7  5  call  0x1867
0x11ac  5  call  0x164b
0x11b1  2  mov  ecx, eax
0x11b3  4  add  rsp, 0x28
0x11b7  5  jmp  0x7e27
0x11bc  1  int3  
0x11bd  1  int3  
0x11be  1  int3  
0x11bf  5  mov  qword ptr [rsp + 8], rbx
0x11c4  5  mov  qword ptr [rsp + 0x10], rsi
0x11c9  1  push  rdi
0x11ca  4  sub  rsp, 0x30
0x11ce  5  mov  ecx, 1
0x11d3  5  call  0x138b
0x11d8  2  test  al, al
0x11da  6  je  0x1316
0x11e0  3  xor  sil, sil
0x11e3  5  mov  byte ptr [rsp + 0x20], sil
0x11e8  5  call  0x134f
0x11ed  2  mov  bl, al
0x11ef  6  mov  ecx, dword ptr [rip + 0x208cb]
0x11f5  3  cmp  ecx, 1
0x11f8  6  je  0x1321
0x11fe  2  test  ecx, ecx
0x1200  2  jne  0x124c
0x1202  10  mov  dword ptr [rip + 0x208b4], 1
0x120c  7  lea  rdx, [rip + 0x150cd]
0x1213  7  lea  rcx, [rip + 0x1508e]
0x121a  5  call  0x7933
0x121f  2  test  eax, eax
0x1221  2  je  0x122d
0x1223  5  mov  eax, 0xff
0x1228  5  jmp  0x1306
0x122d  7  lea  rdx, [rip + 0x1506c]
0x1234  7  lea  rcx, [rip + 0x15055]
0x123b  5  call  0x78ef
0x1240  10  mov  dword ptr [rip + 0x20876], 2
0x124a  2  jmp  0x1254
0x124c  3  mov  sil, 1
0x124f  5  mov  byte ptr [rsp + 0x20], sil
0x1254  2  mov  cl, bl
0x1256  5  call  0x14fb
0x125b  5  call  0x16a7
0x1260  3  mov  rbx, rax
0x1263  4  cmp  qword ptr [rax], 0
0x1267  2  je  0x1287
0x1269  3  mov  rcx, rax
0x126c  5  call  0x1463
0x1271  2  test  al, al
0x1273  2  je  0x1287
0x1275  3  xor  r8d, r8d
0x1278  4  lea  edx, [r8 + 2]
0x127c  2  xor  ecx, ecx
0x127e  3  mov  rax, qword ptr [rbx]
0x1281  6  call  qword ptr [rip + 0x14fe1]
0x1287  5  call  0x16af
0x128c  3  mov  rbx, rax
0x128f  4  cmp  qword ptr [rax], 0
0x1293  2  je  0x12a9
0x1295  3  mov  rcx, rax
0x1298  5  call  0x1463
0x129d  2  test  al, al
0x129f  2  je  0x12a9
0x12a1  3  mov  rcx, qword ptr [rbx]
0x12a4  5  call  0x7c43
0x12a9  5  call  0x7897
0x12ae  3  mov  rdi, rax
0x12b1  5  call  0x7cff
0x12b6  3  mov  rbx, qword ptr [rax]
0x12b9  5  call  0x7cf7
0x12be  3  mov  r8, rdi
0x12c1  3  mov  rdx, rbx
0x12c4  2  mov  ecx, dword ptr [rax]
0x12c6  5  call  0x1000
0x12cb  2  mov  ebx, eax
0x12cd  5  call  0x1813
0x12d2  2  test  al, al
0x12d4  2  je  0x132b
0x12d6  3  test  sil, sil
0x12d9  2  jne  0x12e0
0x12db  5  call  0x7c27
0x12e0  2  xor  edx, edx
0x12e2  2  mov  cl, 1
0x12e4  5  call  0x151f
0x12e9  2  mov  eax, ebx
0x12eb  2  jmp  0x1306
0x12ed  2  mov  ebx, eax
0x12ef  5  call  0x1813
0x12f4  2  test  al, al
0x12f6  2  je  0x1333
0x12f8  5  cmp  byte ptr [rsp + 0x20], 0
0x12fd  2  jne  0x1304
0x12ff  5  call  0x7c17
0x1304  2  mov  eax, ebx
0x1306  5  mov  rbx, qword ptr [rsp + 0x40]
0x130b  5  mov  rsi, qword ptr [rsp + 0x48]
0x1310  4  add  rsp, 0x30
0x1314  1  pop  rdi
0x1315  1  ret  
0x1316  5  mov  ecx, 7
0x131b  5  call  0x16bf
0x1320  1  nop  
0x1321  5  mov  ecx, 7
0x1326  5  call  0x16bf
0x132b  2  mov  ecx, ebx
0x132d  5  call  0x7c83
0x1332  1  nop  
0x1333  2  mov  ecx, ebx
0x1335  5  call  0x7c37
0x133a  1  nop  
0x133b  4  sub  rsp, 0x28
0x133f  5  call  0x159f
0x1344  4  add  rsp, 0x28
0x1348  5  jmp  0x11bf
0x134d  1  int3  
0x134e  1  int3  
0x134f  4  sub  rsp, 0x28
0x1353  5  call  0x1af7
0x1358  2  test  eax, eax
0x135a  2  je  0x137d
0x135c  9  mov  rax, qword ptr gs:[0x30]
0x1365  4  mov  rcx, qword ptr [rax + 8]
0x1369  2  jmp  0x1370
0x136b  3  cmp  rcx, rax
0x136e  2  je  0x1384
0x1370  2  xor  eax, eax
0x1372  9  lock cmpxchg  qword ptr [rip + 0x2074d], rcx
0x137b  2  jne  0x136b
0x137d  2  xor  al, al
0x137f  4  add  rsp, 0x28
0x1383  1  ret  
0x1384  2  mov  al, 1
0x1386  2  jmp  0x137f
0x1388  1  int3  
0x1389  1  int3  
0x138a  1  int3  
0x138b  2  push  rbx
0x138d  4  sub  rsp, 0x20
0x1391  7  movzx  eax, byte ptr [rip + 0x20738]
0x1398  2  test  ecx, ecx
0x139a  5  mov  ebx, 1
0x139f  3  cmove  eax, ebx
0x13a2  6  mov  byte ptr [rip + 0x20728], al
0x13a8  5  call  0x194b
0x13ad  5  call  0x1cfb
0x13b2  2  test  al, al
0x13b4  2  jne  0x13ba
0x13b6  2  xor  al, al
0x13b8  2  jmp  0x13ce
0x13ba  5  call  0x8393
0x13bf  2  test  al, al
0x13c1  2  jne  0x13cc
0x13c3  2  xor  ecx, ecx
0x13c5  5  call  0x1d23
0x13ca  2  jmp  0x13b6
0x13cc  2  mov  al, bl
0x13ce  4  add  rsp, 0x20
0x13d2  1  pop  rbx
0x13d3  1  ret  
0x13d4  1  int3  
0x13d5  1  int3  
0x13d6  1  int3  
0x13d7  2  push  rbx
0x13d9  4  sub  rsp, 0x20
0x13dd  7  cmp  byte ptr [rip + 0x206ed], 0
0x13e4  2  mov  ebx, ecx
0x13e6  2  jne  0x144f
0x13e8  3  cmp  ecx, 1
0x13eb  2  ja  0x1457
0x13ed  5  call  0x1af7
0x13f2  2  test  eax, eax
0x13f4  2  je  0x141e
0x13f6  2  test  ebx, ebx
0x13f8  2  jne  0x141e
0x13fa  7  lea  rcx, [rip + 0x206d7]
0x1401  5  call  0x81f7
0x1406  2  test  eax, eax
0x1408  2  jne  0x141a
0x140a  7  lea  rcx, [rip + 0x206df]
0x1411  5  call  0x81f7
0x1416  2  test  eax, eax
0x1418  2  je  0x1448
0x141a  2  xor  al, al
0x141c  2  jmp  0x1451
0x141e  8  movdqa  xmm0, xmmword ptr [rip + 0x14efa]
0x1426  4  or  rax, 0xffffffffffffffff
0x142a  8  movdqu  xmmword ptr [rip + 0x206a6], xmm0
0x1432  7  mov  qword ptr [rip + 0x206af], rax
0x1439  8  movdqu  xmmword ptr [rip + 0x206af], xmm0
0x1441  7  mov  qword ptr [rip + 0x206b8], rax
0x1448  7  mov  byte ptr [rip + 0x20682], 1
0x144f  2  mov  al, 1
0x1451  4  add  rsp, 0x20
0x1455  1  pop  rbx
0x1456  1  ret  
0x1457  5  mov  ecx, 5
0x145c  5  call  0x16bf
0x1461  1  int3  
0x1462  1  int3  
0x1463  4  sub  rsp, 0x18
0x1467  3  mov  r8, rcx
0x146a  5  mov  eax, 0x5a4d
0x146f  7  cmp  word ptr [rip - 0x1473], ax
0x1476  2  jne  0x14f0
0x1478  7  movsxd  rcx, dword ptr [rip - 0x1440]
0x147f  7  lea  rdx, [rip - 0x1483]
0x1486  3  add  rcx, rdx
0x1489  6  cmp  dword ptr [rcx], 0x4550
0x148f  2  jne  0x14f0
0x1491  5  mov  eax, 0x20b
0x1496  4  cmp  word ptr [rcx + 0x18], ax
0x149a  2  jne  0x14f0
0x149c  3  sub  r8, rdx
0x149f  4  movzx  edx, word ptr [rcx + 0x14]
0x14a3  4  add  rdx, 0x18
0x14a7  3  add  rdx, rcx
0x14aa  4  movzx  eax, word ptr [rcx + 6]
0x14ae  4  lea  rcx, [rax + rax*4]
0x14b2  4  lea  r9, [rdx + rcx*8]
0x14b6  4  mov  qword ptr [rsp], rdx
0x14ba  3  cmp  rdx, r9
0x14bd  2  je  0x14d7
0x14bf  3  mov  ecx, dword ptr [rdx + 0xc]
0x14c2  3  cmp  r8, rcx
0x14c5  2  jb  0x14d1
0x14c7  3  mov  eax, dword ptr [rdx + 8]
0x14ca  2  add  eax, ecx
0x14cc  3  cmp  r8, rax
0x14cf  2  jb  0x14d9
0x14d1  4  add  rdx, 0x28
0x14d5  2  jmp  0x14b6
0x14d7  2  xor  edx, edx
0x14d9  3  test  rdx, rdx
0x14dc  2  jne  0x14e2
0x14de  2  xor  al, al
0x14e0  2  jmp  0x14f6
0x14e2  4  cmp  dword ptr [rdx + 0x24], 0
0x14e6  2  jge  0x14ec
0x14e8  2  xor  al, al
0x14ea  2  jmp  0x14f6
0x14ec  2  mov  al, 1
0x14ee  2  jmp  0x14f6
0x14f0  2  xor  al, al
0x14f2  2  jmp  0x14f6
0x14f4  2  xor  al, al
0x14f6  4  add  rsp, 0x18
0x14fa  1  ret  
0x14fb  2  push  rbx
0x14fd  4  sub  rsp, 0x20
0x1501  2  mov  bl, cl
0x1503  5  call  0x1af7
0x1508  2  xor  edx, edx
0x150a  2  test  eax, eax
0x150c  2  je  0x1519
0x150e  2  test  bl, bl
0x1510  2  jne  0x1519
0x1512  7  xchg  qword ptr [rip + 0x205af], rdx
0x1519  4  add  rsp, 0x20
0x151d  1  pop  rbx
0x151e  1  ret  
0x151f  2  push  rbx
0x1521  4  sub  rsp, 0x20
0x1525  7  cmp  byte ptr [rip + 0x205a4], 0
0x152c  2  mov  bl, cl
0x152e  2  je  0x1534
0x1530  2  test  dl, dl
0x1532  2  jne  0x1540
0x1534  5  call  0x83a7
0x1539  2  mov  cl, bl
0x153b  5  call  0x1d23
0x1540  2  mov  al, 1
0x1542  4  add  rsp, 0x20
0x1546  1  pop  rbx
0x1547  1  ret  
0x1548  1  int3  
0x1549  1  int3  
0x154a  1  int3  
0x154b  2  push  rbx
0x154d  4  sub  rsp, 0x20
0x1551  8  cmp  qword ptr [rip + 0x2057f], -1
0x1559  3  mov  rbx, rcx
0x155c  2  jne  0x1565
0x155e  5  call  0x81a3
0x1563  2  jmp  0x1574
0x1565  3  mov  rdx, rbx
0x1568  7  lea  rcx, [rip + 0x20569]
0x156f  5  call  0x821f
0x1574  2  xor  edx, edx
0x1576  2  test  eax, eax
0x1578  4  cmove  rdx, rbx
0x157c  3  mov  rax, rdx
0x157f  4  add  rsp, 0x20
0x1583  1  pop  rbx
0x1584  1  ret  
0x1585  1  int3  
0x1586  1  int3  
0x1587  4  sub  rsp, 0x28
0x158b  5  call  0x154b
0x1590  3  neg  rax
0x1593  2  sbb  eax, eax
0x1595  2  neg  eax
0x1597  2  dec  eax
0x1599  4  add  rsp, 0x28
0x159d  1  ret  
0x159e  1  int3  
0x159f  5  mov  qword ptr [rsp + 0x18], rbx
0x15a4  1  push  rbp
0x15a5  3  mov  rbp, rsp
0x15a8  4  sub  rsp, 0x30
0x15ac  7  mov  rax, qword ptr [rip + 0x1fa85]
0x15b3  10  movabs  rbx, 0x2b992ddfa232
0x15bd  3  cmp  rax, rbx
0x15c0  2  jne  0x1636
0x15c2  5  and  qword ptr [rbp + 0x10], 0
0x15c7  4  lea  rcx, [rbp + 0x10]
0x15cb  6  call  qword ptr [rip + 0x14a47]
0x15d1  4  mov  rax, qword ptr [rbp + 0x10]
0x15d5  4  mov  qword ptr [rbp - 0x10], rax
0x15d9  6  call  qword ptr [rip + 0x14a31]
0x15df  2  mov  eax, eax
0x15e1  4  xor  qword ptr [rbp - 0x10], rax
0x15e5  6  call  qword ptr [rip + 0x14a1d]
0x15eb  2  mov  eax, eax
0x15ed  4  lea  rcx, [rbp + 0x18]
0x15f1  4  xor  qword ptr [rbp - 0x10], rax
0x15f5  6  call  qword ptr [rip + 0x14a05]
0x15fb  3  mov  eax, dword ptr [rbp + 0x18]
0x15fe  4  lea  rcx, [rbp - 0x10]
0x1602  4  shl  rax, 0x20
0x1606  4  xor  rax, qword ptr [rbp + 0x18]
0x160a  4  xor  rax, qword ptr [rbp - 0x10]
0x160e  3  xor  rax, rcx
0x1611  10  movabs  rcx, 0xffffffffffff
0x161b  3  and  rax, rcx
0x161e  10  movabs  rcx, 0x2b992ddfa233
0x1628  3  cmp  rax, rbx
0x162b  4  cmove  rax, rcx
0x162f  7  mov  qword ptr [rip + 0x1fa02], rax
0x1636  5  mov  rbx, qword ptr [rsp + 0x50]
0x163b  3  not  rax
0x163e  7  mov  qword ptr [rip + 0x1f9eb], rax
0x1645  4  add  rsp, 0x30
0x1649  1  pop  rbp
0x164a  1  ret  
0x164b  2  xor  eax, eax
0x164d  1  ret  
0x164e  1  int3  
0x164f  5  mov  eax, 1
0x1654  1  ret  
0x1655  1  int3  
0x1656  1  int3  
0x1657  5  mov  eax, 0x4000
0x165c  1  ret  
0x165d  1  int3  
0x165e  1  int3  
0x165f  7  lea  rcx, [rip + 0x204aa]
0x1666  6  jmp  qword ptr [rip + 0x149b3]
0x166d  1  int3  
0x166e  1  int3  
0x166f  2  mov  al, 1
0x1671  1  ret  
0x1672  1  int3  
0x1673  3  ret  0
0x1676  1  int3  
0x1677  7  lea  rax, [rip + 0x204a2]
0x167e  1  ret  
0x167f  4  sub  rsp, 0x28
0x1683  5  call  0x1023
0x1688  4  or  qword ptr [rax], 0x24
0x168c  5  call  0x1677
0x1691  4  or  qword ptr [rax], 2
0x1695  4  add  rsp, 0x28
0x1699  1  ret  
0x169a  1  int3  
0x169b  2  xor  eax, eax
0x169d  6  cmp  dword ptr [rip + 0x1f971], eax
0x16a3  3  sete  al
0x16a6  1  ret  
0x16a7  7  lea  rax, [rip + 0x215da]
0x16ae  1  ret  
0x16af  7  lea  rax, [rip + 0x215ca]
0x16b6  1  ret  
0x16b7  7  and  dword ptr [rip + 0x2046a], 0
0x16be  1  ret  
0x16bf  5  mov  qword ptr [rsp + 8], rbx
0x16c4  1  push  rbp
0x16c5  8  lea  rbp, [rsp - 0x4c0]
0x16cd  7  sub  rsp, 0x5c0
0x16d4  2  mov  ebx, ecx
0x16d6  5  mov  ecx, 0x17
0x16db  6  call  qword ptr [rip + 0x1497f]
0x16e1  2  test  eax, eax
0x16e3  2  je  0x16e9
0x16e5  2  mov  ecx, ebx
0x16e7  2  int  0x29
0x16e9  5  mov  ecx, 3
0x16ee  5  call  0x16b7
0x16f3  2  xor  edx, edx
0x16f5  4  lea  rcx, [rbp - 0x10]
0x16f9  6  mov  r8d, 0x4d0
0x16ff  5  call  0x1f03
0x1704  4  lea  rcx, [rbp - 0x10]
0x1708  6  call  qword ptr [rip + 0x1491a]
0x170e  7  mov  rbx, qword ptr [rbp + 0xe8]
0x1715  7  lea  rdx, [rbp + 0x4d8]
0x171c  3  mov  rcx, rbx
0x171f  3  xor  r8d, r8d
0x1722  6  call  qword ptr [rip + 0x14908]
0x1728  3  test  rax, rax
0x172b  2  je  0x1769
0x172d  6  and  qword ptr [rsp + 0x38], 0
0x1733  7  lea  rcx, [rbp + 0x4e0]
0x173a  7  mov  rdx, qword ptr [rbp + 0x4d8]
0x1741  3  mov  r9, rax
0x1744  5  mov  qword ptr [rsp + 0x30], rcx
0x1749  3  mov  r8, rbx
0x174c  7  lea  rcx, [rbp + 0x4e8]
0x1753  5  mov  qword ptr [rsp + 0x28], rcx
0x1758  4  lea  rcx, [rbp - 0x10]
0x175c  5  mov  qword ptr [rsp + 0x20], rcx
0x1761  2  xor  ecx, ecx
0x1763  6  call  qword ptr [rip + 0x148cf]
0x1769  7  mov  rax, qword ptr [rbp + 0x4c8]
0x1770  5  lea  rcx, [rsp + 0x50]
0x1775  7  mov  qword ptr [rbp + 0xe8], rax
0x177c  2  xor  edx, edx
0x177e  7  lea  rax, [rbp + 0x4c8]
0x1785  6  mov  r8d, 0x98
0x178b  4  add  rax, 8
0x178f  7  mov  qword ptr [rbp + 0x88], rax
0x1796  5  call  0x1f03
0x179b  7  mov  rax, qword ptr [rbp + 0x4c8]
0x17a2  5  mov  qword ptr [rsp + 0x60], rax
0x17a7  8  mov  dword ptr [rsp + 0x50], 0x40000015
0x17af  8  mov  dword ptr [rsp + 0x54], 1
0x17b7  6  call  qword ptr [rip + 0x14883]
0x17bd  3  cmp  eax, 1
0x17c0  5  lea  rax, [rsp + 0x50]
0x17c5  5  mov  qword ptr [rsp + 0x40], rax
0x17ca  4  lea  rax, [rbp - 0x10]
0x17ce  3  sete  bl
0x17d1  5  mov  qword ptr [rsp + 0x48], rax
0x17d6  2  xor  ecx, ecx
0x17d8  6  call  qword ptr [rip + 0x14872]
0x17de  5  lea  rcx, [rsp + 0x40]
0x17e3  6  call  qword ptr [rip + 0x1485f]
0x17e9  2  test  eax, eax
0x17eb  2  jne  0x17f9
0x17ed  2  test  bl, bl
0x17ef  2  jne  0x17f9
0x17f1  3  lea  ecx, [rax + 3]
0x17f4  5  call  0x16b7
0x17f9  8  mov  rbx, qword ptr [rsp + 0x5d0]
0x1801  7  add  rsp, 0x5c0
0x1808  1  pop  rbp
0x1809  1  ret  
0x180a  1  int3  
0x180b  5  jmp  0x164b
0x1810  1  int3  
0x1811  1  int3  
0x1812  1  int3  
0x1813  4  sub  rsp, 0x28
0x1817  2  xor  ecx, ecx
0x1819  6  call  qword ptr [rip + 0x14849]
0x181f  3  test  rax, rax
0x1822  2  je  0x185d
0x1824  5  mov  ecx, 0x5a4d
0x1829  3  cmp  word ptr [rax], cx
0x182c  2  jne  0x185d
0x182e  4  movsxd  rcx, dword ptr [rax + 0x3c]
0x1832  3  add  rcx, rax
0x1835  6  cmp  dword ptr [rcx], 0x4550
0x183b  2  jne  0x185d
0x183d  5  mov  eax, 0x20b
0x1842  4  cmp  word ptr [rcx + 0x18], ax
0x1846  2  jne  0x185d
0x1848  7  cmp  dword ptr [rcx + 0x84], 0xe
0x184f  2  jbe  0x185d
0x1851  7  cmp  dword ptr [rcx + 0xf8], 0
0x1858  3  setne  al
0x185b  2  jmp  0x185f
0x185d  2  xor  al, al
0x185f  4  add  rsp, 0x28
0x1863  1  ret  
0x1864  1  int3  
0x1865  1  int3  
0x1866  1  int3  
0x1867  7  lea  rcx, [rip + 9]
0x186e  6  jmp  qword ptr [rip + 0x147db]
0x1875  1  int3  
0x1876  1  int3  
0x1877  5  mov  qword ptr [rsp + 8], rbx
0x187c  1  push  rdi
0x187d  4  sub  rsp, 0x20
0x1881  3  mov  rbx, qword ptr [rcx]
0x1884  3  mov  rdi, rcx
0x1887  6  cmp  dword ptr [rbx], 0xe06d7363
0x188d  2  jne  0x18ab
0x188f  4  cmp  dword ptr [rbx + 0x18], 4
0x1893  2  jne  0x18ab
0x1895  3  mov  edx, dword ptr [rbx + 0x20]
0x1898  6  lea  eax, [rdx - 0x19930520]
0x189e  3  cmp  eax, 2
0x18a1  2  jbe  0x18b8
0x18a3  6  cmp  edx, 0x1994000
0x18a9  2  je  0x18b8
0x18ab  5  mov  rbx, qword ptr [rsp + 0x30]
0x18b0  2  xor  eax, eax
0x18b2  4  add  rsp, 0x20
0x18b6  1  pop  rdi
0x18b7  1  ret  
0x18b8  5  call  0x1e97
0x18bd  3  mov  qword ptr [rax], rbx
0x18c0  4  mov  rbx, qword ptr [rdi + 8]
0x18c4  5  call  0x1eab
0x18c9  3  mov  qword ptr [rax], rbx
0x18cc  5  call  0x83df
0x18d1  1  int3  
0x18d2  1  int3  
0x18d3  5  mov  qword ptr [rsp + 8], rbx
0x18d8  1  push  rdi
0x18d9  4  sub  rsp, 0x20
0x18dd  7  lea  rbx, [rip + 0x1d42c]
0x18e4  7  lea  rdi, [rip + 0x1d425]
0x18eb  2  jmp  0x18ff
0x18ed  3  mov  rax, qword ptr [rbx]
0x18f0  3  test  rax, rax
0x18f3  2  je  0x18fb
0x18f5  6  call  qword ptr [rip + 0x1496d]
0x18fb  4  add  rbx, 8
0x18ff  3  cmp  rbx, rdi
0x1902  2  jb  0x18ed
0x1904  5  mov  rbx, qword ptr [rsp + 0x30]
0x1909  4  add  rsp, 0x20
0x190d  1  pop  rdi
0x190e  1  ret  
0x190f  5  mov  qword ptr [rsp + 8], rbx
0x1914  1  push  rdi
0x1915  4  sub  rsp, 0x20
0x1919  7  lea  rbx, [rip + 0x1d400]
0x1920  7  lea  rdi, [rip + 0x1d3f9]
0x1927  2  jmp  0x193b
0x1929  3  mov  rax, qword ptr [rbx]
0x192c  3  test  rax, rax
0x192f  2  je  0x1937
0x1931  6  call  qword ptr [rip + 0x14931]
0x1937  4  add  rbx, 8
0x193b  3  cmp  rbx, rdi
0x193e  2  jb  0x1929
0x1940  5  mov  rbx, qword ptr [rsp + 0x30]
0x1945  4  add  rsp, 0x20
0x1949  1  pop  rdi
0x194a  1  ret  
0x194b  5  mov  qword ptr [rsp + 0x10], rbx
0x1950  5  mov  qword ptr [rsp + 0x18], rsi
0x1955  1  push  rdi
0x1956  4  sub  rsp, 0x10
0x195a  2  xor  eax, eax
0x195c  2  xor  ecx, ecx
0x195e  2  cpuid  
0x1960  3  mov  r8d, ecx
0x1963  3  xor  r11d, r11d
0x1966  3  mov  r10d, edx
0x1969  7  xor  r8d, 0x6c65746e
0x1970  7  xor  r10d, 0x49656e69
0x1977  3  mov  r9d, ebx
0x197a  2  mov  esi, eax
0x197c  2  xor  ecx, ecx
0x197e  4  lea  eax, [r11 + 1]
0x1982  3  or  r10d, r8d
0x1985  2  cpuid  
0x1987  7  xor  r9d, 0x756e6547
0x198e  3  mov  dword ptr [rsp], eax
0x1991  3  or  r10d, r9d
0x1994  4  mov  dword ptr [rsp + 4], ebx
0x1998  2  mov  edi, ecx
0x199a  4  mov  dword ptr [rsp + 8], ecx
0x199e  4  mov  dword ptr [rsp + 0xc], edx
0x19a2  2  jne  0x19ff
0x19a4  8  or  qword ptr [rip + 0x1f67c], 0xffffffffffffffff
0x19ac  5  and  eax, 0xfff3ff0
0x19b1  11  mov  qword ptr [rip + 0x1f664], 0x8000
0x19bc  5  cmp  eax, 0x106c0
0x19c1  2  je  0x19eb
0x19c3  5  cmp  eax, 0x20660
0x19c8  2  je  0x19eb
0x19ca  5  cmp  eax, 0x20670
0x19cf  2  je  0x19eb
0x19d1  5  add  eax, 0xfffcf9b0
0x19d6  3  cmp  eax, 0x20
0x19d9  2  ja  0x19ff
0x19db  10  movabs  rcx, 0x100010001
0x19e5  4  bt  rcx, rax
0x19e9  2  jae  0x19ff
0x19eb  7  mov  r8d, dword ptr [rip + 0x2013a]
0x19f2  4  or  r8d, 1
0x19f6  7  mov  dword ptr [rip + 0x2012f], r8d
0x19fd  2  jmp  0x1a06
0x19ff  7  mov  r8d, dword ptr [rip + 0x20126]
0x1a06  5  mov  eax, 7
0x1a0b  4  lea  r9d, [rax - 5]
0x1a0f  2  cmp  esi, eax
0x1a11  2  jl  0x1a39
0x1a13  2  xor  ecx, ecx
0x1a15  2  cpuid  
0x1a17  3  mov  dword ptr [rsp], eax
0x1a1a  3  mov  r11d, ebx
0x1a1d  4  mov  dword ptr [rsp + 4], ebx
0x1a21  4  mov  dword ptr [rsp + 8], ecx
0x1a25  4  mov  dword ptr [rsp + 0xc], edx
0x1a29  4  bt  ebx, 9
0x1a2d  2  jae  0x1a39
0x1a2f  3  or  r8d, r9d
0x1a32  7  mov  dword ptr [rip + 0x200f3], r8d
0x1a39  10  mov  dword ptr [rip + 0x1f5d5], 1
0x1a43  7  mov  dword ptr [rip + 0x1f5d2], r9d
0x1a4a  4  bt  edi, 0x14
0x1a4e  6  jae  0x1ae5
0x1a54  7  mov  dword ptr [rip + 0x1f5bd], r9d
0x1a5b  5  mov  ebx, 6
0x1a60  6  mov  dword ptr [rip + 0x1f5b6], ebx
0x1a66  4  bt  edi, 0x1b
0x1a6a  2  jae  0x1ae5
0x1a6c  4  bt  edi, 0x1c
0x1a70  2  jae  0x1ae5
0x1a72  2  xor  ecx, ecx
0x1a74  3  xgetbv  
0x1a77  4  shl  rdx, 0x20
0x1a7b  3  or  rdx, rax
0x1a7e  5  mov  qword ptr [rsp + 0x20], rdx
0x1a83  5  mov  rax, qword ptr [rsp + 0x20]
0x1a88  2  and  al, bl
0x1a8a  2  cmp  al, bl
0x1a8c  2  jne  0x1ae5
0x1a8e  6  mov  eax, dword ptr [rip + 0x1f588]
0x1a94  3  or  eax, 8
0x1a97  10  mov  dword ptr [rip + 0x1f577], 3
0x1aa1  6  mov  dword ptr [rip + 0x1f575], eax
0x1aa7  4  test  r11b, 0x20
0x1aab  2  je  0x1ae5
0x1aad  3  or  eax, 0x20
0x1ab0  10  mov  dword ptr [rip + 0x1f55e], 5
0x1aba  6  mov  dword ptr [rip + 0x1f55c], eax
0x1ac0  5  mov  eax, 0xd0030000
0x1ac5  3  and  r11d, eax
0x1ac8  3  cmp  r11d, eax
0x1acb  2  jne  0x1ae5
0x1acd  5  mov  rax, qword ptr [rsp + 0x20]
0x1ad2  2  and  al, 0xe0
0x1ad4  2  cmp  al, 0xe0
0x1ad6  2  jne  0x1ae5
0x1ad8  7  or  dword ptr [rip + 0x1f53d], 0x40
0x1adf  6  mov  dword ptr [rip + 0x1f533], ebx
0x1ae5  5  mov  rbx, qword ptr [rsp + 0x28]
0x1aea  2  xor  eax, eax
0x1aec  5  mov  rsi, qword ptr [rsp + 0x30]
0x1af1  4  add  rsp, 0x10
0x1af5  1  pop  rdi
0x1af6  1  ret  
0x1af7  2  xor  eax, eax
0x1af9  6  cmp  dword ptr [rip + 0x21179], eax
0x1aff  3  setne  al
0x1b02  1  ret  
0x1b03  5  mov  qword ptr [rsp + 8], rbx
0x1b08  5  mov  qword ptr [rsp + 0x10], rbp
0x1b0d  5  mov  qword ptr [rsp + 0x18], rsi
0x1b12  1  push  rdi
0x1b13  2  push  r12
0x1b15  2  push  r13
0x1b17  2  push  r14
0x1b19  2  push  r15
0x1b1b  4  sub  rsp, 0x40
0x1b1f  3  mov  rbp, rcx
0x1b22  3  mov  r15, r9
0x1b25  3  mov  rcx, r8
0x1b28  3  mov  rsi, r8
0x1b2b  3  mov  r13, rdx
0x1b2e  5  call  0x22d7
0x1b33  4  mov  r12, qword ptr [r15 + 8]
0x1b37  3  mov  r14, qword ptr [r15]
0x1b3a  4  mov  rbx, qword ptr [r15 + 0x38]
0x1b3e  3  sub  r14, r12
0x1b41  4  test  byte ptr [rbp + 4], 0x66
0x1b45  4  mov  edi, dword ptr [r15 + 0x48]
0x1b49  6  jne  0x1c2b
0x1b4f  5  mov  qword ptr [rsp + 0x30], rbp
0x1b54  5  mov  qword ptr [rsp + 0x38], rsi
0x1b59  2  cmp  edi, dword ptr [rbx]
0x1b5b  6  jae  0x1cd7
0x1b61  2  mov  esi, edi
0x1b63  3  add  rsi, rsi
0x1b66  4  mov  eax, dword ptr [rbx + rsi*8 + 4]
0x1b6a  3  cmp  r14, rax
0x1b6d  6  jb  0x1c1d
0x1b73  4  mov  eax, dword ptr [rbx + rsi*8 + 8]
0x1b77  3  cmp  r14, rax
0x1b7a  6  jae  0x1c1d
0x1b80  5  cmp  dword ptr [rbx + rsi*8 + 0x10], 0
0x1b85  6  je  0x1c1d
0x1b8b  5  cmp  dword ptr [rbx + rsi*8 + 0xc], 1
0x1b90  2  je  0x1ba9
0x1b92  4  mov  eax, dword ptr [rbx + rsi*8 + 0xc]
0x1b96  5  lea  rcx, [rsp + 0x30]
0x1b9b  3  add  rax, r12
0x1b9e  3  mov  rdx, r13
0x1ba1  2  call  rax
0x1ba3  2  test  eax, eax
0x1ba5  2  js  0x1c24
0x1ba7  2  jle  0x1c1d
0x1ba9  7  cmp  dword ptr [rbp], 0xe06d7363
0x1bb0  2  jne  0x1bda
0x1bb2  8  cmp  qword ptr [rip + 0x14776], 0
0x1bba  2  je  0x1bda
0x1bbc  7  lea  rcx, [rip + 0x1476d]
0x1bc3  5  call  0x14b33
0x1bc8  2  test  eax, eax
0x1bca  2  je  0x1bda
0x1bcc  5  mov  edx, 1
0x1bd1  3  mov  rcx, rbp
0x1bd4  6  call  qword ptr [rip + 0x14756]
0x1bda  4  mov  ecx, dword ptr [rbx + rsi*8 + 0x10]
0x1bde  6  mov  r8d, 1
0x1be4  3  add  rcx, r12
0x1be7  3  mov  rdx, r13
0x1bea  5  call  0x22a3
0x1bef  4  mov  rax, qword ptr [r15 + 0x40]
0x1bf3  3  mov  r8, rbp
0x1bf6  4  mov  edx, dword ptr [rbx + rsi*8 + 0x10]
0x1bfa  3  mov  rcx, r13
0x1bfd  4  mov  r9d, dword ptr [rbp]
0x1c01  3  add  rdx, r12
0x1c04  5  mov  qword ptr [rsp + 0x28], rax
0x1c09  4  mov  rax, qword ptr [r15 + 0x28]
0x1c0d  5  mov  qword ptr [rsp + 0x20], rax
0x1c12  6  call  qword ptr [rip + 0x14460]
0x1c18  5  call  0x22d3
0x1c1d  2  inc  edi
0x1c1f  5  jmp  0x1b59
0x1c24  2  xor  eax, eax
0x1c26  5  jmp  0x1cdc
0x1c2b  4  mov  rsi, qword ptr [r15 + 0x20]
0x1c2f  3  sub  rsi, r12
0x1c32  5  jmp  0x1ccd
0x1c37  2  mov  ecx, edi
0x1c39  3  add  rcx, rcx
0x1c3c  4  mov  eax, dword ptr [rbx + rcx*8 + 4]
0x1c40  3  cmp  r14, rax
0x1c43  6  jb  0x1ccb
0x1c49  4  mov  eax, dword ptr [rbx + rcx*8 + 8]
0x1c4d  3  cmp  r14, rax
0x1c50  2  jae  0x1ccb
0x1c52  4  mov  r10d, dword ptr [rbp + 4]
0x1c56  4  and  r10d, 0x20
0x1c5a  2  je  0x1ca0
0x1c5c  3  xor  r9d, r9d
0x1c5f  2  test  edx, edx
0x1c61  2  je  0x1c9b
0x1c63  3  mov  r8d, r9d
0x1c66  3  add  r8, r8
0x1c69  5  mov  eax, dword ptr [rbx + r8*8 + 4]
0x1c6e  3  cmp  rsi, rax
0x1c71  2  jb  0x1c93
0x1c73  5  mov  eax, dword ptr [rbx + r8*8 + 8]
0x1c78  3  cmp  rsi, rax
0x1c7b  2  jae  0x1c93
0x1c7d  4  mov  eax, dword ptr [rbx + rcx*8 + 0x10]
0x1c81  5  cmp  dword ptr [rbx + r8*8 + 0x10], eax
0x1c86  2  jne  0x1c93
0x1c88  4  mov  eax, dword ptr [rbx + rcx*8 + 0xc]
0x1c8c  5  cmp  dword ptr [rbx + r8*8 + 0xc], eax
0x1c91  2  je  0x1c9b
0x1c93  3  inc  r9d
0x1c96  3  cmp  r9d, edx
0x1c99  2  jb  0x1c63
0x1c9b  3  cmp  r9d, edx
0x1c9e  2  jne  0x1cd7
0x1ca0  4  mov  eax, dword ptr [rbx + rcx*8 + 0x10]
0x1ca4  2  test  eax, eax
0x1ca6  2  je  0x1cb4
0x1ca8  3  cmp  rsi, rax
0x1cab  2  jne  0x1ccb
0x1cad  3  test  r10d, r10d
0x1cb0  2  jne  0x1cd7
0x1cb2  2  jmp  0x1ccb
0x1cb4  3  lea  eax, [rdi + 1]
0x1cb7  3  mov  rdx, r13
0x1cba  4  mov  dword ptr [r15 + 0x48], eax
0x1cbe  5  mov  r8d, dword ptr [rbx + rcx*8 + 0xc]
0x1cc3  2  mov  cl, 1
0x1cc5  3  add  r8, r12
0x1cc8  3  call  r8
0x1ccb  2  inc  edi
0x1ccd  2  mov  edx, dword ptr [rbx]
0x1ccf  2  cmp  edi, edx
0x1cd1  6  jb  0x1c37
0x1cd7  5  mov  eax, 1
0x1cdc  5  lea  r11, [rsp + 0x40]
0x1ce1  4  mov  rbx, qword ptr [r11 + 0x30]
0x1ce5  4  mov  rbp, qword ptr [r11 + 0x38]
0x1ce9  4  mov  rsi, qword ptr [r11 + 0x40]
0x1ced  3  mov  rsp, r11
0x1cf0  2  pop  r15
0x1cf2  2  pop  r14
0x1cf4  2  pop  r13
0x1cf6  2  pop  r12
0x1cf8  1  pop  rdi
0x1cf9  1  ret  
0x1cfa  1  int3  
0x1cfb  4  sub  rsp, 0x28
0x1cff  5  call  0x2477
0x1d04  2  test  al, al
0x1d06  2  jne  0x1d0c
0x1d08  2  xor  al, al
0x1d0a  2  jmp  0x1d1e
0x1d0c  5  call  0x240b
0x1d11  2  test  al, al
0x1d13  2  jne  0x1d1c
0x1d15  5  call  0x24bf
0x1d1a  2  jmp  0x1d08
0x1d1c  2  mov  al, 1
0x1d1e  4  add  rsp, 0x28
0x1d22  1  ret  
0x1d23  4  sub  rsp, 0x28
0x1d27  2  test  cl, cl
0x1d29  2  jne  0x1d35
0x1d2b  5  call  0x2453
0x1d30  5  call  0x24bf
0x1d35  2  mov  al, 1
0x1d37  4  add  rsp, 0x28
0x1d3b  1  ret  
0x1d3c  1  int3  
0x1d3d  1  int3  
0x1d3e  1  int3  
0x1d3f  3  cmp  rcx, rdx
0x1d42  2  je  0x1d5d
0x1d44  4  add  rdx, 9
0x1d48  4  lea  rax, [rcx + 9]
0x1d4c  3  sub  rdx, rax
0x1d4f  2  mov  cl, byte ptr [rax]
0x1d51  3  cmp  cl, byte ptr [rax + rdx]
0x1d54  2  jne  0x1d60
0x1d56  3  inc  rax
0x1d59  2  test  cl, cl
0x1d5b  2  jne  0x1d4f
0x1d5d  2  xor  eax, eax
0x1d5f  1  ret  
0x1d60  2  sbb  eax, eax
0x1d62  3  or  eax, 1
0x1d65  1  ret  
0x1d66  1  int3  
0x1d67  3  test  rcx, rcx
0x1d6a  2  je  0x1dd3
0x1d6c  4  mov  byte ptr [rsp + 0x10], dl
0x1d70  4  sub  rsp, 0x48
0x1d74  6  cmp  dword ptr [rcx], 0xe06d7363
0x1d7a  2  jne  0x1dcf
0x1d7c  4  cmp  dword ptr [rcx + 0x18], 4
0x1d80  2  jne  0x1dcf
0x1d82  3  mov  eax, dword ptr [rcx + 0x20]
0x1d85  5  sub  eax, 0x19930520
0x1d8a  3  cmp  eax, 2
0x1d8d  2  ja  0x1dcf
0x1d8f  4  mov  rax, qword ptr [rcx + 0x30]
0x1d93  3  test  rax, rax
0x1d96  2  je  0x1dcf
0x1d98  4  movsxd  rdx, dword ptr [rax + 4]
0x1d9c  2  test  edx, edx
0x1d9e  2  je  0x1db1
0x1da0  4  add  rdx, qword ptr [rcx + 0x38]
0x1da4  4  mov  rcx, qword ptr [rcx + 0x28]
0x1da8  5  call  0x1dd7
0x1dad  2  jmp  0x1dcf
0x1daf  2  jmp  0x1dcf
0x1db1  3  test  byte ptr [rax], 0x10
0x1db4  2  je  0x1dcf
0x1db6  4  mov  rax, qword ptr [rcx + 0x28]
0x1dba  3  mov  rcx, qword ptr [rax]
0x1dbd  3  test  rcx, rcx
0x1dc0  2  je  0x1dcf
0x1dc2  3  mov  rax, qword ptr [rcx]
0x1dc5  4  mov  rax, qword ptr [rax + 0x10]
0x1dc9  6  call  qword ptr [rip + 0x14499]
0x1dcf  4  add  rsp, 0x48
0x1dd3  1  ret  
0x1dd4  1  int3  
0x1dd5  1  int3  
0x1dd6  1  int3  
0x1dd7  3  jmp  rdx
0x1dda  1  int3  
0x1ddb  2  push  rbx
0x1ddd  4  sub  rsp, 0x20
0x1de1  3  mov  rbx, rcx
0x1de4  5  call  0x232f
0x1de9  4  mov  rdx, qword ptr [rax + 0x58]
0x1ded  2  jmp  0x1df8
0x1def  3  cmp  qword ptr [rdx], rbx
0x1df2  2  je  0x1e06
0x1df4  4  mov  rdx, qword ptr [rdx + 8]
0x1df8  3  test  rdx, rdx
0x1dfb  2  jne  0x1def
0x1dfd  3  lea  eax, [rdx + 1]
0x1e00  4  add  rsp, 0x20
0x1e04  1  pop  rbx
0x1e05  1  ret  
0x1e06  2  xor  eax, eax
0x1e08  2  jmp  0x1e00
0x1e0a  1  int3  
0x1e0b  3  movsxd  rax, dword ptr [rdx]
0x1e0e  3  add  rax, rcx
0x1e11  4  cmp  dword ptr [rdx + 4], 0
0x1e15  2  jl  0x1e2d
0x1e17  4  movsxd  r9, dword ptr [rdx + 4]
0x1e1b  4  movsxd  rdx, dword ptr [rdx + 8]
0x1e1f  4  mov  rcx, qword ptr [r9 + rcx]
0x1e23  4  movsxd  r8, dword ptr [rdx + rcx]
0x1e27  3  add  r8, r9
0x1e2a  3  add  rax, r8
0x1e2d  1  ret  
0x1e2e  1  int3  
0x1e2f  5  mov  qword ptr [rsp + 8], rbx
0x1e34  1  push  rdi
0x1e35  4  sub  rsp, 0x20
0x1e39  3  mov  rdi, qword ptr [rcx]
0x1e3c  3  mov  rbx, rcx
0x1e3f  6  cmp  dword ptr [rdi], 0xe0434352
0x1e45  2  je  0x1e59
0x1e47  6  cmp  dword ptr [rdi], 0xe0434f4d
0x1e4d  2  je  0x1e59
0x1e4f  6  cmp  dword ptr [rdi], 0xe06d7363
0x1e55  2  je  0x1e79
0x1e57  2  jmp  0x1e6c
0x1e59  5  call  0x232f
0x1e5e  4  cmp  dword ptr [rax + 0x30], 0
0x1e62  2  jle  0x1e6c
0x1e64  5  call  0x232f
0x1e69  3  dec  dword ptr [rax + 0x30]
0x1e6c  5  mov  rbx, qword ptr [rsp + 0x30]
0x1e71  2  xor  eax, eax
0x1e73  4  add  rsp, 0x20
0x1e77  1  pop  rdi
0x1e78  1  ret  
0x1e79  5  call  0x232f
0x1e7e  4  mov  qword ptr [rax + 0x20], rdi
0x1e82  4  mov  rbx, qword ptr [rbx + 8]
0x1e86  5  call  0x232f
0x1e8b  4  mov  qword ptr [rax + 0x28], rbx
0x1e8f  5  call  0x83df
0x1e94  1  int3  
0x1e95  1  int3  
0x1e96  1  int3  
0x1e97  4  sub  rsp, 0x28
0x1e9b  5  call  0x232f
0x1ea0  4  add  rax, 0x20
0x1ea4  4  add  rsp, 0x28
0x1ea8  1  ret  
0x1ea9  1  int3  
0x1eaa  1  int3  
0x1eab  4  sub  rsp, 0x28
0x1eaf  5  call  0x232f
0x1eb4  4  add  rax, 0x28
0x1eb8  4  add  rsp, 0x28
0x1ebc  1  ret  
0x1ebd  1  int3  
0x1ebe  1  int3  
0x1ebf  4  sub  rsp, 0x28
0x1ec3  5  call  0x83df
0x1ec8  1  int3  
0x1ec9  1  int3  
0x1eca  1  int3  
0x1ecb  1  int3  
0x1ecc  1  int3  
0x1ecd  1  int3  
0x1ece  1  int3  
0x1ecf  1  int3  
0x1ed0  1  int3  
0x1ed1  1  int3  
0x1ed2  1  int3  
0x1ed3  1  int3  
0x1ed4  1  int3  
0x1ed5  1  int3  
0x1ed6  1  int3  
0x1ed7  1  int3  
0x1ed8  1  int3  
0x1ed9  10  nop  word ptr [rax + rax]
0x1ee3  1  push  rdi
0x1ee4  2  mov  eax, edx
0x1ee6  3  mov  rdi, rcx
0x1ee9  3  mov  rcx, r8
0x1eec  2  rep stosb  byte ptr [rdi], al
0x1eee  3  mov  rax, r9
0x1ef1  1  pop  rdi
0x1ef2  1  ret  
0x1ef3  1  int3  
0x1ef4  1  int3  
0x1ef5  1  int3  
0x1ef6  1  int3  
0x1ef7  1  int3  
0x1ef8  1  int3  
0x1ef9  10  nop  word ptr [rax + rax]
0x1f03  3  mov  rax, rcx
0x1f06  3  mov  r9, rcx
0x1f09  7  lea  r10, [rip - 0x1f0d]
0x1f10  3  movzx  edx, dl
0x1f13  10  movabs  r11, 0x101010101010101
0x1f1d  4  imul  r11, rdx
0x1f21  5  movq  xmm0, r11
0x1f26  4  cmp  r8, 0xf
0x1f2a  6  ja  0x1fb3
0x1f30  3  nop  dword ptr [rax]
0x1f33  3  add  rcx, r8
0x1f36  8  mov  r9d, dword ptr [r10 + r8*4 + 0x25000]
0x1f3e  3  add  r9, r10
0x1f41  3  jmp  r9
0x1f44  4  mov  qword ptr [rcx - 0xf], r11
0x1f48  4  mov  dword ptr [rcx - 7], r11d
0x1f4c  5  mov  word ptr [rcx - 3], r11w
0x1f51  4  mov  byte ptr [rcx - 1], r11b
0x1f55  1  ret  
0x1f56  4  mov  qword ptr [rcx - 0xe], r11
0x1f5a  4  mov  dword ptr [rcx - 6], r11d
0x1f5e  5  mov  word ptr [rcx - 2], r11w
0x1f63  1  ret  
0x1f64  15  nop  word ptr [rax + rax]
0x1f73  4  mov  qword ptr [rcx - 0xd], r11
0x1f77  4  mov  dword ptr [rcx - 5], r11d
0x1f7b  4  mov  byte ptr [rcx - 1], r11b
0x1f7f  1  ret  
0x1f80  3  nop  dword ptr [rax]
0x1f83  4  mov  qword ptr [rcx - 0xc], r11
0x1f87  4  mov  dword ptr [rcx - 4], r11d
0x1f8b  1  ret  
0x1f8c  4  mov  qword ptr [rcx - 0xb], r11
0x1f90  5  mov  word ptr [rcx - 3], r11w
0x1f95  4  mov  byte ptr [rcx - 1], r11b
0x1f99  1  ret  
0x1f9a  4  mov  qword ptr [rcx - 9], r11
0x1f9e  4  mov  byte ptr [rcx - 1], r11b
0x1fa2  1  ret  
0x1fa3  4  mov  qword ptr [rcx - 0xa], r11
0x1fa7  5  mov  word ptr [rcx - 2], r11w
0x1fac  1  ret  
0x1fad  4  mov  qword ptr [rcx - 8], r11
0x1fb1  1  ret  
0x1fb2  1  nop  
0x1fb3  4  punpcklqdq  xmm0, xmm0
0x1fb7  4  cmp  r8, 0x20
0x1fbb  2  ja  0x1fc9
0x1fbd  4  movdqu  xmmword ptr [rcx], xmm0
0x1fc1  7  movdqu  xmmword ptr [rcx + r8 - 0x10], xmm0
0x1fc8  1  ret  
0x1fc9  7  cmp  dword ptr [rip + 0x1f048], 3
0x1fd0  6  jb  0x21b3
0x1fd6  7  cmp  r8, qword ptr [rip + 0x1f043]
0x1fdd  2  jbe  0x1ff5
0x1fdf  7  cmp  r8, qword ptr [rip + 0x1f042]
0x1fe6  2  ja  0x1ff5
0x1fe8  7  test  byte ptr [rip + 0x1fb3d], 2
0x1fef  6  jne  0x1ee3
0x1ff5  6  vinsertf128  ymm0, ymm0, xmm0, 1
0x1ffb  3  mov  r9, rcx
0x1ffe  4  and  r9, 0x1f
0x2002  4  sub  r9, 0x20
0x2006  3  sub  rcx, r9
0x2009  3  sub  rdx, r9
0x200c  3  add  r8, r9
0x200f  7  cmp  r8, 0x100
0x2016  2  jbe  0x207d
0x2018  7  cmp  r8, qword ptr [rip + 0x1f009]
0x201f  6  ja  0x20f3
0x2025  14  nop  word ptr [rax + rax]
0x2033  4  vmovdqa  ymmword ptr [rcx], ymm0
0x2037  5  vmovdqa  ymmword ptr [rcx + 0x20], ymm0
0x203c  5  vmovdqa  ymmword ptr [rcx + 0x40], ymm0
0x2041  5  vmovdqa  ymmword ptr [rcx + 0x60], ymm0
0x2046  8  vmovdqa  ymmword ptr [rcx + 0x80], ymm0
0x204e  8  vmovdqa  ymmword ptr [rcx + 0xa0], ymm0
0x2056  8  vmovdqa  ymmword ptr [rcx + 0xc0], ymm0
0x205e  8  vmovdqa  ymmword ptr [rcx + 0xe0], ymm0
0x2066  7  add  rcx, 0x100
0x206d  7  sub  r8, 0x100
0x2074  7  cmp  r8, 0x100
0x207b  2  jae  0x2033
0x207d  4  lea  r9, [r8 + 0x1f]
0x2081  4  and  r9, 0xffffffffffffffe0
0x2085  3  mov  r11, r9
0x2088  4  shr  r11, 5
0x208c  8  mov  r11d, dword ptr [r10 + r11*4 + 0x25040]
0x2094  3  add  r11, r10
0x2097  3  jmp  r11
0x209a  10  vmovdqu  ymmword ptr [rcx + r9 - 0x100], ymm0
0x20a4  10  vmovdqu  ymmword ptr [rcx + r9 - 0xe0], ymm0
0x20ae  10  vmovdqu  ymmword ptr [rcx + r9 - 0xc0], ymm0
0x20b8  10  vmovdqu  ymmword ptr [rcx + r9 - 0xa0], ymm0
0x20c2  7  vmovdqu  ymmword ptr [rcx + r9 - 0x80], ymm0
0x20c9  7  vmovdqu  ymmword ptr [rcx + r9 - 0x60], ymm0
0x20d0  7  vmovdqu  ymmword ptr [rcx + r9 - 0x40], ymm0
0x20d7  7  vmovdqu  ymmword ptr [rcx + r8 - 0x20], ymm0
0x20de  4  vmovdqu  ymmword ptr [rax], ymm0
0x20e2  3  vzeroupper  
0x20e5  1  ret  
0x20e6  13  nop  word ptr [rax + rax]
0x20f3  4  vmovntdq  ymmword ptr [rcx], ymm0
0x20f7  5  vmovntdq  ymmword ptr [rcx + 0x20], ymm0
0x20fc  5  vmovntdq  ymmword ptr [rcx + 0x40], ymm0
0x2101  5  vmovntdq  ymmword ptr [rcx + 0x60], ymm0
0x2106  8  vmovntdq  ymmword ptr [rcx + 0x80], ymm0
0x210e  8  vmovntdq  ymmword ptr [rcx + 0xa0], ymm0
0x2116  8  vmovntdq  ymmword ptr [rcx + 0xc0], ymm0
0x211e  8  vmovntdq  ymmword ptr [rcx + 0xe0], ymm0
0x2126  7  add  rcx, 0x100
0x212d  7  sub  r8, 0x100
0x2134  7  cmp  r8, 0x100
0x213b  2  jae  0x20f3
0x213d  4  lea  r9, [r8 + 0x1f]
0x2141  4  and  r9, 0xffffffffffffffe0
0x2145  3  mov  r11, r9
0x2148  4  shr  r11, 5
0x214c  8  mov  r11d, dword ptr [r10 + r11*4 + 0x25064]
0x2154  3  add  r11, r10
0x2157  3  jmp  r11
0x215a  10  vmovntdq  ymmword ptr [rcx + r9 - 0x100], ymm0
0x2164  10  vmovntdq  ymmword ptr [rcx + r9 - 0xe0], ymm0
0x216e  10  vmovntdq  ymmword ptr [rcx + r9 - 0xc0], ymm0
0x2178  10  vmovntdq  ymmword ptr [rcx + r9 - 0xa0], ymm0
0x2182  7  vmovntdq  ymmword ptr [rcx + r9 - 0x80], ymm0
0x2189  7  vmovntdq  ymmword ptr [rcx + r9 - 0x60], ymm0
0x2190  7  vmovntdq  ymmword ptr [rcx + r9 - 0x40], ymm0
0x2197  7  vmovdqu  ymmword ptr [rcx + r8 - 0x20], ymm0
0x219e  4  vmovdqu  ymmword ptr [rax], ymm0
0x21a2  3  sfence  
0x21a5  3  vzeroupper  
0x21a8  1  ret  
0x21a9  10  nop  word ptr [rax + rax]
0x21b3  7  cmp  r8, qword ptr [rip + 0x1ee66]
0x21ba  2  jbe  0x21c9
0x21bc  7  test  byte ptr [rip + 0x1f969], 2
0x21c3  6  jne  0x1ee3
0x21c9  3  mov  r9, rcx
0x21cc  4  and  r9, 0xf
0x21d0  4  sub  r9, 0x10
0x21d4  3  sub  rcx, r9
0x21d7  3  sub  rdx, r9
0x21da  3  add  r8, r9
0x21dd  7  cmp  r8, 0x80
0x21e4  2  jbe  0x2231
0x21e6  13  nop  word ptr [rax + rax]
0x21f3  4  movdqa  xmmword ptr [rcx], xmm0
0x21f7  5  movdqa  xmmword ptr [rcx + 0x10], xmm0
0x21fc  5  movdqa  xmmword ptr [rcx + 0x20], xmm0
0x2201  5  movdqa  xmmword ptr [rcx + 0x30], xmm0
0x2206  5  movdqa  xmmword ptr [rcx + 0x40], xmm0
0x220b  5  movdqa  xmmword ptr [rcx + 0x50], xmm0
0x2210  5  movdqa  xmmword ptr [rcx + 0x60], xmm0
0x2215  5  movdqa  xmmword ptr [rcx + 0x70], xmm0
0x221a  7  add  rcx, 0x80
0x2221  7  sub  r8, 0x80
0x2228  7  cmp  r8, 0x80
0x222f  2  jae  0x21f3
0x2231  4  lea  r9, [r8 + 0xf]
0x2235  4  and  r9, 0xfffffffffffffff0
0x2239  3  mov  r11, r9
0x223c  4  shr  r11, 4
0x2240  8  mov  r11d, dword ptr [r10 + r11*4 + 0x25088]
0x2248  3  add  r11, r10
0x224b  3  jmp  r11
0x224e  7  movdqu  xmmword ptr [rcx + r9 - 0x80], xmm0
0x2255  7  movdqu  xmmword ptr [rcx + r9 - 0x70], xmm0
0x225c  7  movdqu  xmmword ptr [rcx + r9 - 0x60], xmm0
0x2263  7  movdqu  xmmword ptr [rcx + r9 - 0x50], xmm0
0x226a  7  movdqu  xmmword ptr [rcx + r9 - 0x40], xmm0
0x2271  7  movdqu  xmmword ptr [rcx + r9 - 0x30], xmm0
0x2278  7  movdqu  xmmword ptr [rcx + r9 - 0x20], xmm0
0x227f  7  movdqu  xmmword ptr [rcx + r8 - 0x10], xmm0
0x2286  4  movdqu  xmmword ptr [rax], xmm0
0x228a  1  ret  
0x228b  1  int3  
0x228c  1  int3  
0x228d  1  int3  
0x228e  1  int3  
0x228f  1  int3  
0x2290  1  int3  
0x2291  1  int3  
0x2292  1  int3  
0x2293  1  int3  
0x2294  1  int3  
0x2295  1  int3  
0x2296  1  int3  
0x2297  1  int3  
0x2298  1  int3  
0x2299  10  nop  word ptr [rax + rax]
0x22a3  5  mov  qword ptr [rsp + 8], rcx
0x22a8  5  mov  qword ptr [rsp + 0x18], rdx
0x22ad  5  mov  dword ptr [rsp + 0x10], r8d
0x22b2  7  mov  r9, 0x19930520
0x22b9  2  jmp  0x22c3
0x22bb  1  int3  
0x22bc  1  int3  
0x22bd  1  int3  
0x22be  1  int3  
0x22bf  1  int3  
0x22c0  1  int3  
0x22c1  2  nop  
0x22c3  1  ret  
0x22c4  1  int3  
0x22c5  1  int3  
0x22c6  1  int3  
0x22c7  1  int3  
0x22c8  1  int3  
0x22c9  1  int3  
0x22ca  9  nop  word ptr [rax + rax]
0x22d3  1  ret  
0x22d4  1  int3  
0x22d5  1  int3  
0x22d6  1  int3  
0x22d7  7  mov  rax, qword ptr [rip + 0x13f7a]
0x22de  7  lea  rdx, [rip - 0xc72]
0x22e5  3  cmp  rax, rdx
0x22e8  2  je  0x230d
0x22ea  9  mov  rax, qword ptr gs:[0x30]
0x22f3  7  mov  rcx, qword ptr [rcx + 0x98]
0x22fa  4  cmp  rcx, qword ptr [rax + 0x10]
0x22fe  2  jb  0x2306
0x2300  4  cmp  rcx, qword ptr [rax + 8]
0x2304  2  jbe  0x230d
0x2306  5  mov  ecx, 0xd
0x230b  2  int  0x29
0x230d  1  ret  
0x230e  1  int3  
0x230f  4  sub  rsp, 0x28
0x2313  3  test  rcx, rcx
0x2316  2  je  0x2329
0x2318  7  lea  rax, [rip + 0x1f821]
0x231f  3  cmp  rcx, rax
0x2322  2  je  0x2329
0x2324  5  call  0x840b
0x2329  4  add  rsp, 0x28
0x232d  1  ret  
0x232e  1  int3  
0x232f  4  sub  rsp, 0x28
0x2333  5  call  0x234b
0x2338  3  test  rax, rax
0x233b  2  je  0x2342
0x233d  4  add  rsp, 0x28
0x2341  1  ret  
0x2342  5  call  0x8487
0x2347  1  int3  
0x2348  1  int3  
0x2349  1  int3  
0x234a  1  int3  
0x234b  5  mov  qword ptr [rsp + 8], rbx
0x2350  5  mov  qword ptr [rsp + 0x10], rsi
0x2355  1  push  rdi
0x2356  4  sub  rsp, 0x20
0x235a  7  cmp  dword ptr [rip + 0x1ecdf], -1
0x2361  2  jne  0x236a
0x2363  2  xor  eax, eax
0x2365  5  jmp  0x23fa
0x236a  6  call  qword ptr [rip + 0x13d10]
0x2370  6  mov  ecx, dword ptr [rip + 0x1ecca]
0x2376  2  mov  edi, eax
0x2378  5  call  0x26d7
0x237d  4  or  rdx, 0xffffffffffffffff
0x2381  2  xor  esi, esi
0x2383  3  cmp  rax, rdx
0x2386  2  je  0x23ef
0x2388  3  test  rax, rax
0x238b  2  je  0x2392
0x238d  3  mov  rsi, rax
0x2390  2  jmp  0x23ef
0x2392  6  mov  ecx, dword ptr [rip + 0x1eca8]
0x2398  5  call  0x271f
0x239d  2  test  eax, eax
0x239f  2  je  0x23ef
0x23a1  5  mov  edx, 0x80
0x23a6  3  lea  ecx, [rdx - 0x7f]
0x23a9  5  call  0x84df
0x23ae  6  mov  ecx, dword ptr [rip + 0x1ec8c]
0x23b4  3  mov  rbx, rax
0x23b7  3  test  rax, rax
0x23ba  2  je  0x23e0
0x23bc  3  mov  rdx, rax
0x23bf  5  call  0x271f
0x23c4  2  test  eax, eax
0x23c6  2  je  0x23da
0x23c8  3  mov  rax, rbx
0x23cb  7  mov  dword ptr [rbx + 0x78], 0xfffffffe
0x23d2  3  mov  rbx, rsi
0x23d5  3  mov  rsi, rax
0x23d8  2  jmp  0x23e7
0x23da  6  mov  ecx, dword ptr [rip + 0x1ec60]
0x23e0  2  xor  edx, edx
0x23e2  5  call  0x271f
0x23e7  3  mov  rcx, rbx
0x23ea  5  call  0x840b
0x23ef  2  mov  ecx, edi
0x23f1  6  call  qword ptr [rip + 0x13c91]
0x23f7  3  mov  rax, rsi
0x23fa  5  mov  rbx, qword ptr [rsp + 0x30]
0x23ff  5  mov  rsi, qword ptr [rsp + 0x38]
0x2404  4  add  rsp, 0x20
0x2408  1  pop  rdi
0x2409  1  ret  
0x240a  1  int3  
0x240b  4  sub  rsp, 0x28
0x240f  7  lea  rcx, [rip - 0x107]
0x2416  5  call  0x2647
0x241b  6  mov  dword ptr [rip + 0x1ec1f], eax
0x2421  3  cmp  eax, -1
0x2424  2  je  0x244b
0x2426  7  lea  rdx, [rip + 0x1f713]
0x242d  2  mov  ecx, eax
0x242f  5  call  0x271f
0x2434  2  test  eax, eax
0x2436  2  je  0x2446
0x2438  10  mov  dword ptr [rip + 0x1f776], 0xfffffffe
0x2442  2  mov  al, 1
0x2444  2  jmp  0x244d
0x2446  5  call  0x2453
0x244b  2  xor  al, al
0x244d  4  add  rsp, 0x28
0x2451  1  ret  
0x2452  1  int3  
0x2453  4  sub  rsp, 0x28
0x2457  6  mov  ecx, dword ptr [rip + 0x1ebe3]
0x245d  3  cmp  ecx, -1
0x2460  2  je  0x246e
0x2462  5  call  0x268f
0x2467  7  or  dword ptr [rip + 0x1ebd2], 0xffffffff
0x246e  2  mov  al, 1
0x2470  4  add  rsp, 0x28
0x2474  1  ret  
0x2475  1  int3  
0x2476  1  int3  
0x2477  2  push  rbx
0x2479  4  sub  rsp, 0x20
0x247d  2  xor  ebx, ebx
0x247f  7  lea  rdx, [rip + 0x1f73a]
0x2486  3  xor  r8d, r8d
0x2489  4  lea  rcx, [rbx + rbx*4]
0x248d  4  lea  rcx, [rdx + rcx*8]
0x2491  5  mov  edx, 0xfa0
0x2496  5  call  0x2773
0x249b  2  test  eax, eax
0x249d  2  je  0x24b0
0x249f  6  inc  dword ptr [rip + 0x1f743]
0x24a5  2  inc  ebx
0x24a7  3  cmp  ebx, 1
0x24aa  2  jb  0x247f
0x24ac  2  mov  al, 1
0x24ae  2  jmp  0x24b7
0x24b0  5  call  0x24bf
0x24b5  2  xor  al, al
0x24b7  4  add  rsp, 0x20
0x24bb  1  pop  rbx
0x24bc  1  ret  
0x24bd  1  int3  
0x24be  1  int3  
0x24bf  2  push  rbx
0x24c1  4  sub  rsp, 0x20
0x24c5  6  mov  ebx, dword ptr [rip + 0x1f71d]
0x24cb  2  jmp  0x24ea
0x24cd  7  lea  rax, [rip + 0x1f6ec]
0x24d4  2  dec  ebx
0x24d6  4  lea  rcx, [rbx + rbx*4]
0x24da  4  lea  rcx, [rax + rcx*8]
0x24de  6  call  qword ptr [rip + 0x13bbc]
0x24e4  6  dec  dword ptr [rip + 0x1f6fe]
0x24ea  2  test  ebx, ebx
0x24ec  2  jne  0x24cd
0x24ee  2  mov  al, 1
0x24f0  4  add  rsp, 0x20
0x24f4  1  pop  rbx
0x24f5  1  ret  
0x24f6  1  int3  
0x24f7  5  mov  qword ptr [rsp + 8], rbx
0x24fc  5  mov  qword ptr [rsp + 0x10], rbp
0x2501  5  mov  qword ptr [rsp + 0x18], rsi
0x2506  1  push  rdi
0x2507  2  push  r12
0x2509  2  push  r13
0x250b  2  push  r14
0x250d  2  push  r15
0x250f  4  sub  rsp, 0x20
0x2513  2  mov  edi, ecx
0x2515  7  lea  r15, [rip - 0x2519]
0x251c  4  or  r14, 0xffffffffffffffff
0x2520  3  mov  r12, r9
0x2523  3  mov  rbp, r8
0x2526  3  mov  r13, rdx
0x2529  8  mov  rax, qword ptr [r15 + rdi*8 + 0x21c70]
0x2531  1  nop  
0x2532  3  cmp  rax, r14
0x2535  6  je  0x2626
0x253b  3  test  rax, rax
0x253e  6  jne  0x2628
0x2544  3  cmp  r8, r9
0x2547  6  je  0x261e
0x254d  3  mov  esi, dword ptr [rbp]
0x2550  8  mov  rbx, qword ptr [r15 + rsi*8 + 0x21c58]
0x2558  1  nop  
0x2559  3  test  rbx, rbx
0x255c  2  je  0x2569
0x255e  3  cmp  rbx, r14
0x2561  6  jne  0x2600
0x2567  2  jmp  0x25d4
0x2569  8  mov  r15, qword ptr [r15 + rsi*8 + 0x17118]
0x2571  2  xor  edx, edx
0x2573  3  mov  rcx, r15
0x2576  6  mov  r8d, 0x800
0x257c  6  call  qword ptr [rip + 0x13b5e]
0x2582  3  mov  rbx, rax
0x2585  3  test  rax, rax
0x2588  2  jne  0x25e0
0x258a  6  call  qword ptr [rip + 0x13af0]
0x2590  3  cmp  eax, 0x57
0x2593  2  jne  0x25c2
0x2595  4  lea  r8d, [rbx + 7]
0x2599  3  mov  rcx, r15
0x259c  7  lea  rdx, [rip + 0x14c25]
0x25a3  5  call  0x8583
0x25a8  2  test  eax, eax
0x25aa  2  je  0x25c2
0x25ac  3  xor  r8d, r8d
0x25af  2  xor  edx, edx
0x25b1  3  mov  rcx, r15
0x25b4  6  call  qword ptr [rip + 0x13b26]
0x25ba  3  mov  rbx, rax
0x25bd  3  test  rax, rax
0x25c0  2  jne  0x25e0
0x25c2  3  mov  rax, r14
0x25c5  7  lea  r15, [rip - 0x25c9]
0x25cc  8  xchg  qword ptr [r15 + rsi*8 + 0x21c58], rax
0x25d4  4  add  rbp, 4
0x25d8  3  cmp  rbp, r12
0x25db  5  jmp  0x2547
0x25e0  3  mov  rax, rbx
0x25e3  7  lea  r15, [rip - 0x25e7]
0x25ea  8  xchg  qword ptr [r15 + rsi*8 + 0x21c58], rax
0x25f2  3  test  rax, rax
0x25f5  2  je  0x2600
0x25f7  3  mov  rcx, rbx
0x25fa  6  call  qword ptr [rip + 0x13ad0]
0x2600  3  mov  rdx, r13
0x2603  3  mov  rcx, rbx
0x2606  6  call  qword ptr [rip + 0x13acc]
0x260c  3  test  rax, rax
0x260f  2  je  0x261e
0x2611  3  mov  rcx, rax
0x2614  8  xchg  qword ptr [r15 + rdi*8 + 0x21c70], rcx
0x261c  2  jmp  0x2628
0x261e  8  xchg  qword ptr [r15 + rdi*8 + 0x21c70], r14
0x2626  2  xor  eax, eax
0x2628  5  mov  rbx, qword ptr [rsp + 0x50]
0x262d  5  mov  rbp, qword ptr [rsp + 0x58]
0x2632  5  mov  rsi, qword ptr [rsp + 0x60]
0x2637  4  add  rsp, 0x20
0x263b  2  pop  r15
0x263d  2  pop  r14
0x263f  2  pop  r13
0x2641  2  pop  r12
0x2643  1  pop  rdi
0x2644  1  ret  
0x2645  1  int3  
0x2646  1  int3  
0x2647  2  push  rbx
0x2649  4  sub  rsp, 0x20
0x264d  3  mov  rbx, rcx
0x2650  7  lea  r9, [rip + 0x14b89]
0x2657  2  xor  ecx, ecx
0x2659  7  lea  r8, [rip + 0x14b78]
0x2660  7  lea  rdx, [rip + 0x14b79]
0x2667  5  call  0x24f7
0x266c  3  test  rax, rax
0x266f  2  je  0x2680
0x2671  3  mov  rcx, rbx
0x2674  4  add  rsp, 0x20
0x2678  1  pop  rbx
0x2679  6  jmp  qword ptr [rip + 0x13be8]
0x2680  4  add  rsp, 0x20
0x2684  1  pop  rbx
0x2685  6  jmp  qword ptr [rip + 0x13a24]
0x268c  1  int3  
0x268d  1  int3  
0x268e  1  int3  
0x268f  2  push  rbx
0x2691  4  sub  rsp, 0x20
0x2695  2  mov  ebx, ecx
0x2697  7  lea  r9, [rip + 0x14b5a]
0x269e  5  mov  ecx, 1
0x26a3  7  lea  r8, [rip + 0x14b46]
0x26aa  7  lea  rdx, [rip + 0x14b47]
0x26b1  5  call  0x24f7
0x26b6  2  mov  ecx, ebx
0x26b8  3  test  rax, rax
0x26bb  2  je  0x26c9
0x26bd  4  add  rsp, 0x20
0x26c1  1  pop  rbx
0x26c2  6  jmp  qword ptr [rip + 0x13b9f]
0x26c9  4  add  rsp, 0x20
0x26cd  1  pop  rbx
0x26ce  6  jmp  qword ptr [rip + 0x139f3]
0x26d5  1  int3  
0x26d6  1  int3  
0x26d7  2  push  rbx
0x26d9  4  sub  rsp, 0x20
0x26dd  2  mov  ebx, ecx
0x26df  7  lea  r9, [rip + 0x14b22]
0x26e6  5  mov  ecx, 2
0x26eb  7  lea  r8, [rip + 0x14b0e]
0x26f2  7  lea  rdx, [rip + 0x14b0f]
0x26f9  5  call  0x24f7
0x26fe  2  mov  ecx, ebx
0x2700  3  test  rax, rax
0x2703  2  je  0x2711
0x2705  4  add  rsp, 0x20
0x2709  1  pop  rbx
0x270a  6  jmp  qword ptr [rip + 0x13b57]
0x2711  4  add  rsp, 0x20
0x2715  1  pop  rbx
0x2716  6  jmp  qword ptr [rip + 0x1399b]
0x271d  1  int3  
0x271e  1  int3  
0x271f  5  mov  qword ptr [rsp + 8], rbx
0x2724  1  push  rdi
0x2725  4  sub  rsp, 0x20
0x2729  3  mov  rbx, rdx
0x272c  7  lea  r9, [rip + 0x14aed]
0x2733  2  mov  edi, ecx
0x2735  7  lea  rdx, [rip + 0x14ae4]
0x273c  5  mov  ecx, 3
0x2741  7  lea  r8, [rip + 0x14ad0]
0x2748  5  call  0x24f7
0x274d  3  mov  rdx, rbx
0x2750  2  mov  ecx, edi
0x2752  3  test  rax, rax
0x2755  2  je  0x275f
0x2757  6  call  qword ptr [rip + 0x13b0b]
0x275d  2  jmp  0x2765
0x275f  6  call  qword ptr [rip + 0x1395b]
0x2765  5  mov  rbx, qword ptr [rsp + 0x30]
0x276a  4  add  rsp, 0x20
0x276e  1  pop  rdi
0x276f  1  ret  
0x2770  1  int3  
0x2771  1  int3  
0x2772  1  int3  
0x2773  5  mov  qword ptr [rsp + 8], rbx
0x2778  5  mov  qword ptr [rsp + 0x10], rsi
0x277d  1  push  rdi
0x277e  4  sub  rsp, 0x20
0x2782  3  mov  esi, r8d
0x2785  7  lea  r9, [rip + 0x14aac]
0x278c  2  mov  ebx, edx
0x278e  7  lea  r8, [rip + 0x14a9b]
0x2795  3  mov  rdi, rcx
0x2798  7  lea  rdx, [rip + 0x14a99]
0x279f  5  mov  ecx, 4
0x27a4  5  call  0x24f7
0x27a9  2  mov  edx, ebx
0x27ab  3  mov  rcx, rdi
0x27ae  3  test  rax, rax
0x27b1  2  je  0x27be
0x27b3  3  mov  r8d, esi
0x27b6  6  call  qword ptr [rip + 0x13aac]
0x27bc  2  jmp  0x27c4
0x27be  6  call  qword ptr [rip + 0x138e4]
0x27c4  5  mov  rbx, qword ptr [rsp + 0x30]
0x27c9  5  mov  rsi, qword ptr [rsp + 0x38]
0x27ce  4  add  rsp, 0x20
0x27d2  1  pop  rdi
0x27d3  1  ret  
0x27d4  1  int3  
0x27d5  1  int3  
0x27d6  1  int3  
0x27d7  3  mov  rax, rsp
0x27da  4  mov  qword ptr [rax + 0x20], r9
0x27de  4  mov  qword ptr [rax + 0x18], r8
0x27e2  4  mov  qword ptr [rax + 0x10], rdx
0x27e6  4  mov  qword ptr [rax + 8], rcx
0x27ea  1  push  rbx
0x27eb  4  sub  rsp, 0x70
0x27ef  3  mov  rbx, rcx
0x27f2  4  and  dword ptr [rax - 0x38], 0
0x27f6  4  mov  qword ptr [rax - 0x20], rcx
0x27fa  4  mov  qword ptr [rax - 0x18], r8
0x27fe  5  call  0x232f
0x2803  5  lea  rdx, [rsp + 0x58]
0x2808  2  mov  ecx, dword ptr [rbx]
0x280a  4  mov  rax, qword ptr [rax + 0x10]
0x280e  6  call  qword ptr [rip + 0x13a54]
0x2814  8  mov  dword ptr [rsp + 0x40], 0
0x281c  2  jmp  0x281e
0x281e  4  mov  eax, dword ptr [rsp + 0x40]
0x2822  4  add  rsp, 0x70
0x2826  1  pop  rbx
0x2827  1  ret  
0x2828  1  int3  
0x2829  1  int3  
0x282a  1  int3  
0x282b  5  mov  qword ptr [rsp + 8], rbx
0x2830  5  mov  qword ptr [rsp + 0x10], rbp
0x2835  5  mov  qword ptr [rsp + 0x18], rsi
0x283a  1  push  rdi
0x283b  4  sub  rsp, 0x20
0x283f  3  mov  edi, dword ptr [rcx + 0xc]
0x2842  2  mov  esi, edx
0x2844  2  test  edi, edi
0x2846  3  mov  rbp, rcx
0x2849  2  je  0x2876
0x284b  3  lea  ebx, [rdi - 1]
0x284e  2  mov  edi, ebx
0x2850  5  call  0x232f
0x2855  4  lea  rdx, [rbx + rbx*4]
0x2859  4  mov  rax, qword ptr [rax + 0x60]
0x285d  4  lea  rcx, [rax + rdx*4]
0x2861  4  movsxd  rax, dword ptr [rbp + 0x10]
0x2865  3  add  rax, rcx
0x2868  3  cmp  esi, dword ptr [rax + 4]
0x286b  2  jle  0x2872
0x286d  3  cmp  esi, dword ptr [rax + 8]
0x2870  2  jle  0x2878
0x2872  2  test  ebx, ebx
0x2874  2  jmp  0x2849
0x2876  2  xor  eax, eax
0x2878  5  mov  rbx, qword ptr [rsp + 0x30]
0x287d  5  mov  rbp, qword ptr [rsp + 0x38]
0x2882  5  mov  rsi, qword ptr [rsp + 0x40]
0x2887  4  add  rsp, 0x20
0x288b  1  pop  rdi
0x288c  1  ret  
0x288d  1  int3  
0x288e  1  int3  
0x288f  2  push  rbx
0x2891  4  sub  rsp, 0x20
0x2895  3  mov  rbx, rdx
0x2898  3  mov  rdx, rcx
0x289b  3  mov  rcx, rbx
0x289e  5  call  0x34df
0x28a3  2  mov  edx, eax
0x28a5  3  mov  rcx, rbx
0x28a8  5  call  0x282b
0x28ad  3  test  rax, rax
0x28b0  3  setne  al
0x28b3  4  add  rsp, 0x20
0x28b7  1  pop  rbx
0x28b8  1  ret  
0x28b9  1  int3  
0x28ba  1  int3  
0x28bb  5  mov  qword ptr [rsp + 8], rbx
0x28c0  5  mov  qword ptr [rsp + 0x10], rsi
0x28c5  1  push  rdi
0x28c6  4  sub  rsp, 0x20
0x28ca  5  lea  r9, [rsp + 0x48]
0x28cf  3  mov  rbx, r8
0x28d2  3  mov  rdi, rdx
0x28d5  5  call  0x291f
0x28da  3  mov  rdx, rdi
0x28dd  3  mov  rcx, rbx
0x28e0  3  mov  rsi, rax
0x28e3  5  call  0x34df
0x28e8  2  mov  edx, eax
0x28ea  3  mov  rcx, rbx
0x28ed  5  call  0x282b
0x28f2  3  test  rax, rax
0x28f5  2  jne  0x28fd
0x28f7  4  or  r9d, 0xffffffff
0x28fb  2  jmp  0x2901
0x28fd  4  mov  r9d, dword ptr [rax + 4]
0x2901  3  mov  r8, rbx
0x2904  3  mov  rdx, rdi
0x2907  3  mov  rcx, rsi
0x290a  5  call  0x46b3
0x290f  5  mov  rbx, qword ptr [rsp + 0x30]
0x2914  5  mov  rsi, qword ptr [rsp + 0x38]
0x2919  4  add  rsp, 0x20
0x291d  1  pop  rdi
0x291e  1  ret  
0x291f  5  mov  qword ptr [rsp + 0x10], rbx
0x2924  5  mov  qword ptr [rsp + 0x18], rbp
0x2929  1  push  rsi
0x292a  1  push  rdi
0x292b  2  push  r12
0x292d  2  push  r14
0x292f  2  push  r15
0x2931  4  sub  rsp, 0x20
0x2935  4  mov  esi, dword ptr [r8 + 0xc]
0x2939  3  mov  r12, rcx
0x293c  3  mov  rcx, r8
0x293f  3  mov  rdi, r9
0x2942  3  mov  r14, r8
0x2945  3  mov  r15, rdx
0x2948  5  call  0x34df
0x294d  4  mov  r10, qword ptr [r12]
0x2951  2  mov  ebp, eax
0x2953  3  mov  qword ptr [rdi], r10
0x2956  2  test  esi, esi
0x2958  2  je  0x29d1
0x295a  4  movsxd  rax, dword ptr [r14 + 0x10]
0x295e  3  lea  ecx, [rsi - 1]
0x2961  2  mov  esi, ecx
0x2963  4  lea  rcx, [rcx + rcx*4]
0x2967  4  lea  rbx, [rax + rcx*4]
0x296b  4  add  rbx, qword ptr [r15 + 8]
0x296f  3  cmp  ebp, dword ptr [rbx + 4]
0x2972  2  jle  0x2956
0x2974  3  cmp  ebp, dword ptr [rbx + 8]
0x2977  2  jg  0x2956
0x2979  3  mov  rcx, qword ptr [r15]
0x297c  5  lea  rdx, [rsp + 0x50]
0x2981  3  xor  r8d, r8d
0x2984  6  call  qword ptr [rip + 0x136a6]
0x298a  4  movsxd  r8, dword ptr [rbx + 0x10]
0x298e  2  xor  ecx, ecx
0x2990  5  add  r8, qword ptr [rsp + 0x50]
0x2995  4  mov  r9d, dword ptr [rbx + 0xc]
0x2999  3  mov  r10d, dword ptr [rax]
0x299c  3  test  r9d, r9d
0x299f  2  je  0x29b8
0x29a1  4  lea  rdx, [r8 + 0xc]
0x29a5  3  movsxd  rax, dword ptr [rdx]
0x29a8  3  cmp  rax, r10
0x29ab  2  je  0x29b8
0x29ad  2  inc  ecx
0x29af  4  add  rdx, 0x14
0x29b3  3  cmp  ecx, r9d
0x29b6  2  jb  0x29a5
0x29b8  3  cmp  ecx, r9d
0x29bb  2  jae  0x2956
0x29bd  4  mov  rax, qword ptr [r12]
0x29c1  4  lea  rcx, [rcx + rcx*4]
0x29c5  5  movsxd  rcx, dword ptr [r8 + rcx*4 + 0x10]
0x29ca  4  mov  rcx, qword ptr [rcx + rax]
0x29ce  3  mov  qword ptr [rdi], rcx
0x29d1  5  mov  rbx, qword ptr [rsp + 0x58]
0x29d6  3  mov  rax, rdi
0x29d9  5  mov  rbp, qword ptr [rsp + 0x60]
0x29de  4  add  rsp, 0x20
0x29e2  2  pop  r15
0x29e4  2  pop  r14
0x29e6  2  pop  r12
0x29e8  1  pop  rdi
0x29e9  1  pop  rsi
0x29ea  1  ret  
0x29eb  5  mov  qword ptr [rsp + 8], rbx
0x29f0  5  mov  qword ptr [rsp + 0x10], rbp
0x29f5  5  mov  qword ptr [rsp + 0x18], rsi
0x29fa  1  push  rdi
0x29fb  2  push  r12
0x29fd  2  push  r13
0x29ff  2  push  r14
0x2a01  2  push  r15
0x2a03  4  sub  rsp, 0x40
0x2a07  8  mov  rbx, qword ptr [rsp + 0x90]
0x2a0f  3  mov  r12, rdx
0x2a12  3  mov  rbp, rcx
0x2a15  3  mov  rdx, r9
0x2a18  3  mov  rcx, rbx
0x2a1b  3  mov  rdi, r9
0x2a1e  3  mov  r15d, r8d
0x2a21  4  mov  r14d, dword ptr [rbx + 0xc]
0x2a25  5  call  0x34df
0x2a2a  3  xor  r10d, r10d
0x2a2d  2  mov  esi, eax
0x2a2f  3  test  r14d, r14d
0x2a32  6  je  0x2b23
0x2a38  4  mov  r11, qword ptr [rdi + 8]
0x2a3c  3  or  eax, 0xffffffff
0x2a3f  4  movsxd  rbx, dword ptr [rbx + 0x10]
0x2a43  3  mov  r9d, eax
0x2a46  3  mov  r13d, eax
0x2a49  3  mov  edx, r14d
0x2a4c  4  lea  r8d, [rdx - 1]
0x2a50  4  lea  rcx, [r8 + r8*4]
0x2a54  4  lea  rax, [r11 + rcx*4]
0x2a58  4  cmp  esi, dword ptr [rax + rbx + 4]
0x2a5c  2  jle  0x2a64
0x2a5e  4  cmp  esi, dword ptr [rax + rbx + 8]
0x2a62  2  jle  0x2a6c
0x2a64  3  mov  edx, r8d
0x2a67  3  test  r8d, r8d
0x2a6a  2  jne  0x2a4c
0x2a6c  3  mov  r8d, r10d
0x2a6f  2  test  edx, edx
0x2a71  2  je  0x2a83
0x2a73  3  lea  eax, [rdx - 1]
0x2a76  4  lea  rax, [rax + rax*4]
0x2a7a  4  lea  rdx, [rbx + rax*4]
0x2a7e  3  add  rdx, r11
0x2a81  2  jmp  0x2a86
0x2a83  3  mov  rdx, r10
0x2a86  4  lea  rcx, [r11 + rbx]
0x2a8a  4  or  r11d, 0xffffffff
0x2a8e  3  test  rdx, rdx
0x2a91  2  je  0x2aa2
0x2a93  3  mov  eax, dword ptr [rdx + 4]
0x2a96  2  cmp  dword ptr [rcx], eax
0x2a98  2  jle  0x2abd
0x2a9a  3  mov  eax, dword ptr [rdx + 8]
0x2a9d  3  cmp  dword ptr [rcx + 4], eax
0x2aa0  2  jg  0x2abd
0x2aa2  3  cmp  r15d, dword ptr [rcx]
0x2aa5  2  jl  0x2abd
0x2aa7  4  cmp  r15d, dword ptr [rcx + 4]
0x2aab  2  jg  0x2abd
0x2aad  3  cmp  r9d, r11d
0x2ab0  3  mov  eax, r8d
0x2ab3  3  mov  r13d, r8d
0x2ab6  4  cmovne  eax, r9d
0x2aba  3  mov  r9d, eax
0x2abd  3  inc  r8d
0x2ac0  4  add  rcx, 0x14
0x2ac4  3  cmp  r8d, r14d
0x2ac7  2  jb  0x2a8e
0x2ac9  3  cmp  r9d, r11d
0x2acc  5  mov  qword ptr [rsp + 0x20], r12
0x2ad1  3  mov  eax, r10d
0x2ad4  5  mov  qword ptr [rsp + 0x30], r12
0x2ad9  4  cmovne  eax, r9d
0x2add  5  lea  r11, [rsp + 0x40]
0x2ae2  4  mov  rbx, qword ptr [r11 + 0x30]
0x2ae6  4  mov  rsi, qword ptr [r11 + 0x40]
0x2aea  4  mov  dword ptr [rsp + 0x28], eax
0x2aee  4  lea  eax, [r13 + 1]
0x2af2  5  movups  xmm0, xmmword ptr [rsp + 0x20]
0x2af7  4  cmovne  r10d, eax
0x2afb  3  mov  rax, rbp
0x2afe  5  mov  dword ptr [rsp + 0x38], r10d
0x2b03  5  movups  xmm1, xmmword ptr [rsp + 0x30]
0x2b08  5  movdqu  xmmword ptr [rbp], xmm0
0x2b0d  5  movdqu  xmmword ptr [rbp + 0x10], xmm1
0x2b12  4  mov  rbp, qword ptr [r11 + 0x38]
0x2b16  3  mov  rsp, r11
0x2b19  2  pop  r15
0x2b1b  2  pop  r14
0x2b1d  2  pop  r13
0x2b1f  2  pop  r12
0x2b21  1  pop  rdi
0x2b22  1  ret  
0x2b23  5  call  0x8487
0x2b28  1  int3  
0x2b29  1  int3  
0x2b2a  1  int3  
0x2b2b  2  push  rbp
0x2b2d  5  lea  rbp, [rsp - 0x1f]
0x2b32  7  sub  rsp, 0xe0
0x2b39  7  mov  rax, qword ptr [rip + 0x1e4f8]
0x2b40  3  xor  rax, rsp
0x2b43  4  mov  qword ptr [rbp + 0xf], rax
0x2b47  4  mov  r10, qword ptr [rbp + 0x77]
0x2b4b  7  lea  rax, [rip + 0x1470e]
0x2b52  3  movups  xmm0, xmmword ptr [rax]
0x2b55  3  mov  r11, rcx
0x2b58  5  lea  rcx, [rsp + 0x30]
0x2b5d  4  movups  xmm1, xmmword ptr [rax + 0x10]
0x2b61  3  movups  xmmword ptr [rcx], xmm0
0x2b64  4  movups  xmm0, xmmword ptr [rax + 0x20]
0x2b68  4  movups  xmmword ptr [rcx + 0x10], xmm1
0x2b6c  4  movups  xmm1, xmmword ptr [rax + 0x30]
0x2b70  4  movups  xmmword ptr [rcx + 0x20], xmm0
0x2b74  4  movups  xmm0, xmmword ptr [rax + 0x40]
0x2b78  4  movups  xmmword ptr [rcx + 0x30], xmm1
0x2b7c  4  movups  xmm1, xmmword ptr [rax + 0x50]
0x2b80  4  movups  xmmword ptr [rcx + 0x40], xmm0
0x2b84  4  movups  xmm0, xmmword ptr [rax + 0x60]
0x2b88  4  movups  xmmword ptr [rcx + 0x50], xmm1
0x2b8c  7  movups  xmm1, xmmword ptr [rax + 0x80]
0x2b93  4  movups  xmmword ptr [rcx + 0x60], xmm0
0x2b97  4  movups  xmm0, xmmword ptr [rax + 0x70]
0x2b9b  7  mov  rax, qword ptr [rax + 0x90]
0x2ba2  4  movups  xmmword ptr [rcx + 0x70], xmm0
0x2ba6  7  movups  xmmword ptr [rcx + 0x80], xmm1
0x2bad  7  mov  qword ptr [rcx + 0x90], rax
0x2bb4  7  lea  rax, [rip + 0x1881]
0x2bbb  3  mov  rcx, qword ptr [r11]
0x2bbe  4  mov  qword ptr [rbp - 0x71], rax
0x2bc2  4  mov  rax, qword ptr [rbp + 0x4f]
0x2bc6  4  mov  qword ptr [rbp - 0x61], rax
0x2bca  4  movsxd  rax, dword ptr [rbp + 0x5f]
0x2bce  4  mov  qword ptr [rbp - 0x59], rax
0x2bd2  4  mov  rax, qword ptr [rbp + 0x57]
0x2bd6  4  mov  qword ptr [rbp - 0x49], rax
0x2bda  4  movzx  eax, byte ptr [rbp + 0x7f]
0x2bde  4  mov  qword ptr [rbp - 0x39], rax
0x2be2  4  mov  rax, qword ptr [r10 + 0x40]
0x2be6  5  mov  qword ptr [rsp + 0x28], rax
0x2beb  4  mov  rax, qword ptr [r10 + 0x28]
0x2bef  4  mov  qword ptr [rbp - 0x69], r9
0x2bf3  3  xor  r9d, r9d
0x2bf6  4  mov  qword ptr [rbp - 0x51], r8
0x2bfa  5  lea  r8, [rsp + 0x30]
0x2bff  4  mov  qword ptr [rbp - 0x41], rdx
0x2c03  3  mov  rdx, qword ptr [r10]
0x2c06  5  mov  qword ptr [rsp + 0x20], rax
0x2c0b  8  mov  qword ptr [rbp - 0x31], 0x19930520
0x2c13  6  call  qword ptr [rip + 0x1345f]
0x2c19  4  mov  rcx, qword ptr [rbp + 0xf]
0x2c1d  3  xor  rcx, rsp
0x2c20  5  call  0x14c73
0x2c25  7  add  rsp, 0xe0
0x2c2c  1  pop  rbp
0x2c2d  1  ret  
0x2c2e  1  int3  
0x2c2f  2  push  rbx
0x2c31  4  sub  rsp, 0x20
0x2c35  3  mov  rbx, rcx
0x2c38  3  mov  qword ptr [rcx], rdx
0x2c3b  5  call  0x232f
0x2c40  4  cmp  rbx, qword ptr [rax + 0x58]
0x2c44  2  jae  0x2c51
0x2c46  5  call  0x232f
0x2c4b  4  mov  rcx, qword ptr [rax + 0x58]
0x2c4f  2  jmp  0x2c53
0x2c51  2  xor  ecx, ecx
0x2c53  4  mov  qword ptr [rbx + 8], rcx
0x2c57  5  call  0x232f
0x2c5c  4  mov  qword ptr [rax + 0x58], rbx
0x2c60  3  mov  rax, rbx
0x2c63  4  add  rsp, 0x20
0x2c67  1  pop  rbx
0x2c68  1  ret  
0x2c69  1  int3  
0x2c6a  1  int3  
0x2c6b  5  mov  qword ptr [rsp + 8], rbx
0x2c70  1  push  rdi
0x2c71  4  sub  rsp, 0x20
0x2c75  3  mov  rdi, rcx
0x2c78  5  call  0x232f
0x2c7d  4  cmp  rdi, qword ptr [rax + 0x58]
0x2c81  2  jne  0x2cb8
0x2c83  5  call  0x232f
0x2c88  4  mov  rdx, qword ptr [rax + 0x58]
0x2c8c  3  test  rdx, rdx
0x2c8f  2  je  0x2cb8
0x2c91  4  mov  rbx, qword ptr [rdx + 8]
0x2c95  3  cmp  rdi, rdx
0x2c98  2  je  0x2ca4
0x2c9a  3  mov  rdx, rbx
0x2c9d  3  test  rbx, rbx
0x2ca0  2  je  0x2cb8
0x2ca2  2  jmp  0x2c91
0x2ca4  5  call  0x232f
0x2ca9  4  mov  qword ptr [rax + 0x58], rbx
0x2cad  5  mov  rbx, qword ptr [rsp + 0x30]
0x2cb2  4  add  rsp, 0x20
0x2cb6  1  pop  rdi
0x2cb7  1  ret  
0x2cb8  5  call  0x8487
0x2cbd  1  int3  
0x2cbe  1  int3  
0x2cbf  4  sub  rsp, 0x28
0x2cc3  5  call  0x232f
0x2cc8  4  mov  rax, qword ptr [rax + 0x60]
0x2ccc  4  add  rsp, 0x28
0x2cd0  1  ret  
0x2cd1  1  int3  
0x2cd2  1  int3  
0x2cd3  4  sub  rsp, 0x28
0x2cd7  5  call  0x232f
0x2cdc  4  mov  rax, qword ptr [rax + 0x68]
0x2ce0  4  add  rsp, 0x28
0x2ce4  1  ret  
0x2ce5  1  int3  
0x2ce6  1  int3  
0x2ce7  2  push  rbx
0x2ce9  4  sub  rsp, 0x20
0x2ced  3  mov  rbx, rcx
0x2cf0  5  call  0x232f
0x2cf5  4  mov  qword ptr [rax + 0x60], rbx
0x2cf9  4  add  rsp, 0x20
0x2cfd  1  pop  rbx
0x2cfe  1  ret  
0x2cff  2  push  rbx
0x2d01  4  sub  rsp, 0x20
0x2d05  3  mov  rbx, rcx
0x2d08  5  call  0x232f
0x2d0d  4  mov  qword ptr [rax + 0x68], rbx
0x2d11  4  add  rsp, 0x20
0x2d15  1  pop  rbx
0x2d16  1  ret  
0x2d17  3  mov  rax, rsp
0x2d1a  4  mov  qword ptr [rax + 0x10], rbx
0x2d1e  4  mov  qword ptr [rax + 0x18], rbp
0x2d22  4  mov  qword ptr [rax + 0x20], rsi
0x2d26  1  push  rdi
0x2d27  4  sub  rsp, 0x40
0x2d2b  4  mov  rbx, qword ptr [r9 + 8]
0x2d2f  3  mov  rdi, r9
0x2d32  3  mov  rsi, r8
0x2d35  4  mov  qword ptr [rax + 8], rdx
0x2d39  3  mov  rbp, rcx
0x2d3c  5  call  0x232f
0x2d41  4  mov  qword ptr [rax + 0x60], rbx
0x2d45  4  mov  rbx, qword ptr [rbp + 0x38]
0x2d49  5  call  0x232f
0x2d4e  4  mov  qword ptr [rax + 0x68], rbx
0x2d52  5  call  0x232f
0x2d57  4  mov  rcx, qword ptr [rdi + 0x38]
0x2d5b  3  mov  r9, rdi
0x2d5e  3  mov  r8, rsi
0x2d61  2  mov  edx, dword ptr [rcx]
0x2d63  3  mov  rcx, rbp
0x2d66  4  add  rdx, qword ptr [rax + 0x60]
0x2d6a  2  xor  eax, eax
0x2d6c  4  mov  byte ptr [rsp + 0x38], al
0x2d70  5  mov  qword ptr [rsp + 0x30], rax
0x2d75  4  mov  dword ptr [rsp + 0x28], eax
0x2d79  5  mov  qword ptr [rsp + 0x20], rdx
0x2d7e  5  lea  rdx, [rsp + 0x50]
0x2d83  5  call  0x434f
0x2d88  5  mov  rbx, qword ptr [rsp + 0x58]
0x2d8d  5  mov  rbp, qword ptr [rsp + 0x60]
0x2d92  5  mov  rsi, qword ptr [rsp + 0x68]
0x2d97  4  add  rsp, 0x40
0x2d9b  1  pop  rdi
0x2d9c  1  ret  
0x2d9d  1  int3  
0x2d9e  1  int3  
0x2d9f  1  int3  
0x2da0  1  int3  
0x2da1  1  int3  
0x2da2  1  int3  
0x2da3  1  int3  
0x2da4  1  int3  
0x2da5  1  int3  
0x2da6  1  int3  
0x2da7  1  int3  
0x2da8  1  int3  
0x2da9  10  nop  word ptr [rax + rax]
0x2db3  1  push  rdi
0x2db4  1  push  rsi
0x2db5  3  mov  rdi, rcx
0x2db8  3  mov  rsi, rdx
0x2dbb  3  mov  rcx, r8
0x2dbe  2  rep movsb  byte ptr [rdi], byte ptr [rsi]
0x2dc0  1  pop  rsi
0x2dc1  1  pop  rdi
0x2dc2  1  ret  
0x2dc3  1  int3  
0x2dc4  1  int3  
0x2dc5  1  int3  
0x2dc6  1  int3  
0x2dc7  1  int3  
0x2dc8  1  int3  
0x2dc9  10  nop  word ptr [rax + rax]
0x2dd3  3  mov  rax, rcx
0x2dd6  7  lea  r10, [rip - 0x2dda]
0x2ddd  4  cmp  r8, 0xf
0x2de1  6  ja  0x2ef3
0x2de7  12  nop  word ptr [rax + rax]
0x2df3  8  mov  r9d, dword ptr [r10 + r8*4 + 0x250b0]
0x2dfb  3  add  r9, r10
0x2dfe  3  jmp  r9
0x2e01  1  ret  
0x2e02  1  nop  
0x2e03  3  mov  r8, qword ptr [rdx]
0x2e06  3  mov  ecx, dword ptr [rdx + 8]
0x2e09  5  movzx  r9d, word ptr [rdx + 0xc]
0x2e0e  5  movzx  r10d, byte ptr [rdx + 0xe]
0x2e13  3  mov  qword ptr [rax], r8
0x2e16  3  mov  dword ptr [rax + 8], ecx
0x2e19  5  mov  word ptr [rax + 0xc], r9w
0x2e1e  4  mov  byte ptr [rax + 0xe], r10b
0x2e22  1  ret  
0x2e23  3  mov  r8, qword ptr [rdx]
0x2e26  4  movzx  ecx, word ptr [rdx + 8]
0x2e2a  5  movzx  r9d, byte ptr [rdx + 0xa]
0x2e2f  3  mov  qword ptr [rax], r8
0x2e32  4  mov  word ptr [rax + 8], cx
0x2e36  4  mov  byte ptr [rax + 0xa], r9b
0x2e3a  1  ret  
0x2e3b  3  movzx  ecx, word ptr [rdx]
0x2e3e  3  mov  word ptr [rax], cx
0x2e41  1  ret  
0x2e42  1  nop  
0x2e43  2  mov  ecx, dword ptr [rdx]
0x2e45  5  movzx  r8d, word ptr [rdx + 4]
0x2e4a  5  movzx  r9d, byte ptr [rdx + 6]
0x2e4f  2  mov  dword ptr [rax], ecx
0x2e51  5  mov  word ptr [rax + 4], r8w
0x2e56  4  mov  byte ptr [rax + 6], r9b
0x2e5a  1  ret  
0x2e5b  3  mov  r8, qword ptr [rdx]
0x2e5e  3  mov  ecx, dword ptr [rdx + 8]
0x2e61  5  movzx  r9d, word ptr [rdx + 0xc]
0x2e66  3  mov  qword ptr [rax], r8
0x2e69  3  mov  dword ptr [rax + 8], ecx
0x2e6c  5  mov  word ptr [rax + 0xc], r9w
0x2e71  1  ret  
0x2e72  3  movzx  ecx, word ptr [rdx]
0x2e75  5  movzx  r8d, byte ptr [rdx + 2]
0x2e7a  3  mov  word ptr [rax], cx
0x2e7d  4  mov  byte ptr [rax + 2], r8b
0x2e81  1  ret  
0x2e82  1  nop  
0x2e83  3  mov  r8, qword ptr [rdx]
0x2e86  3  mov  ecx, dword ptr [rdx + 8]
0x2e89  5  movzx  r9d, byte ptr [rdx + 0xc]
0x2e8e  3  mov  qword ptr [rax], r8
0x2e91  3  mov  dword ptr [rax + 8], ecx
0x2e94  4  mov  byte ptr [rax + 0xc], r9b
0x2e98  1  ret  
0x2e99  3  mov  r8, qword ptr [rdx]
0x2e9c  4  movzx  ecx, word ptr [rdx + 8]
0x2ea0  3  mov  qword ptr [rax], r8
0x2ea3  4  mov  word ptr [rax + 8], cx
0x2ea7  1  ret  
0x2ea8  3  mov  r8, qword ptr [rdx]
0x2eab  4  movzx  ecx, byte ptr [rdx + 8]
0x2eaf  3  mov  qword ptr [rax], r8
0x2eb2  3  mov  byte ptr [rax + 8], cl
0x2eb5  1  ret  
0x2eb6  3  mov  r8, qword ptr [rdx]
0x2eb9  3  mov  ecx, dword ptr [rdx + 8]
0x2ebc  3  mov  qword ptr [rax], r8
0x2ebf  3  mov  dword ptr [rax + 8], ecx
0x2ec2  1  ret  
0x2ec3  2  mov  ecx, dword ptr [rdx]
0x2ec5  5  movzx  r8d, word ptr [rdx + 4]
0x2eca  2  mov  dword ptr [rax], ecx
0x2ecc  5  mov  word ptr [rax + 4], r8w
0x2ed1  1  ret  
0x2ed2  2  mov  ecx, dword ptr [rdx]
0x2ed4  5  movzx  r8d, byte ptr [rdx + 4]
0x2ed9  2  mov  dword ptr [rax], ecx
0x2edb  4  mov  byte ptr [rax + 4], r8b
0x2edf  1  ret  
0x2ee0  3  mov  rcx, qword ptr [rdx]
0x2ee3  3  mov  qword ptr [rax], rcx
0x2ee6  1  ret  
0x2ee7  3  movzx  ecx, byte ptr [rdx]
0x2eea  2  mov  byte ptr [rax], cl
0x2eec  1  ret  
0x2eed  2  mov  ecx, dword ptr [rdx]
0x2eef  2  mov  dword ptr [rax], ecx
0x2ef1  1  ret  
0x2ef2  1  nop  
0x2ef3  4  cmp  r8, 0x20
0x2ef7  2  ja  0x2f10
0x2ef9  4  movdqu  xmm1, xmmword ptr [rdx]
0x2efd  7  movdqu  xmm2, xmmword ptr [rdx + r8 - 0x10]
0x2f04  4  movdqu  xmmword ptr [rcx], xmm1
0x2f08  7  movdqu  xmmword ptr [rcx + r8 - 0x10], xmm2
0x2f0f  1  ret  
0x2f10  4  lea  r9, [rdx + r8]
0x2f14  3  cmp  rcx, rdx
0x2f17  4  cmovbe  r9, rcx
0x2f1b  3  cmp  rcx, r9
0x2f1e  6  jb  0x3363
0x2f24  7  cmp  dword ptr [rip + 0x1e0ed], 3
0x2f2b  6  jb  0x3213
0x2f31  7  cmp  r8, 0x2000
0x2f38  2  jbe  0x2f50
0x2f3a  7  cmp  r8, 0x180000
0x2f41  2  ja  0x2f50
0x2f43  7  test  byte ptr [rip + 0x1ebe2], 2
0x2f4a  6  jne  0x2db3
0x2f50  4  vmovdqu  ymm0, ymmword ptr [rdx]
0x2f54  7  vmovdqu  ymm5, ymmword ptr [rdx + r8 - 0x20]
0x2f5b  7  cmp  r8, 0x100
0x2f62  6  jbe  0x302b
0x2f68  3  mov  r9, rcx
0x2f6b  4  and  r9, 0x1f
0x2f6f  4  sub  r9, 0x20
0x2f73  3  sub  rcx, r9
0x2f76  3  sub  rdx, r9
0x2f79  3  add  r8, r9
0x2f7c  7  cmp  r8, 0x100
0x2f83  6  jbe  0x302b
0x2f89  7  cmp  r8, 0x180000
0x2f90  6  ja  0x30d3
0x2f96  13  nop  word ptr [rax + rax]
0x2fa3  4  vmovdqu  ymm1, ymmword ptr [rdx]
0x2fa7  5  vmovdqu  ymm2, ymmword ptr [rdx + 0x20]
0x2fac  5  vmovdqu  ymm3, ymmword ptr [rdx + 0x40]
0x2fb1  5  vmovdqu  ymm4, ymmword ptr [rdx + 0x60]
0x2fb6  4  vmovdqa  ymmword ptr [rcx], ymm1
0x2fba  5  vmovdqa  ymmword ptr [rcx + 0x20], ymm2
0x2fbf  5  vmovdqa  ymmword ptr [rcx + 0x40], ymm3
0x2fc4  5  vmovdqa  ymmword ptr [rcx + 0x60], ymm4
0x2fc9  8  vmovdqu  ymm1, ymmword ptr [rdx + 0x80]
0x2fd1  8  vmovdqu  ymm2, ymmword ptr [rdx + 0xa0]
0x2fd9  8  vmovdqu  ymm3, ymmword ptr [rdx + 0xc0]
0x2fe1  8  vmovdqu  ymm4, ymmword ptr [rdx + 0xe0]
0x2fe9  8  vmovdqa  ymmword ptr [rcx + 0x80], ymm1
0x2ff1  8  vmovdqa  ymmword ptr [rcx + 0xa0], ymm2
0x2ff9  8  vmovdqa  ymmword ptr [rcx + 0xc0], ymm3
0x3001  8  vmovdqa  ymmword ptr [rcx + 0xe0], ymm4
0x3009  7  add  rcx, 0x100
0x3010  7  add  rdx, 0x100
0x3017  7  sub  r8, 0x100
0x301e  7  cmp  r8, 0x100
0x3025  6  jae  0x2fa3
0x302b  4  lea  r9, [r8 + 0x1f]
0x302f  4  and  r9, 0xffffffffffffffe0
0x3033  3  mov  r11, r9
0x3036  4  shr  r11, 5
0x303a  8  mov  r11d, dword ptr [r10 + r11*4 + 0x250f0]
0x3042  3  add  r11, r10
0x3045  3  jmp  r11
0x3048  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x100]
0x3052  10  vmovdqu  ymmword ptr [rcx + r9 - 0x100], ymm1
0x305c  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xe0]
0x3066  10  vmovdqu  ymmword ptr [rcx + r9 - 0xe0], ymm1
0x3070  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xc0]
0x307a  10  vmovdqu  ymmword ptr [rcx + r9 - 0xc0], ymm1
0x3084  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xa0]
0x308e  10  vmovdqu  ymmword ptr [rcx + r9 - 0xa0], ymm1
0x3098  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x80]
0x309f  7  vmovdqu  ymmword ptr [rcx + r9 - 0x80], ymm1
0x30a6  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x60]
0x30ad  7  vmovdqu  ymmword ptr [rcx + r9 - 0x60], ymm1
0x30b4  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x40]
0x30bb  7  vmovdqu  ymmword ptr [rcx + r9 - 0x40], ymm1
0x30c2  7  vmovdqu  ymmword ptr [rcx + r8 - 0x20], ymm5
0x30c9  4  vmovdqu  ymmword ptr [rax], ymm0
0x30cd  3  vzeroupper  
0x30d0  1  ret  
0x30d1  2  nop  
0x30d3  4  vmovdqu  ymm1, ymmword ptr [rdx]
0x30d7  5  vmovdqu  ymm2, ymmword ptr [rdx + 0x20]
0x30dc  5  vmovdqu  ymm3, ymmword ptr [rdx + 0x40]
0x30e1  5  vmovdqu  ymm4, ymmword ptr [rdx + 0x60]
0x30e6  4  vmovntdq  ymmword ptr [rcx], ymm1
0x30ea  5  vmovntdq  ymmword ptr [rcx + 0x20], ymm2
0x30ef  5  vmovntdq  ymmword ptr [rcx + 0x40], ymm3
0x30f4  5  vmovntdq  ymmword ptr [rcx + 0x60], ymm4
0x30f9  8  vmovdqu  ymm1, ymmword ptr [rdx + 0x80]
0x3101  8  vmovdqu  ymm2, ymmword ptr [rdx + 0xa0]
0x3109  8  vmovdqu  ymm3, ymmword ptr [rdx + 0xc0]
0x3111  8  vmovdqu  ymm4, ymmword ptr [rdx + 0xe0]
0x3119  8  vmovntdq  ymmword ptr [rcx + 0x80], ymm1
0x3121  8  vmovntdq  ymmword ptr [rcx + 0xa0], ymm2
0x3129  8  vmovntdq  ymmword ptr [rcx + 0xc0], ymm3
0x3131  8  vmovntdq  ymmword ptr [rcx + 0xe0], ymm4
0x3139  7  add  rcx, 0x100
0x3140  7  add  rdx, 0x100
0x3147  7  sub  r8, 0x100
0x314e  7  cmp  r8, 0x100
0x3155  6  jae  0x30d3
0x315b  4  lea  r9, [r8 + 0x1f]
0x315f  4  and  r9, 0xffffffffffffffe0
0x3163  3  mov  r11, r9
0x3166  4  shr  r11, 5
0x316a  8  mov  r11d, dword ptr [r10 + r11*4 + 0x25114]
0x3172  3  add  r11, r10
0x3175  3  jmp  r11
0x3178  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x100]
0x3182  10  vmovntdq  ymmword ptr [rcx + r9 - 0x100], ymm1
0x318c  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xe0]
0x3196  10  vmovntdq  ymmword ptr [rcx + r9 - 0xe0], ymm1
0x31a0  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xc0]
0x31aa  10  vmovntdq  ymmword ptr [rcx + r9 - 0xc0], ymm1
0x31b4  10  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0xa0]
0x31be  10  vmovntdq  ymmword ptr [rcx + r9 - 0xa0], ymm1
0x31c8  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x80]
0x31cf  7  vmovntdq  ymmword ptr [rcx + r9 - 0x80], ymm1
0x31d6  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x60]
0x31dd  7  vmovntdq  ymmword ptr [rcx + r9 - 0x60], ymm1
0x31e4  7  vmovdqu  ymm1, ymmword ptr [rdx + r9 - 0x40]
0x31eb  7  vmovntdq  ymmword ptr [rcx + r9 - 0x40], ymm1
0x31f2  7  vmovdqu  ymmword ptr [rcx + r8 - 0x20], ymm5
0x31f9  4  vmovdqu  ymmword ptr [rax], ymm0
0x31fd  3  sfence  
0x3200  3  vzeroupper  
0x3203  1  ret  
0x3204  15  nop  word ptr [rax + rax]
0x3213  7  cmp  r8, 0x800
0x321a  2  jbe  0x3229
0x321c  7  test  byte ptr [rip + 0x1e909], 2
0x3223  6  jne  0x2db3
0x3229  4  movdqu  xmm0, xmmword ptr [rdx]
0x322d  7  movdqu  xmm5, xmmword ptr [rdx + r8 - 0x10]
0x3234  7  cmp  r8, 0x80
0x323b  6  jbe  0x32cf
0x3241  3  mov  r9, rcx
0x3244  4  and  r9, 0xf
0x3248  4  sub  r9, 0x10
0x324c  3  sub  rcx, r9
0x324f  3  sub  rdx, r9
0x3252  3  add  r8, r9
0x3255  7  cmp  r8, 0x80
0x325c  2  jbe  0x32cf
0x325e  5  nop  dword ptr [rax + rax]
0x3263  4  movdqu  xmm1, xmmword ptr [rdx]
0x3267  5  movdqu  xmm2, xmmword ptr [rdx + 0x10]
0x326c  5  movdqu  xmm3, xmmword ptr [rdx + 0x20]
0x3271  5  movdqu  xmm4, xmmword ptr [rdx + 0x30]
0x3276  4  movdqa  xmmword ptr [rcx], xmm1
0x327a  5  movdqa  xmmword ptr [rcx + 0x10], xmm2
0x327f  5  movdqa  xmmword ptr [rcx + 0x20], xmm3
0x3284  5  movdqa  xmmword ptr [rcx + 0x30], xmm4
0x3289  5  movdqu  xmm1, xmmword ptr [rdx + 0x40]
0x328e  5  movdqu  xmm2, xmmword ptr [rdx + 0x50]
0x3293  5  movdqu  xmm3, xmmword ptr [rdx + 0x60]
0x3298  5  movdqu  xmm4, xmmword ptr [rdx + 0x70]
0x329d  5  movdqa  xmmword ptr [rcx + 0x40], xmm1
0x32a2  5  movdqa  xmmword ptr [rcx + 0x50], xmm2
0x32a7  5  movdqa  xmmword ptr [rcx + 0x60], xmm3
0x32ac  5  movdqa  xmmword ptr [rcx + 0x70], xmm4
0x32b1  7  add  rcx, 0x80
0x32b8  7  add  rdx, 0x80
0x32bf  7  sub  r8, 0x80
0x32c6  7  cmp  r8, 0x80
0x32cd  2  jae  0x3263
0x32cf  4  lea  r9, [r8 + 0xf]
0x32d3  4  and  r9, 0xfffffffffffffff0
0x32d7  3  mov  r11, r9
0x32da  4  shr  r11, 4
0x32de  8  mov  r11d, dword ptr [r10 + r11*4 + 0x25138]
0x32e6  3  add  r11, r10
0x32e9  3  jmp  r11
0x32ec  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x80]
0x32f3  7  movdqu  xmmword ptr [rcx + r9 - 0x80], xmm1
0x32fa  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x70]
0x3301  7  movdqu  xmmword ptr [rcx + r9 - 0x70], xmm1
0x3308  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x60]
0x330f  7  movdqu  xmmword ptr [rcx + r9 - 0x60], xmm1
0x3316  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x50]
0x331d  7  movdqu  xmmword ptr [rcx + r9 - 0x50], xmm1
0x3324  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x40]
0x332b  7  movdqu  xmmword ptr [rcx + r9 - 0x40], xmm1
0x3332  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x30]
0x3339  7  movdqu  xmmword ptr [rcx + r9 - 0x30], xmm1
0x3340  7  movdqu  xmm1, xmmword ptr [rdx + r9 - 0x20]
0x3347  7  movdqu  xmmword ptr [rcx + r9 - 0x20], xmm1
0x334e  7  movdqu  xmmword ptr [rcx + r8 - 0x10], xmm5
0x3355  4  movdqu  xmmword ptr [rax], xmm0
0x3359  1  ret  
0x335a  9  nop  word ptr [rax + rax]
0x3363  3  movups  xmm2, xmmword ptr [rdx]
0x3366  3  sub  rdx, rcx
0x3369  3  add  rcx, r8
0x336c  5  movups  xmm0, xmmword ptr [rcx + rdx - 0x10]
0x3371  4  sub  rcx, 0x10
0x3375  4  sub  r8, 0x10
0x3379  3  test  cl, 0xf
0x337c  2  je  0x3396
0x337e  3  mov  r9, rcx
0x3381  4  and  rcx, 0xfffffffffffffff0
0x3385  3  movups  xmm1, xmm0
0x3388  4  movups  xmm0, xmmword ptr [rcx + rdx]
0x338c  4  movups  xmmword ptr [r9], xmm1
0x3390  3  mov  r8, rcx
0x3393  3  sub  r8, rax
0x3396  3  mov  r9, r8
0x3399  4  shr  r9, 7
0x339d  2  je  0x3410
0x339f  3  movaps  xmmword ptr [rcx], xmm0
0x33a2  2  jmp  0x33ba
0x33a4  15  nop  word ptr [rax + rax]
0x33b3  4  movaps  xmmword ptr [rcx + 0x10], xmm0
0x33b7  3  movaps  xmmword ptr [rcx], xmm1
0x33ba  5  movups  xmm0, xmmword ptr [rcx + rdx - 0x10]
0x33bf  5  movups  xmm1, xmmword ptr [rcx + rdx - 0x20]
0x33c4  7  sub  rcx, 0x80
0x33cb  4  movaps  xmmword ptr [rcx + 0x70], xmm0
0x33cf  4  movaps  xmmword ptr [rcx + 0x60], xmm1
0x33d3  5  movups  xmm0, xmmword ptr [rcx + rdx + 0x50]
0x33d8  5  movups  xmm1, xmmword ptr [rcx + rdx + 0x40]
0x33dd  3  dec  r9
0x33e0  4  movaps  xmmword ptr [rcx + 0x50], xmm0
0x33e4  4  movaps  xmmword ptr [rcx + 0x40], xmm1
0x33e8  5  movups  xmm0, xmmword ptr [rcx + rdx + 0x30]
0x33ed  5  movups  xmm1, xmmword ptr [rcx + rdx + 0x20]
0x33f2  4  movaps  xmmword ptr [rcx + 0x30], xmm0
0x33f6  4  movaps  xmmword ptr [rcx + 0x20], xmm1
0x33fa  5  movups  xmm0, xmmword ptr [rcx + rdx + 0x10]
0x33ff  4  movups  xmm1, xmmword ptr [rcx + rdx]
0x3403  2  jne  0x33b3
0x3405  4  movaps  xmmword ptr [rcx + 0x10], xmm0
0x3409  4  and  r8, 0x7f
0x340d  3  movaps  xmm0, xmm1
0x3410  3  mov  r9, r8
0x3413  4  shr  r9, 4
0x3417  2  je  0x3433
0x3419  10  nop  word ptr [rax + rax]
0x3423  3  movups  xmmword ptr [rcx], xmm0
0x3426  4  sub  rcx, 0x10
0x342a  4  movups  xmm0, xmmword ptr [rcx + rdx]
0x342e  3  dec  r9
0x3431  2  jne  0x3423
0x3433  4  and  r8, 0xf
0x3437  2  je  0x343c
0x3439  3  movups  xmmword ptr [rax], xmm2
0x343c  3  movups  xmmword ptr [rcx], xmm0
0x343f  1  ret  
0x3440  1  int3  
0x3441  1  int3  
0x3442  1  int3  
0x3443  4  sub  rsp, 0x28
0x3447  4  movsxd  r9, dword ptr [r8 + 0x1c]
0x344b  3  mov  r10, r8
0x344e  3  mov  rax, qword ptr [rcx]
0x3451  4  mov  eax, dword ptr [r9 + rax]
0x3455  3  cmp  eax, -2
0x3458  2  jne  0x3465
0x345a  3  mov  r8, qword ptr [rdx]
0x345d  3  mov  rcx, r10
0x3460  5  call  0x34e7
0x3465  4  add  rsp, 0x28
0x3469  1  ret  
0x346a  1  int3  
0x346b  2  push  rbx
0x346d  4  sub  rsp, 0x20
0x3471  5  lea  r9, [rsp + 0x40]
0x3476  3  mov  rbx, r8
0x3479  5  call  0x291f
0x347e  3  mov  rcx, qword ptr [rax]
0x3481  4  movsxd  rax, dword ptr [rbx + 0x1c]
0x3485  5  mov  qword ptr [rsp + 0x40], rcx
0x348a  4  mov  eax, dword ptr [rax + rcx + 4]
0x348e  4  add  rsp, 0x20
0x3492  1  pop  rbx
0x3493  1  ret  
0x3494  1  int3  
0x3495  1  int3  
0x3496  1  int3  
0x3497  4  movsxd  rdx, dword ptr [rdx + 0x1c]
0x349b  3  mov  rax, qword ptr [rcx]
0x349e  4  mov  dword ptr [rdx + rax], r8d
0x34a2  1  ret  
0x34a3  5  mov  qword ptr [rsp + 8], rbx
0x34a8  1  push  rdi
0x34a9  4  sub  rsp, 0x20
0x34ad  3  mov  edi, r9d
0x34b0  3  mov  rbx, r8
0x34b3  5  lea  r9, [rsp + 0x40]
0x34b8  5  call  0x291f
0x34bd  3  mov  rcx, qword ptr [rax]
0x34c0  4  movsxd  rax, dword ptr [rbx + 0x1c]
0x34c4  5  mov  qword ptr [rsp + 0x40], rcx
0x34c9  4  cmp  edi, dword ptr [rax + rcx + 4]
0x34cd  2  jle  0x34d3
0x34cf  4  mov  dword ptr [rax + rcx + 4], edi
0x34d3  5  mov  rbx, qword ptr [rsp + 0x30]
0x34d8  4  add  rsp, 0x20
0x34dc  1  pop  rdi
0x34dd  1  ret  
0x34de  1  int3  
0x34df  3  mov  r8, qword ptr [rdx]
0x34e2  5  jmp  0x34e7
0x34e7  2  push  rbx
0x34e9  4  sub  rsp, 0x20
0x34ed  3  mov  rbx, r8
0x34f0  3  test  rcx, rcx
0x34f3  2  je  0x3547
0x34f5  4  movsxd  r11, dword ptr [rcx + 0x18]
0x34f9  4  mov  r10, qword ptr [rdx + 8]
0x34fd  4  lea  rax, [r10 + r11]
0x3501  3  test  rax, rax
0x3504  2  je  0x3547
0x3506  4  mov  r8d, dword ptr [rcx + 0x14]
0x350a  3  xor  r9d, r9d
0x350d  3  test  r8d, r8d
0x3510  2  je  0x3542
0x3512  4  lea  rcx, [r11 + r9*8]
0x3516  4  movsxd  rdx, dword ptr [rcx + r10]
0x351a  3  add  rdx, r10
0x351d  3  cmp  rbx, rdx
0x3520  2  jb  0x352a
0x3522  3  inc  r9d
0x3525  3  cmp  r9d, r8d
0x3528  2  jb  0x3512
0x352a  3  test  r9d, r9d
0x352d  2  je  0x3542
0x352f  4  lea  ecx, [r9 - 1]
0x3533  4  lea  rax, [r10 + rcx*8]
0x3537  5  mov  eax, dword ptr [rax + r11 + 4]
0x353c  4  add  rsp, 0x20
0x3540  1  pop  rbx
0x3541  1  ret  
0x3542  3  or  eax, 0xffffffff
0x3545  2  jmp  0x353c
0x3547  5  call  0x8487
0x354c  1  int3  
0x354d  1  int3  
0x354e  1  int3  
0x354f  5  mov  qword ptr [rsp + 8], rbx
0x3554  5  mov  qword ptr [rsp + 0x10], rsi
0x3559  5  mov  qword ptr [rsp + 0x18], rdi
0x355e  2  push  r13
0x3560  2  push  r14
0x3562  2  push  r15
0x3564  4  sub  rsp, 0x30
0x3568  3  mov  r14, r9
0x356b  3  mov  rbx, r8
0x356e  3  mov  rsi, rdx
0x3571  3  mov  r13, rcx
0x3574  2  xor  edi, edi
0x3576  4  cmp  dword ptr [r8 + 4], edi
0x357a  2  je  0x358b
0x357c  4  movsxd  r15, dword ptr [r8 + 4]
0x3580  5  call  0x2cbf
0x3585  4  lea  rdx, [r15 + rax]
0x3589  2  jmp  0x3591
0x358b  3  mov  rdx, rdi
0x358e  3  mov  r15d, edi
0x3591  3  test  rdx, rdx
0x3594  6  je  0x3711
0x359a  3  test  r15d, r15d
0x359d  2  je  0x35b0
0x359f  5  call  0x2cbf
0x35a4  3  mov  rcx, rax
0x35a7  4  movsxd  rax, dword ptr [rbx + 4]
0x35ab  3  add  rcx, rax
0x35ae  2  jmp  0x35b3
0x35b0  3  mov  rcx, rdi
0x35b3  4  cmp  byte ptr [rcx + 0x10], dil
0x35b7  6  je  0x3711
0x35bd  3  cmp  dword ptr [rbx + 8], edi
0x35c0  2  jne  0x35ca
0x35c2  2  cmp  dword ptr [rbx], edi
0x35c4  6  jge  0x3711
0x35ca  2  cmp  dword ptr [rbx], edi
0x35cc  2  jl  0x35d8
0x35ce  4  movsxd  rax, dword ptr [rbx + 8]
0x35d2  3  add  rax, qword ptr [rsi]
0x35d5  3  mov  rsi, rax
0x35d8  3  test  byte ptr [rbx], 0x80
0x35db  2  je  0x360f
0x35dd  4  test  byte ptr [r14], 0x10
0x35e1  2  je  0x360f
0x35e3  7  mov  rax, qword ptr [rip + 0x1e546]
0x35ea  3  test  rax, rax
0x35ed  2  je  0x360f
0x35ef  6  call  qword ptr [rip + 0x12c73]
0x35f5  3  test  rax, rax
0x35f8  6  je  0x372d
0x35fe  3  test  rsi, rsi
0x3601  6  je  0x372d
0x3607  3  mov  qword ptr [rsi], rax
0x360a  3  mov  rcx, rax
0x360d  2  jmp  0x366e
0x360f  3  test  byte ptr [rbx], 8
0x3612  2  je  0x362f
0x3614  4  mov  rcx, qword ptr [r13 + 0x28]
0x3618  3  test  rcx, rcx
0x361b  6  je  0x3732
0x3621  3  test  rsi, rsi
0x3624  6  je  0x3732
0x362a  3  mov  qword ptr [rsi], rcx
0x362d  2  jmp  0x366e
0x362f  4  test  byte ptr [r14], 1
0x3633  2  je  0x367f
0x3635  4  mov  rdx, qword ptr [r13 + 0x28]
0x3639  3  test  rdx, rdx
0x363c  6  je  0x3737
0x3642  3  test  rsi, rsi
0x3645  6  je  0x3737
0x364b  4  movsxd  r8, dword ptr [r14 + 0x14]
0x364f  3  mov  rcx, rsi
0x3652  5  call  0x2dd3
0x3657  5  cmp  dword ptr [r14 + 0x14], 8
0x365c  6  jne  0x370d
0x3662  3  cmp  qword ptr [rsi], rdi
0x3665  6  je  0x370d
0x366b  3  mov  rcx, qword ptr [rsi]
0x366e  4  lea  rdx, [r14 + 8]
0x3672  5  call  0x1e0b
0x3677  3  mov  qword ptr [rsi], rax
0x367a  5  jmp  0x370d
0x367f  4  cmp  dword ptr [r14 + 0x18], edi
0x3683  2  je  0x3694
0x3685  4  movsxd  rbx, dword ptr [r14 + 0x18]
0x3689  5  call  0x2cd3
0x368e  4  lea  rcx, [rbx + rax]
0x3692  2  jmp  0x3699
0x3694  3  mov  rcx, rdi
0x3697  2  mov  ebx, edi
0x3699  3  test  rcx, rcx
0x369c  2  jne  0x36d2
0x369e  4  cmp  qword ptr [r13 + 0x28], rdi
0x36a2  6  je  0x373c
0x36a8  3  test  rsi, rsi
0x36ab  6  je  0x373c
0x36b1  4  movsxd  rbx, dword ptr [r14 + 0x14]
0x36b5  4  lea  rdx, [r14 + 8]
0x36b9  4  mov  rcx, qword ptr [r13 + 0x28]
0x36bd  5  call  0x1e0b
0x36c2  3  mov  rdx, rax
0x36c5  3  mov  r8, rbx
0x36c8  3  mov  rcx, rsi
0x36cb  5  call  0x2dd3
0x36d0  2  jmp  0x370d
0x36d2  4  cmp  qword ptr [r13 + 0x28], rdi
0x36d6  2  je  0x3741
0x36d8  3  test  rsi, rsi
0x36db  2  je  0x3741
0x36dd  2  test  ebx, ebx
0x36df  2  je  0x36f2
0x36e1  5  call  0x2cd3
0x36e6  3  mov  rcx, rax
0x36e9  4  movsxd  rax, dword ptr [r14 + 0x18]
0x36ed  3  add  rcx, rax
0x36f0  2  jmp  0x36f5
0x36f2  3  mov  rcx, rdi
0x36f5  3  test  rcx, rcx
0x36f8  2  je  0x3741
0x36fa  3  mov  al, byte ptr [r14]
0x36fd  2  and  al, 4
0x36ff  2  neg  al
0x3701  2  sbb  ecx, ecx
0x3703  2  neg  ecx
0x3705  2  inc  ecx
0x3707  2  mov  edi, ecx
0x3709  4  mov  dword ptr [rsp + 0x20], ecx
0x370d  2  mov  eax, edi
0x370f  2  jmp  0x3713
0x3711  2  xor  eax, eax
0x3713  5  mov  rbx, qword ptr [rsp + 0x50]
0x3718  5  mov  rsi, qword ptr [rsp + 0x58]
0x371d  5  mov  rdi, qword ptr [rsp + 0x60]
0x3722  4  add  rsp, 0x30
0x3726  2  pop  r15
0x3728  2  pop  r14
0x372a  2  pop  r13
0x372c  1  ret  
0x372d  5  call  0x8487
0x3732  5  call  0x8487
0x3737  5  call  0x8487
0x373c  5  call  0x8487
0x3741  5  call  0x8487
0x3746  1  nop  
0x3747  5  call  0x8487
0x374c  1  nop  
0x374d  1  int3  
0x374e  1  int3  
0x374f  5  mov  qword ptr [rsp + 8], rbx
0x3754  5  mov  qword ptr [rsp + 0x10], rsi
0x3759  5  mov  qword ptr [rsp + 0x18], rdi
0x375e  2  push  r14
0x3760  4  sub  rsp, 0x20
0x3764  3  mov  rdi, r9
0x3767  3  mov  r14, rcx
0x376a  2  xor  ebx, ebx
0x376c  3  cmp  dword ptr [r8], ebx
0x376f  2  jge  0x3776
0x3771  3  mov  rsi, rdx
0x3774  2  jmp  0x377d
0x3776  4  movsxd  rsi, dword ptr [r8 + 8]
0x377a  3  add  rsi, qword ptr [rdx]
0x377d  5  call  0x354f
0x3782  3  sub  eax, 1
0x3785  2  je  0x37c3
0x3787  3  cmp  eax, 1
0x378a  2  jne  0x37f3
0x378c  4  lea  rdx, [rdi + 8]
0x3790  4  mov  rcx, qword ptr [r14 + 0x28]
0x3794  5  call  0x1e0b
0x3799  3  mov  r14, rax
0x379c  3  cmp  dword ptr [rdi + 0x18], ebx
0x379f  2  je  0x37ad
0x37a1  5  call  0x2cd3
0x37a6  4  movsxd  rbx, dword ptr [rdi + 0x18]
0x37aa  3  add  rbx, rax
0x37ad  6  mov  r9d, 1
0x37b3  3  mov  r8, r14
0x37b6  3  mov  rdx, rbx
0x37b9  3  mov  rcx, rsi
0x37bc  5  call  0x4a5b
0x37c1  2  jmp  0x37f3
0x37c3  4  lea  rdx, [rdi + 8]
0x37c7  4  mov  rcx, qword ptr [r14 + 0x28]
0x37cb  5  call  0x1e0b
0x37d0  3  mov  r14, rax
0x37d3  3  cmp  dword ptr [rdi + 0x18], ebx
0x37d6  2  je  0x37e4
0x37d8  5  call  0x2cd3
0x37dd  4  movsxd  rbx, dword ptr [rdi + 0x18]
0x37e1  3  add  rbx, rax
0x37e4  3  mov  r8, r14
0x37e7  3  mov  rdx, rbx
0x37ea  3  mov  rcx, rsi
0x37ed  5  call  0x4a4f
0x37f2  1  nop  
0x37f3  5  mov  rbx, qword ptr [rsp + 0x30]
0x37f8  5  mov  rsi, qword ptr [rsp + 0x38]
0x37fd  5  mov  rdi, qword ptr [rsp + 0x40]
0x3802  4  add  rsp, 0x20
0x3806  2  pop  r14
0x3808  1  ret  
0x3809  5  call  0x8487
0x380e  1  nop  
0x380f  3  mov  rax, rsp
0x3812  4  mov  qword ptr [rax + 8], rbx
0x3816  4  mov  qword ptr [rax + 0x18], r8
0x381a  1  push  rbp
0x381b  1  push  rsi
0x381c  1  push  rdi
0x381d  2  push  r12
0x381f  2  push  r13
0x3821  2  push  r14
0x3823  2  push  r15
0x3825  4  sub  rsp, 0x60
0x3829  8  mov  r13, qword ptr [rsp + 0xc0]
0x3831  3  mov  r15, r9
0x3834  3  mov  r12, rdx
0x3837  4  lea  r9, [rax + 0x10]
0x383b  3  mov  rbp, rcx
0x383e  3  mov  r8, r13
0x3841  3  mov  rdx, r15
0x3844  3  mov  rcx, r12
0x3847  5  call  0x291f
0x384c  8  mov  r9, qword ptr [rsp + 0xd0]
0x3854  3  mov  r14, rax
0x3857  8  mov  rsi, qword ptr [rsp + 0xc8]
0x385f  3  test  r9, r9
0x3862  2  je  0x3872
0x3864  3  mov  r8, rsi
0x3867  3  mov  rdx, rax
0x386a  3  mov  rcx, rbp
0x386d  5  call  0x374f
0x3872  8  mov  rcx, qword ptr [rsp + 0xd8]
0x387a  3  mov  ebx, dword ptr [rcx + 8]
0x387d  2  mov  edi, dword ptr [rcx]
0x387f  5  call  0x2cbf
0x3884  4  movsxd  rcx, dword ptr [rsi + 0xc]
0x3888  3  mov  r9, r14
0x388b  8  mov  r8, qword ptr [rsp + 0xb0]
0x3893  3  add  rax, rcx
0x3896  7  mov  cl, byte ptr [rsp + 0xf8]
0x389d  3  mov  rdx, rbp
0x38a0  4  mov  byte ptr [rsp + 0x50], cl
0x38a4  3  mov  rcx, r12
0x38a7  5  mov  qword ptr [rsp + 0x48], r15
0x38ac  5  mov  qword ptr [rsp + 0x40], rsi
0x38b1  4  mov  dword ptr [rsp + 0x38], ebx
0x38b5  4  mov  dword ptr [rsp + 0x30], edi
0x38b9  5  mov  qword ptr [rsp + 0x28], r13
0x38be  5  mov  qword ptr [rsp + 0x20], rax
0x38c3  5  call  0x2b2b
0x38c8  8  mov  rbx, qword ptr [rsp + 0xa0]
0x38d0  4  add  rsp, 0x60
0x38d4  2  pop  r15
0x38d6  2  pop  r14
0x38d8  2  pop  r13
0x38da  2  pop  r12
0x38dc  1  pop  rdi
0x38dd  1  pop  rsi
0x38de  1  pop  rbp
0x38df  1  ret  
0x38e0  1  int3  
0x38e1  1  int3  
0x38e2  1  int3  
0x38e3  2  push  rbp
0x38e5  1  push  rbx
0x38e6  1  push  rsi
0x38e7  1  push  rdi
0x38e8  2  push  r12
0x38ea  2  push  r13
0x38ec  2  push  r14
0x38ee  2  push  r15
0x38f0  5  lea  rbp, [rsp - 0x28]
0x38f5  7  sub  rsp, 0x128
0x38fc  7  mov  rax, qword ptr [rip + 0x1d735]
0x3903  3  xor  rax, rsp
0x3906  4  mov  qword ptr [rbp + 0x10], rax
0x390a  7  mov  rdi, qword ptr [rbp + 0x90]
0x3911  3  mov  r12, rdx
0x3914  7  mov  r13, qword ptr [rbp + 0xa8]
0x391b  3  mov  r15, r8
0x391e  5  mov  qword ptr [rsp + 0x68], r8
0x3923  3  mov  rbx, rcx
0x3926  5  mov  qword ptr [rsp + 0x78], rdx
0x392b  3  mov  r8, rdi
0x392e  3  mov  rcx, r12
0x3931  4  mov  qword ptr [rbp - 0x68], r13
0x3935  3  mov  rdx, r9
0x3938  5  mov  byte ptr [rsp + 0x60], 0
0x393d  3  mov  rsi, r9
0x3940  5  call  0x483f
0x3945  3  mov  r14d, eax
0x3948  3  cmp  eax, -1
0x394b  6  jl  0x3db2
0x3951  3  cmp  eax, dword ptr [rdi + 4]
0x3954  6  jge  0x3db2
0x395a  6  cmp  dword ptr [rbx], 0xe06d7363
0x3960  6  jne  0x3a2f
0x3966  4  cmp  dword ptr [rbx + 0x18], 4
0x396a  6  jne  0x3a2f
0x3970  3  mov  eax, dword ptr [rbx + 0x20]
0x3973  5  sub  eax, 0x19930520
0x3978  3  cmp  eax, 2
0x397b  6  ja  0x3a2f
0x3981  5  cmp  qword ptr [rbx + 0x30], 0
0x3986  6  jne  0x3a2f
0x398c  5  call  0x232f
0x3991  5  cmp  qword ptr [rax + 0x20], 0
0x3996  6  je  0x3d4b
0x399c  5  call  0x232f
0x39a1  4  mov  rbx, qword ptr [rax + 0x20]
0x39a5  5  call  0x232f
0x39aa  4  mov  rcx, qword ptr [rbx + 0x38]
0x39ae  5  mov  byte ptr [rsp + 0x60], 1
0x39b3  4  mov  r15, qword ptr [rax + 0x28]
0x39b7  5  mov  qword ptr [rsp + 0x68], r15
0x39bc  5  call  0x2cff
0x39c1  6  cmp  dword ptr [rbx], 0xe06d7363
0x39c7  2  jne  0x39e7
0x39c9  4  cmp  dword ptr [rbx + 0x18], 4
0x39cd  2  jne  0x39e7
0x39cf  3  mov  eax, dword ptr [rbx + 0x20]
0x39d2  5  sub  eax, 0x19930520
0x39d7  3  cmp  eax, 2
0x39da  2  ja  0x39e7
0x39dc  5  cmp  qword ptr [rbx + 0x30], 0
0x39e1  6  je  0x3db2
0x39e7  5  call  0x232f
0x39ec  5  cmp  qword ptr [rax + 0x38], 0
0x39f1  2  je  0x3a2f
0x39f3  5  call  0x232f
0x39f8  4  mov  r15, qword ptr [rax + 0x38]
0x39fc  5  call  0x232f
0x3a01  3  mov  rdx, r15
0x3a04  3  mov  rcx, rbx
0x3a07  5  and  qword ptr [rax + 0x38], 0
0x3a0c  5  call  0x48d7
0x3a11  2  test  al, al
0x3a13  2  jne  0x3a2a
0x3a15  3  mov  rcx, r15
0x3a18  5  call  0x49c7
0x3a1d  2  test  al, al
0x3a1f  6  je  0x3d8f
0x3a25  5  jmp  0x3d6b
0x3a2a  5  mov  r15, qword ptr [rsp + 0x68]
0x3a2f  4  mov  rax, qword ptr [rsi + 8]
0x3a33  4  mov  qword ptr [rbp - 0x40], rax
0x3a37  4  mov  qword ptr [rbp - 0x48], rdi
0x3a3b  6  cmp  dword ptr [rbx], 0xe06d7363
0x3a41  6  jne  0x3d02
0x3a47  4  cmp  dword ptr [rbx + 0x18], 4
0x3a4b  6  jne  0x3d02
0x3a51  3  mov  eax, dword ptr [rbx + 0x20]
0x3a54  5  sub  eax, 0x19930520
0x3a59  3  cmp  eax, 2
0x3a5c  6  ja  0x3d02
0x3a62  3  xor  r15d, r15d
0x3a65  4  cmp  dword ptr [rdi + 0xc], r15d
0x3a69  6  jbe  0x3c33
0x3a6f  6  mov  eax, dword ptr [rbp + 0xa0]
0x3a75  4  lea  rdx, [rbp - 0x48]
0x3a79  4  mov  dword ptr [rsp + 0x28], eax
0x3a7d  4  lea  rcx, [rbp - 0x28]
0x3a81  3  mov  r9, rsi
0x3a84  5  mov  qword ptr [rsp + 0x20], rdi
0x3a89  3  mov  r8d, r14d
0x3a8c  5  call  0x29eb
0x3a91  4  movups  xmm0, xmmword ptr [rbp - 0x28]
0x3a95  5  movdqu  xmmword ptr [rbp - 0x38], xmm0
0x3a9a  5  psrldq  xmm0, 8
0x3a9f  4  movd  eax, xmm0
0x3aa3  3  cmp  eax, dword ptr [rbp - 0x10]
0x3aa6  6  jae  0x3c33
0x3aac  4  mov  r9, qword ptr [rbp - 0x28]
0x3ab0  4  mov  r13d, dword ptr [rbp - 0x30]
0x3ab4  4  mov  qword ptr [rbp - 0x80], r9
0x3ab8  4  mov  rax, qword ptr [rbp - 0x38]
0x3abc  3  mov  rax, qword ptr [rax]
0x3abf  4  movsxd  rdx, dword ptr [rax + 0x10]
0x3ac3  3  mov  eax, r13d
0x3ac6  4  lea  rcx, [rax + rax*4]
0x3aca  4  mov  rax, qword ptr [r9 + 8]
0x3ace  4  lea  r8, [rdx + rcx*4]
0x3ad2  5  movups  xmm0, xmmword ptr [r8 + rax]
0x3ad7  5  movsxd  rcx, dword ptr [r8 + rax + 0x10]
0x3adc  3  mov  dword ptr [rbp - 0x50], ecx
0x3adf  4  movd  eax, xmm0
0x3ae3  4  movups  xmmword ptr [rbp - 0x60], xmm0
0x3ae7  3  cmp  eax, r14d
0x3aea  6  jg  0x3c26
0x3af0  4  mov  rax, qword ptr [rbp - 0x60]
0x3af4  4  shr  rax, 0x20
0x3af8  3  cmp  r14d, eax
0x3afb  6  jg  0x3c26
0x3b01  3  mov  r12d, r15d
0x3b04  3  mov  rdx, rcx
0x3b07  4  add  rdx, qword ptr [rsi + 8]
0x3b0b  4  mov  r15, qword ptr [rbp - 0x58]
0x3b0f  4  shr  r15, 0x20
0x3b13  4  mov  qword ptr [rbp - 0x70], rdx
0x3b17  3  test  r15d, r15d
0x3b1a  6  je  0x3c13
0x3b20  3  mov  eax, r12d
0x3b23  4  lea  rcx, [rax + rax*4]
0x3b27  4  movups  xmm0, xmmword ptr [rdx + rcx*4]
0x3b2b  4  movups  xmmword ptr [rbp - 8], xmm0
0x3b2f  4  mov  eax, dword ptr [rdx + rcx*4 + 0x10]
0x3b33  3  mov  dword ptr [rbp + 8], eax
0x3b36  5  call  0x2cd3
0x3b3b  4  mov  rcx, qword ptr [rbx + 0x30]
0x3b3f  4  add  rax, 4
0x3b43  4  movsxd  rdx, dword ptr [rcx + 0xc]
0x3b47  3  add  rax, rdx
0x3b4a  5  mov  qword ptr [rsp + 0x70], rax
0x3b4f  5  call  0x2cd3
0x3b54  4  mov  rcx, qword ptr [rbx + 0x30]
0x3b58  4  movsxd  rdx, dword ptr [rcx + 0xc]
0x3b5c  3  mov  ecx, dword ptr [rax + rdx]
0x3b5f  4  mov  dword ptr [rsp + 0x64], ecx
0x3b63  2  test  ecx, ecx
0x3b65  2  jle  0x3ba3
0x3b67  5  call  0x2cd3
0x3b6c  5  mov  rcx, qword ptr [rsp + 0x70]
0x3b71  4  mov  r8, qword ptr [rbx + 0x30]
0x3b75  3  movsxd  rcx, dword ptr [rcx]
0x3b78  3  add  rax, rcx
0x3b7b  4  lea  rcx, [rbp - 8]
0x3b7f  3  mov  rdx, rax
0x3b82  4  mov  qword ptr [rbp - 0x78], rax
0x3b86  5  call  0x3fd7
0x3b8b  2  test  eax, eax
0x3b8d  2  jne  0x3bb4
0x3b8f  4  mov  eax, dword ptr [rsp + 0x64]
0x3b93  6  add  qword ptr [rsp + 0x70], 4
0x3b99  2  dec  eax
0x3b9b  4  mov  dword ptr [rsp + 0x64], eax
0x3b9f  2  test  eax, eax
0x3ba1  2  jg  0x3b67
0x3ba3  3  inc  r12d
0x3ba6  3  cmp  r12d, r15d
0x3ba9  2  je  0x3c1a
0x3bab  4  mov  rdx, qword ptr [rbp - 0x70]
0x3baf  5  jmp  0x3b20
0x3bb4  6  mov  al, byte ptr [rbp + 0x98]
0x3bba  3  mov  r9, rsi
0x3bbd  5  mov  r12, qword ptr [rsp + 0x78]
0x3bc2  3  mov  rcx, rbx
0x3bc5  5  mov  r8, qword ptr [rsp + 0x68]
0x3bca  3  mov  rdx, r12
0x3bcd  4  mov  byte ptr [rsp + 0x58], al
0x3bd1  4  mov  al, byte ptr [rsp + 0x60]
0x3bd5  4  mov  byte ptr [rsp + 0x50], al
0x3bd9  4  mov  rax, qword ptr [rbp - 0x68]
0x3bdd  5  mov  qword ptr [rsp + 0x48], rax
0x3be2  6  mov  eax, dword ptr [rbp + 0xa0]
0x3be8  4  mov  dword ptr [rsp + 0x40], eax
0x3bec  4  lea  rax, [rbp - 0x60]
0x3bf0  5  mov  qword ptr [rsp + 0x38], rax
0x3bf5  4  mov  rax, qword ptr [rbp - 0x78]
0x3bf9  5  mov  qword ptr [rsp + 0x30], rax
0x3bfe  4  lea  rax, [rbp - 8]
0x3c02  5  mov  qword ptr [rsp + 0x28], rax
0x3c07  5  mov  qword ptr [rsp + 0x20], rdi
0x3c0c  5  call  0x380f
0x3c11  2  jmp  0x3c1f
0x3c13  5  mov  r12, qword ptr [rsp + 0x78]
0x3c18  2  jmp  0x3c23
0x3c1a  5  mov  r12, qword ptr [rsp + 0x78]
0x3c1f  4  mov  r9, qword ptr [rbp - 0x80]
0x3c23  3  xor  r15d, r15d
0x3c26  3  inc  r13d
0x3c29  4  cmp  r13d, dword ptr [rbp - 0x10]
0x3c2d  6  jb  0x3ab8
0x3c33  2  mov  eax, dword ptr [rdi]
0x3c35  5  and  eax, 0x1fffffff
0x3c3a  5  cmp  eax, 0x19930521
0x3c3f  6  jb  0x3d3f
0x3c45  4  cmp  dword ptr [rdi + 0x20], r15d
0x3c49  2  je  0x3c59
0x3c4b  5  call  0x2cbf
0x3c50  4  movsxd  rcx, dword ptr [rdi + 0x20]
0x3c54  3  add  rax, rcx
0x3c57  2  jne  0x3c7a
0x3c59  3  mov  eax, dword ptr [rdi + 0x24]
0x3c5c  3  shr  eax, 2
0x3c5f  2  test  al, 1
0x3c61  6  je  0x3d3f
0x3c67  3  mov  rdx, rdi
0x3c6a  3  mov  rcx, rsi
0x3c6d  5  call  0x288f
0x3c72  2  test  al, al
0x3c74  6  jne  0x3d3f
0x3c7a  3  mov  eax, dword ptr [rdi + 0x24]
0x3c7d  3  shr  eax, 2
0x3c80  2  test  al, 1
0x3c82  6  jne  0x3d95
0x3c88  4  cmp  dword ptr [rdi + 0x20], r15d
0x3c8c  2  je  0x3c9f
0x3c8e  5  call  0x2cbf
0x3c93  3  mov  rdx, rax
0x3c96  4  movsxd  rax, dword ptr [rdi + 0x20]
0x3c9a  3  add  rdx, rax
0x3c9d  2  jmp  0x3ca2
0x3c9f  3  mov  rdx, r15
0x3ca2  3  mov  rcx, rbx
0x3ca5  5  call  0x48d7
0x3caa  2  test  al, al
0x3cac  6  jne  0x3d3f
0x3cb2  4  lea  r9, [rbp - 0x78]
0x3cb6  3  mov  r8, rdi
0x3cb9  3  mov  rdx, rsi
0x3cbc  3  mov  rcx, r12
0x3cbf  5  call  0x291f
0x3cc4  6  mov  cl, byte ptr [rbp + 0x98]
0x3cca  3  mov  r9, rax
0x3ccd  5  mov  r8, qword ptr [rsp + 0x68]
0x3cd2  3  mov  rdx, rbx
0x3cd5  4  mov  byte ptr [rsp + 0x50], cl
0x3cd9  3  or  ecx, 0xffffffff
0x3cdc  5  mov  qword ptr [rsp + 0x48], rsi
0x3ce1  5  mov  qword ptr [rsp + 0x40], r15
0x3ce6  4  mov  dword ptr [rsp + 0x38], ecx
0x3cea  4  mov  dword ptr [rsp + 0x30], ecx
0x3cee  3  mov  rcx, r12
0x3cf1  5  mov  qword ptr [rsp + 0x28], rdi
0x3cf6  5  mov  qword ptr [rsp + 0x20], r15
0x3cfb  5  call  0x2b2b
0x3d00  2  jmp  0x3d3f
0x3d02  4  cmp  dword ptr [rdi + 0xc], 0
0x3d06  2  jbe  0x3d3f
0x3d08  7  cmp  byte ptr [rbp + 0x98], 0
0x3d0f  6  jne  0x3db2
0x3d15  6  mov  eax, dword ptr [rbp + 0xa0]
0x3d1b  3  mov  r9, rsi
0x3d1e  5  mov  qword ptr [rsp + 0x38], r13
0x3d23  3  mov  r8, r15
0x3d26  4  mov  dword ptr [rsp + 0x30], eax
0x3d2a  3  mov  rdx, r12
0x3d2d  5  mov  dword ptr [rsp + 0x28], r14d
0x3d32  3  mov  rcx, rbx
0x3d35  5  mov  qword ptr [rsp + 0x20], rdi
0x3d3a  5  call  0x3dbb
0x3d3f  5  call  0x232f
0x3d44  5  cmp  qword ptr [rax + 0x38], 0
0x3d49  2  jne  0x3db2
0x3d4b  4  mov  rcx, qword ptr [rbp + 0x10]
0x3d4f  3  xor  rcx, rsp
0x3d52  5  call  0x14c73
0x3d57  7  add  rsp, 0x128
0x3d5e  2  pop  r15
0x3d60  2  pop  r14
0x3d62  2  pop  r13
0x3d64  2  pop  r12
0x3d66  1  pop  rdi
0x3d67  1  pop  rsi
0x3d68  1  pop  rbx
0x3d69  1  pop  rbp
0x3d6a  1  ret  
0x3d6b  2  mov  dl, 1
0x3d6d  3  mov  rcx, rbx
0x3d70  5  call  0x1d67
0x3d75  4  lea  rcx, [rbp - 8]
0x3d79  5  call  0x4393
0x3d7e  7  lea  rdx, [rip + 0x1bfc3]
0x3d85  4  lea  rcx, [rbp - 8]
0x3d89  5  call  0x4c43
0x3d8e  1  int3  
0x3d8f  5  call  0x83df
0x3d94  1  int3  
0x3d95  5  call  0x232f
0x3d9a  4  mov  qword ptr [rax + 0x20], rbx
0x3d9e  5  call  0x232f
0x3da3  5  mov  rcx, qword ptr [rsp + 0x68]
0x3da8  4  mov  qword ptr [rax + 0x28], rcx
0x3dac  5  call  0x83df
0x3db1  1  int3  
0x3db2  5  call  0x8487
0x3db7  1  int3  
0x3db8  1  int3  
0x3db9  1  int3  
0x3dba  1  int3  
0x3dbb  3  mov  rax, rsp
0x3dbe  4  mov  qword ptr [rax + 0x20], rbx
0x3dc2  4  mov  qword ptr [rax + 0x18], r8
0x3dc6  4  mov  qword ptr [rax + 0x10], rdx
0x3dca  1  push  rbp
0x3dcb  1  push  rsi
0x3dcc  1  push  rdi
0x3dcd  2  push  r12
0x3dcf  2  push  r13
0x3dd1  2  push  r14
0x3dd3  2  push  r15
0x3dd5  4  lea  rbp, [rax - 0x3f]
0x3dd9  7  sub  rsp, 0xc0
0x3de0  6  cmp  dword ptr [rcx], 0x80000003
0x3de6  3  mov  rsi, r9
0x3de9  3  mov  r15, r8
0x3dec  3  mov  r14, rcx
0x3def  2  je  0x3e5f
0x3df1  5  call  0x232f
0x3df6  4  mov  r12d, dword ptr [rbp + 0x6f]
0x3dfa  4  mov  rdi, qword ptr [rbp + 0x67]
0x3dfe  5  cmp  qword ptr [rax + 0x10], 0
0x3e03  2  je  0x3e7a
0x3e05  2  xor  ecx, ecx
0x3e07  6  call  qword ptr [rip + 0x122db]
0x3e0d  3  mov  rbx, rax
0x3e10  5  call  0x232f
0x3e15  4  cmp  qword ptr [rax + 0x10], rbx
0x3e19  2  je  0x3e7a
0x3e1b  7  cmp  dword ptr [r14], 0xe0434f4d
0x3e22  2  je  0x3e7a
0x3e24  7  cmp  dword ptr [r14], 0xe0434352
0x3e2b  4  mov  r13d, dword ptr [rbp + 0x77]
0x3e2f  2  je  0x3e7e
0x3e31  4  mov  rax, qword ptr [rbp + 0x7f]
0x3e35  3  mov  r9, rsi
0x3e38  4  mov  rdx, qword ptr [rbp + 0x4f]
0x3e3c  3  mov  r8, r15
0x3e3f  5  mov  dword ptr [rsp + 0x38], r12d
0x3e44  3  mov  rcx, r14
0x3e47  5  mov  qword ptr [rsp + 0x30], rax
0x3e4c  5  mov  dword ptr [rsp + 0x28], r13d
0x3e51  5  mov  qword ptr [rsp + 0x20], rdi
0x3e56  5  call  0x27d7
0x3e5b  2  test  eax, eax
0x3e5d  2  je  0x3e7e
0x3e5f  8  mov  rbx, qword ptr [rsp + 0x118]
0x3e67  7  add  rsp, 0xc0
0x3e6e  2  pop  r15
0x3e70  2  pop  r14
0x3e72  2  pop  r13
0x3e74  2  pop  r12
0x3e76  1  pop  rdi
0x3e77  1  pop  rsi
0x3e78  1  pop  rbp
0x3e79  1  ret  
0x3e7a  4  mov  r13d, dword ptr [rbp + 0x77]
0x3e7e  4  mov  rax, qword ptr [rsi + 8]
0x3e82  4  mov  qword ptr [rbp - 0x51], rax
0x3e86  4  mov  qword ptr [rbp - 0x59], rdi
0x3e8a  4  cmp  dword ptr [rdi + 0xc], 0
0x3e8e  6  jbe  0x3fce
0x3e94  5  mov  dword ptr [rsp + 0x28], r13d
0x3e99  4  lea  rdx, [rbp - 0x59]
0x3e9d  3  mov  r9, rsi
0x3ea0  5  mov  qword ptr [rsp + 0x20], rdi
0x3ea5  3  mov  r8d, r12d
0x3ea8  4  lea  rcx, [rbp - 0x21]
0x3eac  5  call  0x29eb
0x3eb1  4  movups  xmm0, xmmword ptr [rbp - 0x21]
0x3eb5  5  movdqu  xmmword ptr [rbp - 0x49], xmm0
0x3eba  5  psrldq  xmm0, 8
0x3ebf  4  movd  eax, xmm0
0x3ec3  3  cmp  eax, dword ptr [rbp - 9]
0x3ec6  2  jae  0x3e5f
0x3ec8  4  mov  r9, qword ptr [rbp - 0x21]
0x3ecc  4  mov  r15d, dword ptr [rbp - 0x41]
0x3ed0  4  mov  qword ptr [rbp + 0x47], r9
0x3ed4  4  mov  rax, qword ptr [rbp - 0x49]
0x3ed8  3  mov  rax, qword ptr [rax]
0x3edb  4  movsxd  rdx, dword ptr [rax + 0x10]
0x3edf  3  mov  eax, r15d
0x3ee2  4  lea  rcx, [rax + rax*4]
0x3ee6  4  mov  rax, qword ptr [r9 + 8]
0x3eea  4  lea  r8, [rdx + rcx*4]
0x3eee  5  movups  xmm0, xmmword ptr [r8 + rax]
0x3ef3  5  movsxd  rdx, dword ptr [r8 + rax + 0x10]
0x3ef8  3  mov  dword ptr [rbp - 0x29], edx
0x3efb  4  movd  eax, xmm0
0x3eff  4  movups  xmmword ptr [rbp - 0x39], xmm0
0x3f03  3  cmp  eax, r12d
0x3f06  6  jg  0x3fb4
0x3f0c  4  mov  rax, qword ptr [rbp - 0x39]
0x3f10  4  shr  rax, 0x20
0x3f14  3  cmp  r12d, eax
0x3f17  6  jg  0x3fb4
0x3f1d  4  mov  rax, qword ptr [rbp - 0x31]
0x3f21  4  mov  rbx, qword ptr [rsi + 8]
0x3f25  4  shr  rax, 0x20
0x3f29  4  add  rbx, -0x14
0x3f2d  4  lea  rcx, [rax + rax*4]
0x3f31  4  lea  rdx, [rdx + rcx*4]
0x3f35  3  add  rbx, rdx
0x3f38  4  cmp  dword ptr [rbx + 4], 0
0x3f3c  2  je  0x3f6b
0x3f3e  4  movsxd  r13, dword ptr [rbx + 4]
0x3f42  5  call  0x2cbf
0x3f47  3  add  rax, r13
0x3f4a  2  je  0x3f67
0x3f4c  3  test  r13d, r13d
0x3f4f  2  je  0x3f5f
0x3f51  5  call  0x2cbf
0x3f56  4  movsxd  rcx, dword ptr [rbx + 4]
0x3f5a  3  add  rax, rcx
0x3f5d  2  jmp  0x3f61
0x3f5f  2  xor  eax, eax
0x3f61  4  cmp  byte ptr [rax + 0x10], 0
0x3f65  2  jne  0x3fb4
0x3f67  4  mov  r13d, dword ptr [rbp + 0x77]
0x3f6b  3  test  byte ptr [rbx], 0x40
0x3f6e  2  jne  0x3fb4
0x3f70  4  mov  rax, qword ptr [rbp + 0x7f]
0x3f74  3  mov  r9, rsi
0x3f77  4  mov  r8, qword ptr [rbp + 0x57]
0x3f7b  3  mov  rcx, r14
0x3f7e  4  mov  rdx, qword ptr [rbp + 0x4f]
0x3f82  5  mov  byte ptr [rsp + 0x58], 0
0x3f87  5  mov  byte ptr [rsp + 0x50], 1
0x3f8c  5  mov  qword ptr [rsp + 0x48], rax
0x3f91  4  lea  rax, [rbp - 0x39]
0x3f95  5  mov  dword ptr [rsp + 0x40], r13d
0x3f9a  5  mov  qword ptr [rsp + 0x38], rax
0x3f9f  6  and  qword ptr [rsp + 0x30], 0
0x3fa5  5  mov  qword ptr [rsp + 0x28], rbx
0x3faa  5  mov  qword ptr [rsp + 0x20], rdi
0x3faf  5  call  0x380f
0x3fb4  4  mov  r13d, dword ptr [rbp + 0x77]
0x3fb8  3  inc  r15d
0x3fbb  4  mov  r9, qword ptr [rbp + 0x47]
0x3fbf  4  cmp  r15d, dword ptr [rbp - 9]
0x3fc3  6  jb  0x3ed4
0x3fc9  5  jmp  0x3e5f
0x3fce  5  call  0x8487
0x3fd3  1  int3  
0x3fd4  1  int3  
0x3fd5  1  int3  
0x3fd6  1  int3  
0x3fd7  3  mov  rax, rsp
0x3fda  4  mov  qword ptr [rax + 8], rbx
0x3fde  4  mov  qword ptr [rax + 0x10], rbp
0x3fe2  4  mov  qword ptr [rax + 0x18], rsi
0x3fe6  4  mov  qword ptr [rax + 0x20], rdi
0x3fea  2  push  r14
0x3fec  4  sub  rsp, 0x20
0x3ff0  2  xor  ebx, ebx
0x3ff2  3  mov  r14, r8
0x3ff5  3  mov  rbp, rdx
0x3ff8  3  mov  rdi, rcx
0x3ffb  3  cmp  dword ptr [rcx + 4], ebx
0x3ffe  6  je  0x40f4
0x4004  4  movsxd  rsi, dword ptr [rcx + 4]
0x4008  5  call  0x2cbf
0x400d  3  mov  r9, rax
0x4010  3  add  r9, rsi
0x4013  6  je  0x40f4
0x4019  2  test  esi, esi
0x401b  2  je  0x402c
0x401d  4  movsxd  rsi, dword ptr [rdi + 4]
0x4021  5  call  0x2cbf
0x4026  4  lea  rcx, [rsi + rax]
0x402a  2  jmp  0x4031
0x402c  3  mov  rcx, rbx
0x402f  2  mov  esi, ebx
0x4031  3  cmp  byte ptr [rcx + 0x10], bl
0x4034  6  je  0x40f4
0x403a  3  test  byte ptr [rdi], 0x80
0x403d  2  je  0x4049
0x403f  4  test  byte ptr [rbp], 0x10
0x4043  6  jne  0x40f4
0x4049  2  test  esi, esi
0x404b  2  je  0x405e
0x404d  5  call  0x2cbf
0x4052  3  mov  rsi, rax
0x4055  4  movsxd  rax, dword ptr [rdi + 4]
0x4059  3  add  rsi, rax
0x405c  2  jmp  0x4061
0x405e  3  mov  rsi, rbx
0x4061  5  call  0x2cd3
0x4066  3  mov  rcx, rax
0x4069  4  movsxd  rax, dword ptr [rbp + 4]
0x406d  3  add  rcx, rax
0x4070  3  cmp  rsi, rcx
0x4073  2  je  0x40c0
0x4075  3  cmp  dword ptr [rdi + 4], ebx
0x4078  2  je  0x408b
0x407a  5  call  0x2cbf
0x407f  3  mov  rsi, rax
0x4082  4  movsxd  rax, dword ptr [rdi + 4]
0x4086  3  add  rsi, rax
0x4089  2  jmp  0x408e
0x408b  3  mov  rsi, rbx
0x408e  5  call  0x2cd3
0x4093  4  movsxd  r8, dword ptr [rbp + 4]
0x4097  4  add  r8, 0x10
0x409b  3  add  r8, rax
0x409e  4  lea  rax, [rsi + 0x10]
0x40a2  3  sub  r8, rax
0x40a5  3  movzx  ecx, byte ptr [rax]
0x40a8  5  movzx  edx, byte ptr [rax + r8]
0x40ad  2  sub  ecx, edx
0x40af  2  jne  0x40b8
0x40b1  3  inc  rax
0x40b4  2  test  edx, edx
0x40b6  2  jne  0x40a5
0x40b8  2  test  ecx, ecx
0x40ba  2  je  0x40c0
0x40bc  2  xor  eax, eax
0x40be  2  jmp  0x40f9
0x40c0  2  mov  al, 2
0x40c2  3  test  byte ptr [rbp], al
0x40c5  2  je  0x40cc
0x40c7  3  test  byte ptr [rdi], 8
0x40ca  2  je  0x40f0
0x40cc  4  test  byte ptr [r14], 1
0x40d0  2  je  0x40d7
0x40d2  3  test  byte ptr [rdi], 1
0x40d5  2  je  0x40f0
0x40d7  4  test  byte ptr [r14], 4
0x40db  2  je  0x40e2
0x40dd  3  test  byte ptr [rdi], 4
0x40e0  2  je  0x40f0
0x40e2  3  test  byte ptr [r14], al
0x40e5  2  je  0x40eb
0x40e7  2  test  byte ptr [rdi], al
0x40e9  2  je  0x40f0
0x40eb  5  mov  ebx, 1
0x40f0  2  mov  eax, ebx
0x40f2  2  jmp  0x40f9
0x40f4  5  mov  eax, 1
0x40f9  5  mov  rbx, qword ptr [rsp + 0x30]
0x40fe  5  mov  rbp, qword ptr [rsp + 0x38]
0x4103  5  mov  rsi, qword ptr [rsp + 0x40]
0x4108  5  mov  rdi, qword ptr [rsp + 0x48]
0x410d  4  add  rsp, 0x20
0x4111  2  pop  r14
0x4113  1  ret  
0x4114  1  int3  
0x4115  1  int3  
0x4116  1  int3  
0x4117  3  mov  rax, rsp
0x411a  4  mov  qword ptr [rax + 8], rbx
0x411e  4  mov  qword ptr [rax + 0x10], rbp
0x4122  4  mov  qword ptr [rax + 0x18], rsi
0x4126  4  mov  qword ptr [rax + 0x20], rdi
0x412a  2  push  r14
0x412c  4  sub  rsp, 0x50
0x4130  3  mov  rdi, rcx
0x4133  3  mov  rsi, r9
0x4136  3  mov  rcx, r8
0x4139  3  mov  r14, r8
0x413c  3  mov  rbp, rdx
0x413f  5  call  0x22d7
0x4144  5  call  0x232f
0x4149  8  mov  rbx, qword ptr [rsp + 0x80]
0x4151  5  mov  ecx, 0x80000029
0x4156  5  mov  edx, 0x80000026
0x415b  4  cmp  dword ptr [rax + 0x40], 0
0x415f  2  jne  0x4199
0x4161  6  cmp  dword ptr [rdi], 0xe06d7363
0x4167  2  je  0x4199
0x4169  2  cmp  dword ptr [rdi], ecx
0x416b  2  jne  0x417d
0x416d  4  cmp  dword ptr [rdi + 0x18], 0xf
0x4171  2  jne  0x4181
0x4173  8  cmp  qword ptr [rdi + 0x60], 0x19930520
0x417b  2  je  0x4199
0x417d  2  cmp  dword ptr [rdi], edx
0x417f  2  je  0x4199
0x4181  2  mov  eax, dword ptr [rbx]
0x4183  5  and  eax, 0x1fffffff
0x4188  5  cmp  eax, 0x19930522
0x418d  2  jb  0x4199
0x418f  4  test  byte ptr [rbx + 0x24], 1
0x4193  6  jne  0x4328
0x4199  4  test  byte ptr [rdi + 4], 0x66
0x419d  6  je  0x4231
0x41a3  4  cmp  dword ptr [rbx + 4], 0
0x41a7  6  je  0x4328
0x41ad  8  cmp  dword ptr [rsp + 0x88], 0
0x41b5  6  jne  0x4328
0x41bb  4  test  byte ptr [rdi + 4], 0x20
0x41bf  2  je  0x421e
0x41c1  2  cmp  dword ptr [rdi], edx
0x41c3  2  jne  0x41fc
0x41c5  4  mov  r8, qword ptr [rsi + 0x20]
0x41c9  3  mov  rdx, rsi
0x41cc  3  mov  rcx, rbx
0x41cf  5  call  0x34e7
0x41d4  3  cmp  eax, -1
0x41d7  6  jl  0x4348
0x41dd  3  cmp  eax, dword ptr [rbx + 4]
0x41e0  6  jge  0x4348
0x41e6  3  mov  r9d, eax
0x41e9  3  mov  rcx, rbp
0x41ec  3  mov  rdx, rsi
0x41ef  3  mov  r8, rbx
0x41f2  5  call  0x46b3
0x41f7  5  jmp  0x4328
0x41fc  2  cmp  dword ptr [rdi], ecx
0x41fe  2  jne  0x421e
0x4200  4  mov  r9d, dword ptr [rdi + 0x38]
0x4204  4  cmp  r9d, -1
0x4208  6  jl  0x4348
0x420e  4  cmp  r9d, dword ptr [rbx + 4]
0x4212  6  jge  0x4348
0x4218  4  mov  rcx, qword ptr [rdi + 0x28]
0x421c  2  jmp  0x41ec
0x421e  3  mov  r8, rbx
0x4221  3  mov  rdx, rsi
0x4224  3  mov  rcx, rbp
0x4227  5  call  0x28bb
0x422c  5  jmp  0x4328
0x4231  4  cmp  dword ptr [rbx + 0xc], 0
0x4235  2  jne  0x4279
0x4237  2  mov  eax, dword ptr [rbx]
0x4239  5  and  eax, 0x1fffffff
0x423e  5  cmp  eax, 0x19930521
0x4243  2  jb  0x4259
0x4245  4  cmp  dword ptr [rbx + 0x20], 0
0x4249  2  je  0x4259
0x424b  5  call  0x2cbf
0x4250  4  movsxd  rcx, dword ptr [rbx + 0x20]
0x4254  3  add  rax, rcx
0x4257  2  jne  0x4279
0x4259  2  mov  eax, dword ptr [rbx]
0x425b  5  and  eax, 0x1fffffff
0x4260  5  cmp  eax, 0x19930522
0x4265  6  jb  0x4328
0x426b  3  mov  eax, dword ptr [rbx + 0x24]
0x426e  3  shr  eax, 2
0x4271  2  test  al, 1
0x4273  6  je  0x4328
0x4279  6  cmp  dword ptr [rdi], 0xe06d7363
0x427f  2  jne  0x42ef
0x4281  4  cmp  dword ptr [rdi + 0x18], 3
0x4285  2  jb  0x42ef
0x4287  7  cmp  dword ptr [rdi + 0x20], 0x19930522
0x428e  2  jbe  0x42ef
0x4290  4  mov  rax, qword ptr [rdi + 0x30]
0x4294  4  cmp  dword ptr [rax + 8], 0
0x4298  2  je  0x42ef
0x429a  5  call  0x2cd3
0x429f  4  mov  rcx, qword ptr [rdi + 0x30]
0x42a3  3  mov  r10, rax
0x42a6  4  movsxd  rdx, dword ptr [rcx + 8]
0x42aa  3  add  r10, rdx
0x42ad  2  je  0x42ef
0x42af  8  movzx  ecx, byte ptr [rsp + 0x98]
0x42b7  3  mov  r9, rsi
0x42ba  7  mov  eax, dword ptr [rsp + 0x88]
0x42c1  3  mov  r8, r14
0x42c4  4  mov  dword ptr [rsp + 0x38], ecx
0x42c8  3  mov  rdx, rbp
0x42cb  8  mov  rcx, qword ptr [rsp + 0x90]
0x42d3  5  mov  qword ptr [rsp + 0x30], rcx
0x42d8  3  mov  rcx, rdi
0x42db  4  mov  dword ptr [rsp + 0x28], eax
0x42df  3  mov  rax, r10
0x42e2  5  mov  qword ptr [rsp + 0x20], rbx
0x42e7  6  call  qword ptr [rip + 0x11f7b]
0x42ed  2  jmp  0x432d
0x42ef  8  mov  rax, qword ptr [rsp + 0x90]
0x42f7  3  mov  r9, rsi
0x42fa  5  mov  qword ptr [rsp + 0x38], rax
0x42ff  3  mov  r8, r14
0x4302  7  mov  eax, dword ptr [rsp + 0x88]
0x4309  3  mov  rdx, rbp
0x430c  4  mov  dword ptr [rsp + 0x30], eax
0x4310  3  mov  rcx, rdi
0x4313  7  mov  al, byte ptr [rsp + 0x98]
0x431a  4  mov  byte ptr [rsp + 0x28], al
0x431e  5  mov  qword ptr [rsp + 0x20], rbx
0x4323  5  call  0x38e3
0x4328  5  mov  eax, 1
0x432d  5  mov  rbx, qword ptr [rsp + 0x60]
0x4332  5  mov  rbp, qword ptr [rsp + 0x68]
0x4337  5  mov  rsi, qword ptr [rsp + 0x70]
0x433c  5  mov  rdi, qword ptr [rsp + 0x78]
0x4341  4  add  rsp, 0x50
0x4345  2  pop  r14
0x4347  1  ret  
0x4348  5  call  0x8487
0x434d  1  int3  
0x434e  1  int3  
0x434f  5  jmp  0x4117
0x4354  1  int3  
0x4355  1  int3  
0x4356  1  int3  
0x4357  2  push  rbx
0x4359  4  sub  rsp, 0x20
0x435d  3  mov  rbx, rcx
0x4360  3  mov  rax, rdx
0x4363  7  lea  rcx, [rip + 0x12f96]
0x436a  3  xorps  xmm0, xmm0
0x436d  3  mov  qword ptr [rbx], rcx
0x4370  4  lea  rdx, [rbx + 8]
0x4374  4  lea  rcx, [rax + 8]
0x4378  3  movups  xmmword ptr [rdx], xmm0
0x437b  5  call  0x4b8b
0x4380  7  lea  rax, [rip + 0x12fa9]
0x4387  3  mov  qword ptr [rbx], rax
0x438a  3  mov  rax, rbx
0x438d  4  add  rsp, 0x20
0x4391  1  pop  rbx
0x4392  1  ret  
0x4393  5  and  qword ptr [rcx + 0x10], 0
0x4398  7  lea  rax, [rip + 0x12fa1]
0x439f  4  mov  qword ptr [rcx + 8], rax
0x43a3  7  lea  rax, [rip + 0x12f86]
0x43aa  3  mov  qword ptr [rcx], rax
0x43ad  3  mov  rax, rcx
0x43b0  1  ret  
0x43b1  1  int3  
0x43b2  1  int3  
0x43b3  2  push  rbx
0x43b5  4  sub  rsp, 0x20
0x43b9  3  mov  rbx, rcx
0x43bc  3  mov  rax, rdx
0x43bf  7  lea  rcx, [rip + 0x12f3a]
0x43c6  3  xorps  xmm0, xmm0
0x43c9  3  mov  qword ptr [rbx], rcx
0x43cc  4  lea  rdx, [rbx + 8]
0x43d0  4  lea  rcx, [rax + 8]
0x43d4  3  movups  xmmword ptr [rdx], xmm0
0x43d7  5  call  0x4b8b
0x43dc  3  mov  rax, rbx
0x43df  4  add  rsp, 0x20
0x43e3  1  pop  rbx
0x43e4  1  ret  
0x43e5  1  int3  
0x43e6  1  int3  
0x43e7  7  lea  rax, [rip + 0x12f12]
0x43ee  3  mov  qword ptr [rcx], rax
0x43f1  4  add  rcx, 8
0x43f5  5  jmp  0x4c1b
0x43fa  1  int3  
0x43fb  5  mov  qword ptr [rsp + 8], rbx
0x4400  1  push  rdi
0x4401  4  sub  rsp, 0x20
0x4405  7  lea  rax, [rip + 0x12ef4]
0x440c  3  mov  rdi, rcx
0x440f  3  mov  qword ptr [rcx], rax
0x4412  2  mov  ebx, edx
0x4414  4  add  rcx, 8
0x4418  5  call  0x4c1b
0x441d  3  test  bl, 1
0x4420  2  je  0x442f
0x4422  5  mov  edx, 0x18
0x4427  3  mov  rcx, rdi
0x442a  5  call  0x14c93
0x442f  5  mov  rbx, qword ptr [rsp + 0x30]
0x4434  3  mov  rax, rdi
0x4437  4  add  rsp, 0x20
0x443b  1  pop  rdi
0x443c  1  ret  
0x443d  1  int3  
0x443e  1  int3  
0x443f  2  push  rbx
0x4441  1  push  rsi
0x4442  1  push  rdi
0x4443  2  push  r12
0x4445  2  push  r13
0x4447  2  push  r14
0x4449  2  push  r15
0x444b  4  sub  rsp, 0x70
0x444f  3  mov  rdi, rcx
0x4452  3  xor  r15d, r15d
0x4455  5  mov  dword ptr [rsp + 0x20], r15d
0x445a  8  and  dword ptr [rsp + 0xb0], r15d
0x4462  5  and  qword ptr [rsp + 0x28], r15
0x4467  8  and  qword ptr [rsp + 0xc8], r15
0x446f  5  call  0x232f
0x4474  4  mov  r13, qword ptr [rax + 0x28]
0x4478  5  mov  qword ptr [rsp + 0x40], r13
0x447d  5  call  0x232f
0x4482  4  mov  rax, qword ptr [rax + 0x20]
0x4486  8  mov  qword ptr [rsp + 0xc0], rax
0x448e  4  mov  rsi, qword ptr [rdi + 0x50]
0x4492  8  mov  qword ptr [rsp + 0xb8], rsi
0x449a  4  mov  rax, qword ptr [rdi + 0x48]
0x449e  5  mov  qword ptr [rsp + 0x30], rax
0x44a3  4  mov  rbx, qword ptr [rdi + 0x40]
0x44a7  4  mov  rax, qword ptr [rdi + 0x30]
0x44ab  5  mov  qword ptr [rsp + 0x48], rax
0x44b0  4  mov  r14, qword ptr [rdi + 0x28]
0x44b4  5  mov  qword ptr [rsp + 0x50], r14
0x44b9  3  mov  rcx, rbx
0x44bc  5  call  0x22d7
0x44c1  5  call  0x232f
0x44c6  4  mov  qword ptr [rax + 0x20], rsi
0x44ca  5  call  0x232f
0x44cf  4  mov  qword ptr [rax + 0x28], rbx
0x44d3  5  call  0x232f
0x44d8  4  mov  rdx, qword ptr [rax + 0x20]
0x44dc  4  mov  rdx, qword ptr [rdx + 0x28]
0x44e0  5  lea  rcx, [rsp + 0x60]
0x44e5  5  call  0x2c2f
0x44ea  3  mov  r12, rax
0x44ed  5  mov  qword ptr [rsp + 0x38], rax
0x44f2  4  cmp  qword ptr [rdi + 0x58], r15
0x44f6  2  je  0x4514
0x44f8  11  mov  dword ptr [rsp + 0xb0], 1
0x4503  5  call  0x232f
0x4508  4  mov  rcx, qword ptr [rax + 0x70]
0x450c  8  mov  qword ptr [rsp + 0xc8], rcx
0x4514  6  mov  r8d, 0x100
0x451a  3  mov  rdx, r14
0x451d  5  mov  rcx, qword ptr [rsp + 0x48]
0x4522  5  call  0x4a93
0x4527  3  mov  rbx, rax
0x452a  5  mov  qword ptr [rsp + 0x28], rax
0x452f  8  mov  rdi, qword ptr [rsp + 0xc0]
0x4537  2  jmp  0x45b1
0x4539  8  mov  dword ptr [rsp + 0x20], 1
0x4541  5  call  0x232f
0x4546  4  and  dword ptr [rax + 0x40], 0
0x454a  8  mov  rsi, qword ptr [rsp + 0xb8]
0x4552  8  cmp  dword ptr [rsp + 0xb0], 0
0x455a  2  je  0x457d
0x455c  2  mov  dl, 1
0x455e  3  mov  rcx, rsi
0x4561  5  call  0x1d67
0x4566  8  mov  rax, qword ptr [rsp + 0xc8]
0x456e  4  lea  r9, [rax + 0x20]
0x4572  4  mov  r8d, dword ptr [rax + 0x18]
0x4576  3  mov  edx, dword ptr [rax + 4]
0x4579  2  mov  ecx, dword ptr [rax]
0x457b  2  jmp  0x458a
0x457d  4  lea  r9, [rsi + 0x20]
0x4581  4  mov  r8d, dword ptr [rsi + 0x18]
0x4585  3  mov  edx, dword ptr [rsi + 4]
0x4588  2  mov  ecx, dword ptr [rsi]
0x458a  6  call  qword ptr [rip + 0x11b60]
0x4590  5  mov  r15d, dword ptr [rsp + 0x20]
0x4595  5  mov  rbx, qword ptr [rsp + 0x28]
0x459a  5  mov  r13, qword ptr [rsp + 0x40]
0x459f  8  mov  rdi, qword ptr [rsp + 0xc0]
0x45a7  5  mov  r14, qword ptr [rsp + 0x50]
0x45ac  5  mov  r12, qword ptr [rsp + 0x38]
0x45b1  3  mov  rcx, r12
0x45b4  5  call  0x2c6b
0x45b9  3  test  r15d, r15d
0x45bc  2  jne  0x45f0
0x45be  6  cmp  dword ptr [rsi], 0xe06d7363
0x45c4  2  jne  0x45f0
0x45c6  4  cmp  dword ptr [rsi + 0x18], 4
0x45ca  2  jne  0x45f0
0x45cc  3  mov  eax, dword ptr [rsi + 0x20]
0x45cf  5  sub  eax, 0x19930520
0x45d4  3  cmp  eax, 2
0x45d7  2  ja  0x45f0
0x45d9  4  mov  rcx, qword ptr [rsi + 0x28]
0x45dd  5  call  0x1ddb
0x45e2  2  test  eax, eax
0x45e4  2  je  0x45f0
0x45e6  2  mov  dl, 1
0x45e8  3  mov  rcx, rsi
0x45eb  5  call  0x1d67
0x45f0  5  call  0x232f
0x45f5  4  mov  qword ptr [rax + 0x20], rdi
0x45f9  5  call  0x232f
0x45fe  4  mov  qword ptr [rax + 0x28], r13
0x4602  5  mov  rax, qword ptr [rsp + 0x30]
0x4607  4  movsxd  rcx, dword ptr [rax + 0x1c]
0x460b  3  mov  rax, qword ptr [r14]
0x460e  8  mov  qword ptr [rcx + rax], 0xfffffffffffffffe
0x4616  3  mov  rax, rbx
0x4619  4  add  rsp, 0x70
0x461d  2  pop  r15
0x461f  2  pop  r14
0x4621  2  pop  r13
0x4623  2  pop  r12
0x4625  1  pop  rdi
0x4626  1  pop  rsi
0x4627  1  pop  rbx
0x4628  1  ret  
0x4629  1  int3  
0x462a  1  int3  
0x462b  5  mov  qword ptr [rsp + 8], rbx
0x4630  1  push  rdi
0x4631  4  sub  rsp, 0x20
0x4635  3  mov  r9, qword ptr [rcx]
0x4638  3  mov  rbx, r8
0x463b  4  and  dword ptr [r8], 0
0x463f  6  mov  r8d, 0xe06d7363
0x4645  3  cmp  dword ptr [r9], r8d
0x4648  2  jne  0x46a4
0x464a  5  cmp  dword ptr [r9 + 0x18], 4
0x464f  5  mov  edi, 1
0x4654  6  mov  r10d, 0x19930520
0x465a  2  jne  0x4677
0x465c  4  mov  eax, dword ptr [r9 + 0x20]
0x4660  3  sub  eax, r10d
0x4663  3  cmp  eax, 2
0x4666  2  ja  0x4677
0x4668  4  mov  rax, qword ptr [rdx + 0x28]
0x466c  4  cmp  qword ptr [r9 + 0x28], rax
0x4670  2  mov  ecx, dword ptr [rbx]
0x4672  3  cmove  ecx, edi
0x4675  2  mov  dword ptr [rbx], ecx
0x4677  3  cmp  dword ptr [r9], r8d
0x467a  2  jne  0x46a4
0x467c  5  cmp  dword ptr [r9 + 0x18], 4
0x4681  2  jne  0x46a4
0x4683  4  mov  ecx, dword ptr [r9 + 0x20]
0x4687  3  sub  ecx, r10d
0x468a  3  cmp  ecx, 2
0x468d  2  ja  0x46a4
0x468f  5  cmp  qword ptr [r9 + 0x30], 0
0x4694  2  jne  0x46a4
0x4696  5  call  0x232f
0x469b  3  mov  dword ptr [rax + 0x40], edi
0x469e  2  mov  eax, edi
0x46a0  2  mov  dword ptr [rbx], edi
0x46a2  2  jmp  0x46a6
0x46a4  2  xor  eax, eax
0x46a6  5  mov  rbx, qword ptr [rsp + 0x30]
0x46ab  4  add  rsp, 0x20
0x46af  1  pop  rdi
0x46b0  1  ret  
0x46b1  1  int3  
0x46b2  1  int3  
0x46b3  5  mov  dword ptr [rsp + 0x20], r9d
0x46b8  5  mov  qword ptr [rsp + 0x18], r8
0x46bd  5  mov  qword ptr [rsp + 8], rcx
0x46c2  1  push  rbx
0x46c3  1  push  rsi
0x46c4  1  push  rdi
0x46c5  2  push  r12
0x46c7  2  push  r13
0x46c9  2  push  r14
0x46cb  2  push  r15
0x46cd  4  sub  rsp, 0x30
0x46d1  3  mov  r12d, r9d
0x46d4  3  mov  rsi, r8
0x46d7  3  mov  rbx, rdx
0x46da  3  mov  r15, rcx
0x46dd  5  call  0x2cbf
0x46e2  3  mov  r13, rax
0x46e5  5  mov  qword ptr [rsp + 0x28], rax
0x46ea  3  mov  r8, rsi
0x46ed  3  mov  rdx, rbx
0x46f0  3  mov  rcx, r15
0x46f3  5  call  0x3443
0x46f8  2  mov  edi, eax
0x46fa  5  call  0x232f
0x46ff  3  inc  dword ptr [rax + 0x30]
0x4702  3  cmp  edi, -1
0x4705  6  je  0x47f6
0x470b  3  cmp  edi, r12d
0x470e  6  jle  0x47f6
0x4714  3  cmp  edi, -1
0x4717  6  jle  0x4831
0x471d  3  cmp  edi, dword ptr [rsi + 4]
0x4720  6  jge  0x4831
0x4726  3  movsxd  r14, edi
0x4729  5  call  0x2cbf
0x472e  4  movsxd  rcx, dword ptr [rsi + 8]
0x4732  4  lea  rax, [rax + r14*8]
0x4736  3  mov  edi, dword ptr [rcx + rax]
0x4739  4  mov  dword ptr [rsp + 0x20], edi
0x473d  5  call  0x2cbf
0x4742  4  movsxd  rcx, dword ptr [rsi + 8]
0x4746  4  lea  rax, [rax + r14*8]
0x474a  5  cmp  dword ptr [rcx + rax + 4], 0
0x474f  2  je  0x476d
0x4751  5  call  0x2cbf
0x4756  4  movsxd  rcx, dword ptr [rsi + 8]
0x475a  4  lea  rax, [rax + r14*8]
0x475e  5  movsxd  rbx, dword ptr [rcx + rax + 4]
0x4763  5  call  0x2cbf
0x4768  3  add  rax, rbx
0x476b  2  jmp  0x476f
0x476d  2  xor  eax, eax
0x476f  3  test  rax, rax
0x4772  2  je  0x47cd
0x4774  3  mov  r8d, edi
0x4777  3  mov  rdx, rsi
0x477a  3  mov  rcx, r15
0x477d  5  call  0x3497
0x4782  5  call  0x2cbf
0x4787  4  movsxd  rcx, dword ptr [rsi + 8]
0x478b  4  lea  rax, [rax + r14*8]
0x478f  5  cmp  dword ptr [rcx + rax + 4], 0
0x4794  2  je  0x47b2
0x4796  5  call  0x2cbf
0x479b  4  movsxd  rcx, dword ptr [rsi + 8]
0x479f  4  lea  rax, [rax + r14*8]
0x47a3  5  movsxd  rbx, dword ptr [rcx + rax + 4]
0x47a8  5  call  0x2cbf
0x47ad  3  add  rax, rbx
0x47b0  2  jmp  0x47b4
0x47b2  2  xor  eax, eax
0x47b4  6  mov  r8d, 0x103
0x47ba  3  mov  rdx, r15
0x47bd  3  mov  rcx, rax
0x47c0  5  call  0x4a93
0x47c5  3  mov  rcx, r13
0x47c8  5  call  0x2ce7
0x47cd  2  jmp  0x47ed
0x47cf  8  mov  r12d, dword ptr [rsp + 0x88]
0x47d7  8  mov  rsi, qword ptr [rsp + 0x80]
0x47df  5  mov  r15, qword ptr [rsp + 0x70]
0x47e4  5  mov  r13, qword ptr [rsp + 0x28]
0x47e9  4  mov  edi, dword ptr [rsp + 0x20]
0x47ed  4  mov  dword ptr [rsp + 0x24], edi
0x47f1  5  jmp  0x4702
0x47f6  5  call  0x232f
0x47fb  4  cmp  dword ptr [rax + 0x30], 0
0x47ff  2  jle  0x4809
0x4801  5  call  0x232f
0x4806  3  dec  dword ptr [rax + 0x30]
0x4809  3  cmp  edi, -1
0x480c  2  je  0x4813
0x480e  3  cmp  edi, r12d
0x4811  2  jg  0x4837
0x4813  3  mov  r8d, edi
0x4816  3  mov  rdx, rsi
0x4819  3  mov  rcx, r15
0x481c  5  call  0x3497
0x4821  4  add  rsp, 0x30
0x4825  2  pop  r15
0x4827  2  pop  r14
0x4829  2  pop  r13
0x482b  2  pop  r12
0x482d  1  pop  rdi
0x482e  1  pop  rsi
0x482f  1  pop  rbx
0x4830  1  ret  
0x4831  5  call  0x8487
0x4836  1  nop  
0x4837  5  call  0x8487
0x483c  1  nop  
0x483d  1  int3  
0x483e  1  int3  
0x483f  5  mov  qword ptr [rsp + 8], rbx
0x4844  5  mov  qword ptr [rsp + 0x10], rbp
0x4849  5  mov  qword ptr [rsp + 0x18], rsi
0x484e  1  push  rdi
0x484f  4  sub  rsp, 0x20
0x4853  3  mov  rbp, rcx
0x4856  3  mov  rdi, r8
0x4859  3  mov  rcx, r8
0x485c  3  mov  rsi, rdx
0x485f  5  call  0x34df
0x4864  5  lea  r9, [rsp + 0x48]
0x4869  3  mov  r8, rdi
0x486c  3  mov  rdx, rsi
0x486f  3  mov  rcx, rbp
0x4872  2  mov  ebx, eax
0x4874  5  call  0x291f
0x4879  3  mov  r8, rdi
0x487c  3  mov  rdx, rsi
0x487f  3  mov  rcx, rbp
0x4882  5  call  0x346b
0x4887  2  cmp  ebx, eax
0x4889  2  jle  0x48ae
0x488b  3  mov  r8d, ebx
0x488e  5  lea  rcx, [rsp + 0x48]
0x4893  3  mov  rdx, rdi
0x4896  5  call  0x3497
0x489b  3  mov  r9d, ebx
0x489e  3  mov  r8, rdi
0x48a1  3  mov  rdx, rsi
0x48a4  3  mov  rcx, rbp
0x48a7  5  call  0x34a3
0x48ac  2  jmp  0x48be
0x48ae  3  mov  r8, rdi
0x48b1  3  mov  rdx, rsi
0x48b4  3  mov  rcx, rbp
0x48b7  5  call  0x346b
0x48bc  2  mov  ebx, eax
0x48be  5  mov  rbp, qword ptr [rsp + 0x38]
0x48c3  2  mov  eax, ebx
0x48c5  5  mov  rbx, qword ptr [rsp + 0x30]
0x48ca  5  mov  rsi, qword ptr [rsp + 0x40]
0x48cf  4  add  rsp, 0x20
0x48d3  1  pop  rdi
0x48d4  1  ret  
0x48d5  1  int3  
0x48d6  1  int3  
0x48d7  5  mov  qword ptr [rsp + 8], rbx
0x48dc  5  mov  qword ptr [rsp + 0x18], rbp
0x48e1  5  mov  qword ptr [rsp + 0x20], rsi
0x48e6  1  push  rdi
0x48e7  2  push  r12
0x48e9  2  push  r13
0x48eb  2  push  r14
0x48ed  2  push  r15
0x48ef  4  sub  rsp, 0x20
0x48f3  3  mov  rbp, rdx
0x48f6  3  mov  r13, rcx
0x48f9  3  test  rdx, rdx
0x48fc  6  je  0x49be
0x4902  3  xor  r15b, r15b
0x4905  2  xor  esi, esi
0x4907  2  cmp  dword ptr [rdx], esi
0x4909  6  jle  0x499e
0x490f  5  call  0x2cd3
0x4914  3  mov  rdx, rax
0x4917  4  mov  rax, qword ptr [r13 + 0x30]
0x491b  4  movsxd  r12, dword ptr [rax + 0xc]
0x491f  4  add  r12, 4
0x4923  3  add  r12, rdx
0x4926  5  call  0x2cd3
0x492b  3  mov  rdx, rax
0x492e  4  mov  rax, qword ptr [r13 + 0x30]
0x4932  4  movsxd  rcx, dword ptr [rax + 0xc]
0x4936  4  mov  r14d, dword ptr [rdx + rcx]
0x493a  3  test  r14d, r14d
0x493d  2  jle  0x4993
0x493f  3  movsxd  rax, esi
0x4942  4  lea  rax, [rax + rax*4]
0x4946  5  mov  qword ptr [rsp + 0x58], rax
0x494b  5  call  0x2cd3
0x4950  4  mov  rbx, qword ptr [r13 + 0x30]
0x4954  3  mov  rdi, rax
0x4957  4  movsxd  rax, dword ptr [r12]
0x495b  3  add  rdi, rax
0x495e  5  call  0x2cbf
0x4963  5  mov  rdx, qword ptr [rsp + 0x58]
0x4968  3  mov  r8, rbx
0x496b  4  movsxd  rcx, dword ptr [rbp + 4]
0x496f  4  lea  rax, [rax + rdx*4]
0x4973  3  mov  rdx, rdi
0x4976  3  add  rcx, rax
0x4979  5  call  0x3fd7
0x497e  2  test  eax, eax
0x4980  2  jne  0x4990
0x4982  3  dec  r14d
0x4985  4  add  r12, 4
0x4989  3  test  r14d, r14d
0x498c  2  jg  0x494b
0x498e  2  jmp  0x4993
0x4990  3  mov  r15b, 1
0x4993  2  inc  esi
0x4995  3  cmp  esi, dword ptr [rbp]
0x4998  6  jl  0x490f
0x499e  5  mov  rbx, qword ptr [rsp + 0x50]
0x49a3  3  mov  al, r15b
0x49a6  5  mov  rbp, qword ptr [rsp + 0x60]
0x49ab  5  mov  rsi, qword ptr [rsp + 0x68]
0x49b0  4  add  rsp, 0x20
0x49b4  2  pop  r15
0x49b6  2  pop  r14
0x49b8  2  pop  r13
0x49ba  2  pop  r12
0x49bc  1  pop  rdi
0x49bd  1  ret  
0x49be  5  call  0x8487
0x49c3  1  int3  
0x49c4  1  int3  
0x49c5  1  int3  
0x49c6  1  int3  
0x49c7  5  mov  qword ptr [rsp + 8], rbx
0x49cc  5  mov  qword ptr [rsp + 0x10], rbp
0x49d1  5  mov  qword ptr [rsp + 0x18], rsi
0x49d6  1  push  rdi
0x49d7  4  sub  rsp, 0x20
0x49db  2  xor  ebp, ebp
0x49dd  3  mov  rdi, rcx
0x49e0  2  cmp  dword ptr [rcx], ebp
0x49e2  2  jle  0x4a34
0x49e4  2  xor  esi, esi
0x49e6  5  call  0x2cbf
0x49eb  4  movsxd  rcx, dword ptr [rdi + 4]
0x49ef  3  add  rax, rsi
0x49f2  5  cmp  dword ptr [rcx + rax + 4], 0
0x49f7  2  je  0x4a14
0x49f9  5  call  0x2cbf
0x49fe  4  movsxd  rcx, dword ptr [rdi + 4]
0x4a02  3  add  rax, rsi
0x4a05  5  movsxd  rbx, dword ptr [rcx + rax + 4]
0x4a0a  5  call  0x2cbf
0x4a0f  3  add  rax, rbx
0x4a12  2  jmp  0x4a16
0x4a14  2  xor  eax, eax
0x4a16  4  lea  rcx, [rax + 8]
0x4a1a  7  lea  rdx, [rip + 0x1d037]
0x4a21  5  call  0x1d3f
0x4a26  2  test  eax, eax
0x4a28  2  je  0x4a4b
0x4a2a  2  inc  ebp
0x4a2c  4  add  rsi, 0x14
0x4a30  2  cmp  ebp, dword ptr [rdi]
0x4a32  2  jl  0x49e6
0x4a34  2  xor  al, al
0x4a36  5  mov  rbx, qword ptr [rsp + 0x30]
0x4a3b  5  mov  rbp, qword ptr [rsp + 0x38]
0x4a40  5  mov  rsi, qword ptr [rsp + 0x40]
0x4a45  4  add  rsp, 0x20
0x4a49  1  pop  rdi
0x4a4a  1  ret  
0x4a4b  2  mov  al, 1
0x4a4d  2  jmp  0x4a36
0x4a4f  3  mov  rax, rdx
0x4a52  3  mov  rdx, r8
0x4a55  3  jmp  rax
0x4a58  1  int3  
0x4a59  1  int3  
0x4a5a  1  int3  
0x4a5b  3  mov  rax, r8
0x4a5e  3  mov  r10, rdx
0x4a61  3  mov  rdx, rax
0x4a64  3  mov  r8d, r9d
0x4a67  3  jmp  r10
0x4a6a  1  int3  
0x4a6b  5  cmp  qword ptr [rcx + 8], 0
0x4a70  7  lea  rax, [rip + 0x12899]
0x4a77  5  cmovne  rax, qword ptr [rcx + 8]
0x4a7c  1  ret  
0x4a7d  1  int3  
0x4a7e  1  int3  
0x4a7f  1  int3  
0x4a80  1  int3  
0x4a81  1  int3  
0x4a82  1  int3  
0x4a83  1  int3  
0x4a84  1  int3  
0x4a85  1  int3  
0x4a86  1  int3  
0x4a87  1  int3  
0x4a88  1  int3  
0x4a89  10  nop  word ptr [rax + rax]
0x4a93  4  sub  rsp, 0x28
0x4a97  5  mov  qword ptr [rsp + 0x30], rcx
0x4a9c  5  mov  qword ptr [rsp + 0x38], rdx
0x4aa1  5  mov  dword ptr [rsp + 0x40], r8d
0x4aa6  3  mov  rdx, qword ptr [rdx]
0x4aa9  3  mov  rax, rcx
0x4aac  5  call  0x22a3
0x4ab1  2  call  rax
0x4ab3  5  call  0x22d3
0x4ab8  3  mov  rcx, rax
0x4abb  5  mov  rdx, qword ptr [rsp + 0x38]
0x4ac0  3  mov  rdx, qword ptr [rdx]
0x4ac3  6  mov  r8d, 2
0x4ac9  5  call  0x22a3
0x4ace  4  add  rsp, 0x28
0x4ad2  1  ret  
0x4ad3  1  int3  
0x4ad4  1  int3  
0x4ad5  1  int3  
0x4ad6  1  int3  
0x4ad7  1  int3  
0x4ad8  1  int3  
0x4ad9  10  nop  word ptr [rax + rax]
0x4ae3  4  sub  rsp, 0x28
0x4ae7  5  mov  qword ptr [rsp + 0x30], rcx
0x4aec  5  mov  qword ptr [rsp + 0x38], rdx
0x4af1  5  mov  dword ptr [rsp + 0x40], r8d
0x4af6  3  mov  rdx, qword ptr [rdx]
0x4af9  3  mov  rax, rcx
0x4afc  5  call  0x22a3
0x4b01  2  call  rax
0x4b03  5  call  0x22d3
0x4b08  4  add  rsp, 0x28
0x4b0c  1  ret  
0x4b0d  1  int3  
0x4b0e  1  int3  
0x4b0f  1  int3  
0x4b10  1  int3  
0x4b11  1  int3  
0x4b12  1  int3  
0x4b13  4  sub  rsp, 0x28
0x4b17  5  mov  qword ptr [rsp + 0x30], rcx
0x4b1c  5  mov  qword ptr [rsp + 0x38], rdx
0x4b21  5  mov  rdx, qword ptr [rsp + 0x38]
0x4b26  3  mov  rdx, qword ptr [rdx]
0x4b29  6  mov  r8d, 2
0x4b2f  5  call  0x22a3
0x4b34  4  add  rsp, 0x28
0x4b38  1  ret  
0x4b39  1  int3  
0x4b3a  1  int3  
0x4b3b  1  int3  
0x4b3c  1  int3  
0x4b3d  1  int3  
0x4b3e  1  int3  
0x4b3f  4  nop  dword ptr [rax]
0x4b43  4  sub  rsp, 0x28
0x4b47  5  mov  qword ptr [rsp + 0x30], rcx
0x4b4c  5  mov  qword ptr [rsp + 0x38], rdx
0x4b51  5  mov  qword ptr [rsp + 0x40], r8
0x4b56  5  mov  dword ptr [rsp + 0x48], r9d
0x4b5b  3  mov  r8d, r9d
0x4b5e  3  mov  rax, rcx
0x4b61  5  call  0x22a3
0x4b66  5  mov  rcx, qword ptr [rsp + 0x40]
0x4b6b  2  call  rax
0x4b6d  5  call  0x22d3
0x4b72  3  mov  rcx, rax
0x4b75  5  mov  rdx, qword ptr [rsp + 0x38]
0x4b7a  6  mov  r8d, 2
0x4b80  5  call  0x22a3
0x4b85  4  add  rsp, 0x28
0x4b89  1  ret  
0x4b8a  1  int3  
0x4b8b  5  mov  qword ptr [rsp + 8], rbx
0x4b90  5  mov  qword ptr [rsp + 0x10], rsi
0x4b95  5  mov  qword ptr [rsp + 0x18], rdi
0x4b9a  2  push  r14
0x4b9c  4  sub  rsp, 0x20
0x4ba0  4  cmp  byte ptr [rcx + 8], 0
0x4ba4  3  mov  r14, rdx
0x4ba7  3  mov  rsi, rcx
0x4baa  2  je  0x4bf8
0x4bac  3  mov  rax, qword ptr [rcx]
0x4baf  3  test  rax, rax
0x4bb2  2  je  0x4bf8
0x4bb4  4  or  rdi, 0xffffffffffffffff
0x4bb8  3  inc  rdi
0x4bbb  4  cmp  byte ptr [rax + rdi], 0
0x4bbf  2  jne  0x4bb8
0x4bc1  4  lea  rcx, [rdi + 1]
0x4bc5  5  call  0x841f
0x4bca  3  mov  rbx, rax
0x4bcd  3  test  rax, rax
0x4bd0  2  je  0x4bee
0x4bd2  3  mov  r8, qword ptr [rsi]
0x4bd5  4  lea  rdx, [rdi + 1]
0x4bd9  3  mov  rcx, rax
0x4bdc  5  call  0x8427
0x4be1  3  mov  rax, rbx
0x4be4  5  mov  byte ptr [r14 + 8], 1
0x4be9  3  mov  qword ptr [r14], rax
0x4bec  2  xor  ebx, ebx
0x4bee  3  mov  rcx, rbx
0x4bf1  5  call  0x840b
0x4bf6  2  jmp  0x4c02
0x4bf8  3  mov  rax, qword ptr [rcx]
0x4bfb  3  mov  qword ptr [rdx], rax
0x4bfe  4  mov  byte ptr [rdx + 8], 0
0x4c02  5  mov  rbx, qword ptr [rsp + 0x30]
0x4c07  5  mov  rsi, qword ptr [rsp + 0x38]
0x4c0c  5  mov  rdi, qword ptr [rsp + 0x40]
0x4c11  4  add  rsp, 0x20
0x4c15  2  pop  r14
0x4c17  1  ret  
0x4c18  1  int3  
0x4c19  1  int3  
0x4c1a  1  int3  
0x4c1b  2  push  rbx
0x4c1d  4  sub  rsp, 0x20
0x4c21  4  cmp  byte ptr [rcx + 8], 0
0x4c25  3  mov  rbx, rcx
0x4c28  2  je  0x4c32
0x4c2a  3  mov  rcx, qword ptr [rcx]
0x4c2d  5  call  0x840b
0x4c32  4  and  qword ptr [rbx], 0
0x4c36  4  mov  byte ptr [rbx + 8], 0
0x4c3a  4  add  rsp, 0x20
0x4c3e  1  pop  rbx
0x4c3f  1  ret  
0x4c40  1  int3  
0x4c41  1  int3  
0x4c42  1  int3  
0x4c43  5  mov  qword ptr [rsp + 0x18], rbx
0x4c48  5  mov  qword ptr [rsp + 0x20], rsi
0x4c4d  1  push  rdi
0x4c4e  4  sub  rsp, 0x50
0x4c52  3  mov  rbx, rdx
0x4c55  3  mov  rsi, rcx
0x4c58  5  mov  edi, 0x19930520
0x4c5d  3  test  rdx, rdx
0x4c60  2  je  0x4c7f
0x4c62  3  test  byte ptr [rdx], 0x10
0x4c65  2  je  0x4c7f
0x4c67  3  mov  rcx, qword ptr [rcx]
0x4c6a  4  sub  rcx, 8
0x4c6e  3  mov  rax, qword ptr [rcx]
0x4c71  4  mov  rbx, qword ptr [rax + 0x30]
0x4c75  4  mov  rax, qword ptr [rax + 0x40]
0x4c79  6  call  qword ptr [rip + 0x115e9]
0x4c7f  2  xor  eax, eax
0x4c81  5  mov  qword ptr [rsp + 0x20], rax
0x4c86  3  test  rbx, rbx
0x4c89  2  je  0x4cad
0x4c8b  5  lea  rdx, [rsp + 0x20]
0x4c90  3  mov  rcx, rbx
0x4c93  6  call  qword ptr [rip + 0x1145f]
0x4c99  5  mov  qword ptr [rsp + 0x20], rax
0x4c9e  3  test  byte ptr [rbx], 8
0x4ca1  2  jne  0x4ca8
0x4ca3  3  test  rax, rax
0x4ca6  2  jne  0x4cad
0x4ca8  5  mov  edi, 0x1994000
0x4cad  5  mov  edx, 1
0x4cb2  5  mov  qword ptr [rsp + 0x28], rdi
0x4cb7  5  lea  r9, [rsp + 0x28]
0x4cbc  5  mov  qword ptr [rsp + 0x30], rsi
0x4cc1  5  mov  ecx, 0xe06d7363
0x4cc6  5  mov  qword ptr [rsp + 0x38], rbx
0x4ccb  5  mov  qword ptr [rsp + 0x40], rax
0x4cd0  4  lea  r8d, [rdx + 3]
0x4cd4  6  call  qword ptr [rip + 0x11416]
0x4cda  5  mov  rbx, qword ptr [rsp + 0x70]
0x4cdf  5  mov  rsi, qword ptr [rsp + 0x78]
0x4ce4  4  add  rsp, 0x50
0x4ce8  1  pop  rdi
0x4ce9  1  ret  
0x4cea  1  int3  
0x4ceb  3  mov  rax, rsp
0x4cee  4  mov  qword ptr [rax + 8], rbx
0x4cf2  4  mov  qword ptr [rax + 0x10], rbp
0x4cf6  4  mov  qword ptr [rax + 0x18], rsi
0x4cfa  4  mov  qword ptr [rax + 0x20], rdi
0x4cfe  2  push  r14
0x4d00  4  sub  rsp, 0x20
0x4d04  6  mov  eax, dword ptr [rip + 0x1cf96]
0x4d0a  2  xor  ebx, ebx
0x4d0c  5  mov  edi, 3
0x4d11  2  test  eax, eax
0x4d13  2  jne  0x4d1c
0x4d15  5  mov  eax, 0x200
0x4d1a  2  jmp  0x4d21
0x4d1c  2  cmp  eax, edi
0x4d1e  3  cmovl  eax, edi
0x4d21  3  movsxd  rcx, eax
0x4d24  5  mov  edx, 8
0x4d29  6  mov  dword ptr [rip + 0x1cf71], eax
0x4d2f  5  call  0x8a8f
0x4d34  2  xor  ecx, ecx
0x4d36  7  mov  qword ptr [rip + 0x1cf6b], rax
0x4d3d  5  call  0x8b07
0x4d42  7  cmp  qword ptr [rip + 0x1cf5f], rbx
0x4d49  2  jne  0x4d7a
0x4d4b  5  mov  edx, 8
0x4d50  6  mov  dword ptr [rip + 0x1cf4a], edi
0x4d56  3  mov  rcx, rdi
0x4d59  5  call  0x8a8f
0x4d5e  2  xor  ecx, ecx
0x4d60  7  mov  qword ptr [rip + 0x1cf41], rax
0x4d67  5  call  0x8b07
0x4d6c  7  cmp  qword ptr [rip + 0x1cf35], rbx
0x4d73  2  jne  0x4d7a
0x4d75  3  or  eax, 0xffffffff
0x4d78  2  jmp  0x4def
0x4d7a  3  mov  rbp, rbx
0x4d7d  7  lea  rsi, [rip + 0x1c2e4]
0x4d84  7  lea  r14, [rip + 0x1c2c5]
0x4d8b  4  lea  rcx, [r14 + 0x30]
0x4d8f  3  xor  r8d, r8d
0x4d92  5  mov  edx, 0xfa0
0x4d97  5  call  0x8ea7
0x4d9c  7  mov  rax, qword ptr [rip + 0x1cf05]
0x4da3  7  lea  r8, [rip + 0x1d286]
0x4daa  3  mov  rdx, rbp
0x4dad  4  sar  rdx, 6
0x4db1  4  mov  qword ptr [rbx + rax], r14
0x4db5  3  mov  rax, rbp
0x4db8  3  and  eax, 0x3f
0x4dbb  4  lea  rcx, [rax + rax*8]
0x4dbf  4  mov  rax, qword ptr [r8 + rdx*8]
0x4dc3  5  mov  rcx, qword ptr [rax + rcx*8 + 0x28]
0x4dc8  4  add  rcx, 2
0x4dcc  4  cmp  rcx, 2
0x4dd0  2  ja  0x4dd8
0x4dd2  6  mov  dword ptr [rsi], 0xfffffffe
0x4dd8  3  inc  rbp
0x4ddb  4  add  r14, 0x58
0x4ddf  4  add  rbx, 8
0x4de3  4  add  rsi, 0x58
0x4de7  4  sub  rdi, 1
0x4deb  2  jne  0x4d8b
0x4ded  2  xor  eax, eax
0x4def  5  mov  rbx, qword ptr [rsp + 0x30]
0x4df4  5  mov  rbp, qword ptr [rsp + 0x38]
0x4df9  5  mov  rsi, qword ptr [rsp + 0x40]
0x4dfe  5  mov  rdi, qword ptr [rsp + 0x48]
0x4e03  4  add  rsp, 0x20
0x4e07  2  pop  r14
0x4e09  1  ret  
0x4e0a  1  int3  
0x4e0b  2  mov  eax, ecx
0x4e0d  7  lea  rcx, [rip + 0x1c23c]
0x4e14  4  imul  rax, rax, 0x58
0x4e18  3  add  rax, rcx
0x4e1b  1  ret  
0x4e1c  1  int3  
0x4e1d  1  int3  
0x4e1e  1  int3  
0x4e1f  2  push  rbx
0x4e21  4  sub  rsp, 0x20
0x4e25  5  call  0x94bf
0x4e2a  5  call  0x90cb
0x4e2f  2  xor  ebx, ebx
0x4e31  7  mov  rcx, qword ptr [rip + 0x1ce70]
0x4e38  4  mov  rcx, qword ptr [rbx + rcx]
0x4e3c  5  call  0x94c7
0x4e41  7  mov  rax, qword ptr [rip + 0x1ce60]
0x4e48  4  mov  rcx, qword ptr [rbx + rax]
0x4e4c  4  add  rcx, 0x30
0x4e50  6  call  qword ptr [rip + 0x1124a]
0x4e56  4  add  rbx, 8
0x4e5a  4  cmp  rbx, 0x18
0x4e5e  2  jne  0x4e31
0x4e60  7  mov  rcx, qword ptr [rip + 0x1ce41]
0x4e67  5  call  0x8b07
0x4e6c  8  and  qword ptr [rip + 0x1ce34], 0
0x4e74  4  add  rsp, 0x20
0x4e78  1  pop  rbx
0x4e79  1  ret  
0x4e7a  1  int3  
0x4e7b  4  add  rcx, 0x30
0x4e7f  6  jmp  qword ptr [rip + 0x1120a]
0x4e86  1  int3  
0x4e87  4  add  rcx, 0x30
0x4e8b  6  jmp  qword ptr [rip + 0x11206]
0x4e92  1  int3  
0x4e93  5  mov  qword ptr [rsp + 8], rbx
0x4e98  5  mov  qword ptr [rsp + 0x20], r9
0x4e9d  1  push  rdi
0x4e9e  4  sub  rsp, 0x20
0x4ea2  3  mov  rbx, r9
0x4ea5  3  mov  rdi, r8
0x4ea8  3  mov  rcx, qword ptr [rdx]
0x4eab  5  call  0x4e7b
0x4eb0  1  nop  
0x4eb1  3  mov  rcx, rdi
0x4eb4  5  call  0x5b7f
0x4eb9  2  mov  edi, eax
0x4ebb  3  mov  rcx, qword ptr [rbx]
0x4ebe  5  call  0x4e87
0x4ec3  2  mov  eax, edi
0x4ec5  5  mov  rbx, qword ptr [rsp + 0x30]
0x4eca  4  add  rsp, 0x20
0x4ece  1  pop  rdi
0x4ecf  1  ret  
0x4ed0  1  int3  
0x4ed1  1  int3  
0x4ed2  1  int3  
0x4ed3  5  mov  qword ptr [rsp + 8], rbx
0x4ed8  5  mov  qword ptr [rsp + 0x10], rbp
0x4edd  5  mov  qword ptr [rsp + 0x18], rsi
0x4ee2  1  push  rdi
0x4ee3  4  sub  rsp, 0x20
0x4ee7  10  movabs  rax, 0x7fffffffffffffff
0x4ef1  3  mov  rbp, rcx
0x4ef4  3  cmp  rdx, rax
0x4ef7  2  jbe  0x4f0a
0x4ef9  5  mov  byte ptr [r8 + 0x30], 1
0x4efe  2  xor  al, al
0x4f00  8  mov  dword ptr [r8 + 0x2c], 0xc
0x4f08  2  jmp  0x4f66
0x4f0a  2  xor  edi, edi
0x4f0c  4  lea  rsi, [rdx + rdx]
0x4f10  7  cmp  qword ptr [rcx + 0x408], rdi
0x4f17  2  jne  0x4f22
0x4f19  7  cmp  rsi, 0x400
0x4f20  2  jbe  0x4f2b
0x4f22  7  cmp  rsi, qword ptr [rcx + 0x400]
0x4f29  2  ja  0x4f2f
0x4f2b  2  mov  al, 1
0x4f2d  2  jmp  0x4f66
0x4f2f  3  mov  rcx, rsi
0x4f32  5  call  0x977f
0x4f37  3  mov  rbx, rax
0x4f3a  3  test  rax, rax
0x4f3d  2  je  0x4f5c
0x4f3f  7  mov  rcx, qword ptr [rbp + 0x408]
0x4f46  5  call  0x8b07
0x4f4b  7  mov  qword ptr [rbp + 0x408], rbx
0x4f52  3  mov  dil, 1
0x4f55  7  mov  qword ptr [rbp + 0x400], rsi
0x4f5c  2  xor  ecx, ecx
0x4f5e  5  call  0x8b07
0x4f63  3  mov  al, dil
0x4f66  5  mov  rbx, qword ptr [rsp + 0x30]
0x4f6b  5  mov  rbp, qword ptr [rsp + 0x38]
0x4f70  5  mov  rsi, qword ptr [rsp + 0x40]
0x4f75  4  add  rsp, 0x20
0x4f79  1  pop  rdi
0x4f7a  1  ret  
0x4f7b  5  mov  qword ptr [rsp + 8], rbx
0x4f80  5  mov  qword ptr [rsp + 0x10], rbp
0x4f85  5  mov  qword ptr [rsp + 0x18], rsi
0x4f8a  1  push  rdi
0x4f8b  2  push  r12
0x4f8d  2  push  r13
0x4f8f  2  push  r14
0x4f91  2  push  r15
0x4f93  4  sub  rsp, 0x30
0x4f97  3  mov  r12, qword ptr [rdx]
0x4f9a  3  mov  ebp, r8d
0x4f9d  3  mov  rbx, rdx
0x4fa0  3  mov  r13, rcx
0x4fa3  3  test  r12, r12
0x4fa6  2  jne  0x4fba
0x4fa8  5  call  0x8a6f
0x4fad  6  mov  dword ptr [rax], 0x16
0x4fb3  5  call  0x8933
0x4fb8  2  jmp  0x4fec
0x4fba  2  test  ebp, ebp
0x4fbc  2  je  0x5004
0x4fbe  4  lea  eax, [r8 - 2]
0x4fc2  3  cmp  eax, 0x22
0x4fc5  2  jbe  0x5004
0x4fc7  4  mov  byte ptr [rcx + 0x30], 1
0x4fcb  3  xor  r9d, r9d
0x4fce  7  mov  dword ptr [rcx + 0x2c], 0x16
0x4fd5  3  xor  r8d, r8d
0x4fd8  5  mov  qword ptr [rsp + 0x28], r13
0x4fdd  2  xor  ecx, ecx
0x4fdf  6  and  qword ptr [rsp + 0x20], 0
0x4fe5  2  xor  edx, edx
0x4fe7  5  call  0x8867
0x4fec  4  mov  rcx, qword ptr [rbx + 8]
0x4ff0  3  test  rcx, rcx
0x4ff3  6  je  0x5177
0x4ff9  3  mov  rax, qword ptr [rbx]
0x4ffc  3  mov  qword ptr [rcx], rax
0x4fff  5  jmp  0x5177
0x5004  4  mov  sil, byte ptr [r12]
0x5008  5  lea  rcx, [r12 + 1]
0x500d  3  xor  r14d, r14d
0x5010  4  movzx  eax, r9b
0x5014  2  mov  edi, eax
0x5016  3  mov  qword ptr [rdx], rcx
0x5019  4  lea  r15d, [r14 + 2]
0x501d  3  or  edi, r15d
0x5020  4  cmp  sil, 0x2d
0x5024  3  cmovne  edi, eax
0x5027  2  je  0x502f
0x5029  4  cmp  sil, 0x2b
0x502d  2  jne  0x5038
0x502f  3  mov  sil, byte ptr [rcx]
0x5032  3  inc  rcx
0x5035  3  mov  qword ptr [rdx], rcx
0x5038  6  test  ebp, 0xffffffef
0x503e  6  jne  0x50cc
0x5044  3  lea  eax, [rsi - 0x30]
0x5047  2  cmp  al, 9
0x5049  2  ja  0x5054
0x504b  4  movsx  eax, sil
0x504f  3  add  eax, -0x30
0x5052  2  jmp  0x5072
0x5054  3  lea  eax, [rsi - 0x61]
0x5057  2  cmp  al, 0x19
0x5059  2  ja  0x5064
0x505b  4  movsx  eax, sil
0x505f  3  add  eax, -0x57
0x5062  2  jmp  0x5072
0x5064  3  lea  eax, [rsi - 0x41]
0x5067  2  cmp  al, 0x19
0x5069  2  ja  0x50c0
0x506b  4  movsx  eax, sil
0x506f  3  add  eax, -0x37
0x5072  2  test  eax, eax
0x5074  2  jne  0x50c0
0x5076  2  mov  dl, byte ptr [rcx]
0x5078  4  lea  r8, [rcx + 1]
0x507c  3  mov  qword ptr [rbx], r8
0x507f  3  lea  eax, [rdx - 0x58]
0x5082  2  test  al, 0xdf
0x5084  2  je  0x50af
0x5086  2  test  ebp, ebp
0x5088  3  mov  qword ptr [rbx], rcx
0x508b  5  mov  eax, 8
0x5090  3  cmovne  eax, ebp
0x5093  2  mov  ebp, eax
0x5095  2  test  dl, dl
0x5097  2  je  0x50cc
0x5099  2  cmp  byte ptr [rcx], dl
0x509b  2  je  0x50cc
0x509d  5  call  0x8a6f
0x50a2  6  mov  dword ptr [rax], 0x16
0x50a8  5  call  0x8933
0x50ad  2  jmp  0x50cc
0x50af  3  mov  sil, byte ptr [r8]
0x50b2  4  lea  rax, [r8 + 1]
0x50b6  3  mov  qword ptr [rbx], rax
0x50b9  5  mov  eax, 0x10
0x50be  2  jmp  0x50c5
0x50c0  5  mov  eax, 0xa
0x50c5  2  test  ebp, ebp
0x50c7  3  cmovne  eax, ebp
0x50ca  2  mov  ebp, eax
0x50cc  3  mov  r8, qword ptr [rbx]
0x50cf  2  xor  edx, edx
0x50d1  3  or  eax, 0xffffffff
0x50d4  2  div  ebp
0x50d6  3  mov  r9d, eax
0x50d9  3  lea  ecx, [rsi - 0x30]
0x50dc  3  cmp  cl, 9
0x50df  2  ja  0x50ea
0x50e1  4  movsx  ecx, sil
0x50e5  3  add  ecx, -0x30
0x50e8  2  jmp  0x510d
0x50ea  3  lea  eax, [rsi - 0x61]
0x50ed  2  cmp  al, 0x19
0x50ef  2  ja  0x50fa
0x50f1  4  movsx  ecx, sil
0x50f5  3  add  ecx, -0x57
0x50f8  2  jmp  0x510d
0x50fa  3  lea  eax, [rsi - 0x41]
0x50fd  2  cmp  al, 0x19
0x50ff  2  ja  0x510a
0x5101  4  movsx  ecx, sil
0x5105  3  add  ecx, -0x37
0x5108  2  jmp  0x510d
0x510a  3  or  ecx, 0xffffffff
0x510d  2  cmp  ecx, ebp
0x510f  2  jae  0x5141
0x5111  3  mov  sil, byte ptr [r8]
0x5114  3  mov  eax, r14d
0x5117  3  imul  eax, ebp
0x511a  3  lea  edx, [rax + rcx]
0x511d  2  xor  ecx, ecx
0x511f  2  cmp  edx, eax
0x5121  3  setb  cl
0x5124  2  xor  eax, eax
0x5126  3  cmp  r14d, r9d
0x5129  3  mov  r14d, edx
0x512c  3  seta  al
0x512f  2  or  ecx, eax
0x5131  3  shl  ecx, 2
0x5134  3  or  ecx, 8
0x5137  2  or  edi, ecx
0x5139  3  inc  r8
0x513c  3  mov  qword ptr [rbx], r8
0x513f  2  jmp  0x50d9
0x5141  4  lea  rax, [r8 - 1]
0x5145  3  mov  qword ptr [rbx], rax
0x5148  3  test  sil, sil
0x514b  2  je  0x5162
0x514d  3  cmp  byte ptr [rax], sil
0x5150  2  je  0x5162
0x5152  5  call  0x8a6f
0x5157  6  mov  dword ptr [rax], 0x16
0x515d  5  call  0x8933
0x5162  4  test  dil, 8
0x5166  2  jne  0x517e
0x5168  4  mov  rax, qword ptr [rbx + 8]
0x516c  3  mov  qword ptr [rbx], r12
0x516f  3  test  rax, rax
0x5172  2  je  0x5177
0x5174  3  mov  qword ptr [rax], r12
0x5177  2  xor  eax, eax
0x5179  5  jmp  0x5211
0x517e  6  mov  r8d, 0x80000000
0x5184  4  lea  r9d, [r8 - 1]
0x5188  4  test  dil, 4
0x518c  2  je  0x5197
0x518e  5  mov  eax, 1
0x5193  2  mov  ecx, edi
0x5195  2  jmp  0x51b5
0x5197  4  test  dil, 1
0x519b  2  je  0x51f7
0x519d  3  test  r15b, dil
0x51a0  2  je  0x51a9
0x51a2  3  cmp  r14d, r8d
0x51a5  2  jbe  0x51fc
0x51a7  2  jmp  0x51ae
0x51a9  3  cmp  r14d, r9d
0x51ac  2  jbe  0x51ff
0x51ae  5  mov  ecx, 1
0x51b3  2  mov  eax, edi
0x51b5  3  and  edi, r15d
0x51b8  5  mov  byte ptr [r13 + 0x30], 1
0x51bd  8  mov  dword ptr [r13 + 0x2c], 0x22
0x51c5  2  test  eax, ecx
0x51c7  2  jne  0x51cf
0x51c9  4  or  r14d, 0xffffffff
0x51cd  2  jmp  0x51ff
0x51cf  4  mov  rdx, qword ptr [rbx + 8]
0x51d3  2  test  edi, edi
0x51d5  2  je  0x51e7
0x51d7  3  test  rdx, rdx
0x51da  2  je  0x51e2
0x51dc  3  mov  rcx, qword ptr [rbx]
0x51df  3  mov  qword ptr [rdx], rcx
0x51e2  3  mov  eax, r8d
0x51e5  2  jmp  0x5211
0x51e7  3  test  rdx, rdx
0x51ea  2  je  0x51f2
0x51ec  3  mov  rcx, qword ptr [rbx]
0x51ef  3  mov  qword ptr [rdx], rcx
0x51f2  3  mov  eax, r9d
0x51f5  2  jmp  0x5211
0x51f7  3  test  r15b, dil
0x51fa  2  je  0x51ff
0x51fc  3  neg  r14d
0x51ff  4  mov  rax, qword ptr [rbx + 8]
0x5203  3  test  rax, rax
0x5206  2  je  0x520e
0x5208  3  mov  rcx, qword ptr [rbx]
0x520b  3  mov  qword ptr [rax], rcx
0x520e  3  mov  eax, r14d
0x5211  5  mov  rbx, qword ptr [rsp + 0x60]
0x5216  5  mov  rbp, qword ptr [rsp + 0x68]
0x521b  5  mov  rsi, qword ptr [rsp + 0x70]
0x5220  4  add  rsp, 0x30
0x5224  2  pop  r15
0x5226  2  pop  r14
0x5228  2  pop  r13
0x522a  2  pop  r12
0x522c  1  pop  rdi
0x522d  1  ret  
0x522e  1  int3  
0x522f  3  mov  rax, rsp
0x5232  4  mov  qword ptr [rax + 8], rbx
0x5236  4  mov  qword ptr [rax + 0x10], rbp
0x523a  4  mov  qword ptr [rax + 0x18], rsi
0x523e  4  mov  qword ptr [rax + 0x20], rdi
0x5242  2  push  r14
0x5244  4  sub  rsp, 0x30
0x5248  4  mov  r8d, dword ptr [rcx + 0x34]
0x524c  3  mov  bpl, dl
0x524f  3  mov  rbx, rcx
0x5252  6  mov  r14d, 8
0x5258  4  cmp  r8d, 5
0x525c  6  jg  0x532b
0x5262  2  je  0x5291
0x5264  3  test  r8d, r8d
0x5267  6  je  0x5382
0x526d  4  sub  r8d, 1
0x5271  6  je  0x5302
0x5277  4  sub  r8d, 1
0x527b  2  je  0x52da
0x527d  4  sub  r8d, 1
0x5281  6  je  0x5382
0x5287  4  cmp  r8d, 1
0x528b  6  jne  0x534e
0x5291  3  mov  edx, dword ptr [rcx + 0x28]
0x5294  3  mov  rdi, r14
0x5297  4  mov  rcx, qword ptr [rcx + 0x18]
0x529b  2  mov  eax, edx
0x529d  3  shr  eax, 4
0x52a0  2  test  al, 1
0x52a2  4  lea  rax, [rcx + 8]
0x52a6  4  mov  qword ptr [rbx + 0x18], rax
0x52aa  3  mov  rsi, qword ptr [rcx]
0x52ad  2  mov  eax, edx
0x52af  3  shr  eax, 4
0x52b2  2  test  al, 1
0x52b4  2  je  0x52c4
0x52b6  3  test  rsi, rsi
0x52b9  2  jns  0x52c4
0x52bb  3  neg  rsi
0x52be  3  or  edx, 0x40
0x52c1  3  mov  dword ptr [rbx + 0x28], edx
0x52c4  4  cmp  dword ptr [rbx + 0x30], 0
0x52c8  6  jge  0x53ae
0x52ce  7  mov  dword ptr [rbx + 0x30], 1
0x52d5  5  jmp  0x53c5
0x52da  3  mov  edx, dword ptr [rcx + 0x28]
0x52dd  5  mov  edi, 2
0x52e2  4  mov  rcx, qword ptr [rcx + 0x18]
0x52e6  2  mov  eax, edx
0x52e8  3  shr  eax, 4
0x52eb  2  test  al, 1
0x52ed  4  lea  rax, [rcx + 8]
0x52f1  4  mov  qword ptr [rbx + 0x18], rax
0x52f5  2  je  0x52fd
0x52f7  4  movsx  rsi, word ptr [rcx]
0x52fb  2  jmp  0x52ad
0x52fd  3  movzx  esi, word ptr [rcx]
0x5300  2  jmp  0x52ad
0x5302  3  mov  edx, dword ptr [rcx + 0x28]
0x5305  5  mov  edi, 1
0x530a  4  mov  rcx, qword ptr [rcx + 0x18]
0x530e  2  mov  eax, edx
0x5310  3  shr  eax, 4
0x5313  3  test  dil, al
0x5316  4  lea  rax, [rcx + 8]
0x531a  4  mov  qword ptr [rbx + 0x18], rax
0x531e  2  je  0x5326
0x5320  4  movsx  rsi, byte ptr [rcx]
0x5324  2  jmp  0x52ad
0x5326  3  movzx  esi, byte ptr [rcx]
0x5329  2  jmp  0x52ad
0x532b  4  sub  r8d, 6
0x532f  6  je  0x5291
0x5335  4  sub  r8d, 1
0x5339  6  je  0x5291
0x533f  4  sub  r8d, 2
0x5343  6  je  0x5291
0x5349  5  jmp  0x527d
0x534e  4  mov  rax, qword ptr [rcx + 8]
0x5352  3  xor  r9d, r9d
0x5355  3  xor  r8d, r8d
0x5358  2  xor  edx, edx
0x535a  4  mov  byte ptr [rax + 0x30], 1
0x535e  7  mov  dword ptr [rax + 0x2c], 0x16
0x5365  4  mov  rax, qword ptr [rcx + 8]
0x5369  2  xor  ecx, ecx
0x536b  5  mov  qword ptr [rsp + 0x28], rax
0x5370  6  and  qword ptr [rsp + 0x20], 0
0x5376  5  call  0x8867
0x537b  2  xor  al, al
0x537d  5  jmp  0x5417
0x5382  3  mov  edx, dword ptr [rcx + 0x28]
0x5385  5  mov  edi, 4
0x538a  4  mov  rcx, qword ptr [rcx + 0x18]
0x538e  2  mov  eax, edx
0x5390  3  shr  eax, 4
0x5393  2  test  al, 1
0x5395  4  lea  rax, [rcx + 8]
0x5399  4  mov  qword ptr [rbx + 0x18], rax
0x539d  2  je  0x53a7
0x539f  3  movsxd  rsi, dword ptr [rcx]
0x53a2  5  jmp  0x52ad
0x53a7  2  mov  esi, dword ptr [rcx]
0x53a9  5  jmp  0x52ad
0x53ae  4  mov  r8, qword ptr [rbx + 8]
0x53b2  4  lea  rcx, [rbx + 0x50]
0x53b6  3  and  edx, 0xfffffff7
0x53b9  3  mov  dword ptr [rbx + 0x28], edx
0x53bc  4  movsxd  rdx, dword ptr [rbx + 0x30]
0x53c0  5  call  0x4ed3
0x53c5  3  test  rsi, rsi
0x53c8  2  jne  0x53ce
0x53ca  4  and  dword ptr [rbx + 0x28], 0xffffffdf
0x53ce  4  mov  byte ptr [rbx + 0x4c], 0
0x53d2  3  mov  r8b, bpl
0x53d5  3  mov  rcx, rbx
0x53d8  3  cmp  rdi, r14
0x53db  2  jne  0x53e7
0x53dd  3  mov  rdx, rsi
0x53e0  5  call  0x59db
0x53e5  2  jmp  0x53ee
0x53e7  2  mov  edx, esi
0x53e9  5  call  0x583b
0x53ee  3  mov  eax, dword ptr [rbx + 0x28]
0x53f1  3  shr  eax, 7
0x53f4  2  test  al, 1
0x53f6  2  je  0x5415
0x53f8  4  cmp  dword ptr [rbx + 0x48], 0
0x53fc  2  je  0x5407
0x53fe  4  mov  rax, qword ptr [rbx + 0x40]
0x5402  3  cmp  byte ptr [rax], 0x30
0x5405  2  je  0x5415
0x5407  4  dec  qword ptr [rbx + 0x40]
0x540b  4  mov  rcx, qword ptr [rbx + 0x40]
0x540f  3  mov  byte ptr [rcx], 0x30
0x5412  3  inc  dword ptr [rbx + 0x48]
0x5415  2  mov  al, 1
0x5417  5  mov  rbx, qword ptr [rsp + 0x40]
0x541c  5  mov  rbp, qword ptr [rsp + 0x48]
0x5421  5  mov  rsi, qword ptr [rsp + 0x50]
0x5426  5  mov  rdi, qword ptr [rsp + 0x58]
0x542b  4  add  rsp, 0x30
0x542f  2  pop  r14
0x5431  1  ret  
0x5432  1  int3  
0x5433  3  mov  rax, rsp
0x5436  4  mov  qword ptr [rax + 8], rbx
0x543a  4  mov  qword ptr [rax + 0x10], rbp
0x543e  4  mov  qword ptr [rax + 0x18], rsi
0x5442  4  mov  qword ptr [rax + 0x20], rdi
0x5446  2  push  r14
0x5448  4  sub  rsp, 0x30
0x544c  4  mov  r8d, dword ptr [rcx + 0x34]
0x5450  3  mov  bpl, dl
0x5453  3  mov  rbx, rcx
0x5456  6  mov  r14d, 8
0x545c  4  cmp  r8d, 5
0x5460  6  jg  0x552f
0x5466  2  je  0x5495
0x5468  3  test  r8d, r8d
0x546b  6  je  0x5586
0x5471  4  sub  r8d, 1
0x5475  6  je  0x5506
0x547b  4  sub  r8d, 1
0x547f  2  je  0x54de
0x5481  4  sub  r8d, 1
0x5485  6  je  0x5586
0x548b  4  cmp  r8d, 1
0x548f  6  jne  0x5552
0x5495  3  mov  edx, dword ptr [rcx + 0x28]
0x5498  3  mov  rdi, r14
0x549b  4  mov  rcx, qword ptr [rcx + 0x18]
0x549f  2  mov  eax, edx
0x54a1  3  shr  eax, 4
0x54a4  2  test  al, 1
0x54a6  4  lea  rax, [rcx + 8]
0x54aa  4  mov  qword ptr [rbx + 0x18], rax
0x54ae  3  mov  rsi, qword ptr [rcx]
0x54b1  2  mov  eax, edx
0x54b3  3  shr  eax, 4
0x54b6  2  test  al, 1
0x54b8  2  je  0x54c8
0x54ba  3  test  rsi, rsi
0x54bd  2  jns  0x54c8
0x54bf  3  neg  rsi
0x54c2  3  or  edx, 0x40
0x54c5  3  mov  dword ptr [rbx + 0x28], edx
0x54c8  4  cmp  dword ptr [rbx + 0x30], 0
0x54cc  6  jge  0x55b2
0x54d2  7  mov  dword ptr [rbx + 0x30], 1
0x54d9  5  jmp  0x55c9
0x54de  3  mov  edx, dword ptr [rcx + 0x28]
0x54e1  5  mov  edi, 2
0x54e6  4  mov  rcx, qword ptr [rcx + 0x18]
0x54ea  2  mov  eax, edx
0x54ec  3  shr  eax, 4
0x54ef  2  test  al, 1
0x54f1  4  lea  rax, [rcx + 8]
0x54f5  4  mov  qword ptr [rbx + 0x18], rax
0x54f9  2  je  0x5501
0x54fb  4  movsx  rsi, word ptr [rcx]
0x54ff  2  jmp  0x54b1
0x5501  3  movzx  esi, word ptr [rcx]
0x5504  2  jmp  0x54b1
0x5506  3  mov  edx, dword ptr [rcx + 0x28]
0x5509  5  mov  edi, 1
0x550e  4  mov  rcx, qword ptr [rcx + 0x18]
0x5512  2  mov  eax, edx
0x5514  3  shr  eax, 4
0x5517  3  test  dil, al
0x551a  4  lea  rax, [rcx + 8]
0x551e  4  mov  qword ptr [rbx + 0x18], rax
0x5522  2  je  0x552a
0x5524  4  movsx  rsi, byte ptr [rcx]
0x5528  2  jmp  0x54b1
0x552a  3  movzx  esi, byte ptr [rcx]
0x552d  2  jmp  0x54b1
0x552f  4  sub  r8d, 6
0x5533  6  je  0x5495
0x5539  4  sub  r8d, 1
0x553d  6  je  0x5495
0x5543  4  sub  r8d, 2
0x5547  6  je  0x5495
0x554d  5  jmp  0x5481
0x5552  4  mov  rax, qword ptr [rcx + 8]
0x5556  3  xor  r9d, r9d
0x5559  3  xor  r8d, r8d
0x555c  2  xor  edx, edx
0x555e  4  mov  byte ptr [rax + 0x30], 1
0x5562  7  mov  dword ptr [rax + 0x2c], 0x16
0x5569  4  mov  rax, qword ptr [rcx + 8]
0x556d  2  xor  ecx, ecx
0x556f  5  mov  qword ptr [rsp + 0x28], rax
0x5574  6  and  qword ptr [rsp + 0x20], 0
0x557a  5  call  0x8867
0x557f  2  xor  al, al
0x5581  5  jmp  0x561b
0x5586  3  mov  edx, dword ptr [rcx + 0x28]
0x5589  5  mov  edi, 4
0x558e  4  mov  rcx, qword ptr [rcx + 0x18]
0x5592  2  mov  eax, edx
0x5594  3  shr  eax, 4
0x5597  2  test  al, 1
0x5599  4  lea  rax, [rcx + 8]
0x559d  4  mov  qword ptr [rbx + 0x18], rax
0x55a1  2  je  0x55ab
0x55a3  3  movsxd  rsi, dword ptr [rcx]
0x55a6  5  jmp  0x54b1
0x55ab  2  mov  esi, dword ptr [rcx]
0x55ad  5  jmp  0x54b1
0x55b2  4  mov  r8, qword ptr [rbx + 8]
0x55b6  4  lea  rcx, [rbx + 0x50]
0x55ba  3  and  edx, 0xfffffff7
0x55bd  3  mov  dword ptr [rbx + 0x28], edx
0x55c0  4  movsxd  rdx, dword ptr [rbx + 0x30]
0x55c4  5  call  0x4ed3
0x55c9  3  test  rsi, rsi
0x55cc  2  jne  0x55d2
0x55ce  4  and  dword ptr [rbx + 0x28], 0xffffffdf
0x55d2  4  mov  byte ptr [rbx + 0x4c], 0
0x55d6  3  mov  r8b, bpl
0x55d9  3  mov  rcx, rbx
0x55dc  3  cmp  rdi, r14
0x55df  2  jne  0x55eb
0x55e1  3  mov  rdx, rsi
0x55e4  5  call  0x5a4b
0x55e9  2  jmp  0x55f2
0x55eb  2  mov  edx, esi
0x55ed  5  call  0x58ab
0x55f2  3  mov  eax, dword ptr [rbx + 0x28]
0x55f5  3  shr  eax, 7
0x55f8  2  test  al, 1
0x55fa  2  je  0x5619
0x55fc  4  cmp  dword ptr [rbx + 0x48], 0
0x5600  2  je  0x560b
0x5602  4  mov  rax, qword ptr [rbx + 0x40]
0x5606  3  cmp  byte ptr [rax], 0x30
0x5609  2  je  0x5619
0x560b  4  dec  qword ptr [rbx + 0x40]
0x560f  4  mov  rcx, qword ptr [rbx + 0x40]
0x5613  3  mov  byte ptr [rcx], 0x30
0x5616  3  inc  dword ptr [rbx + 0x48]
0x5619  2  mov  al, 1
0x561b  5  mov  rbx, qword ptr [rsp + 0x40]
0x5620  5  mov  rbp, qword ptr [rsp + 0x48]
0x5625  5  mov  rsi, qword ptr [rsp + 0x50]
0x562a  5  mov  rdi, qword ptr [rsp + 0x58]
0x562f  4  add  rsp, 0x30
0x5633  2  pop  r14
0x5635  1  ret  
0x5636  1  int3  
0x5637  3  mov  rax, rsp
0x563a  4  mov  qword ptr [rax + 8], rbx
0x563e  4  mov  qword ptr [rax + 0x10], rbp
0x5642  4  mov  qword ptr [rax + 0x18], rsi
0x5646  4  mov  qword ptr [rax + 0x20], rdi
0x564a  2  push  r14
0x564c  4  sub  rsp, 0x30
0x5650  4  mov  r8d, dword ptr [rcx + 0x34]
0x5654  3  mov  bpl, dl
0x5657  3  mov  rbx, rcx
0x565a  6  mov  r14d, 8
0x5660  4  cmp  r8d, 5
0x5664  6  jg  0x5733
0x566a  2  je  0x5699
0x566c  3  test  r8d, r8d
0x566f  6  je  0x578a
0x5675  4  sub  r8d, 1
0x5679  6  je  0x570a
0x567f  4  sub  r8d, 1
0x5683  2  je  0x56e2
0x5685  4  sub  r8d, 1
0x5689  6  je  0x578a
0x568f  4  cmp  r8d, 1
0x5693  6  jne  0x5756
0x5699  3  mov  edx, dword ptr [rcx + 0x28]
0x569c  3  mov  rdi, r14
0x569f  4  mov  rcx, qword ptr [rcx + 0x18]
0x56a3  2  mov  eax, edx
0x56a5  3  shr  eax, 4
0x56a8  2  test  al, 1
0x56aa  4  lea  rax, [rcx + 8]
0x56ae  4  mov  qword ptr [rbx + 0x18], rax
0x56b2  3  mov  rsi, qword ptr [rcx]
0x56b5  2  mov  eax, edx
0x56b7  3  shr  eax, 4
0x56ba  2  test  al, 1
0x56bc  2  je  0x56cc
0x56be  3  test  rsi, rsi
0x56c1  2  jns  0x56cc
0x56c3  3  neg  rsi
0x56c6  3  or  edx, 0x40
0x56c9  3  mov  dword ptr [rbx + 0x28], edx
0x56cc  4  cmp  dword ptr [rbx + 0x30], 0
0x56d0  6  jge  0x57b6
0x56d6  7  mov  dword ptr [rbx + 0x30], 1
0x56dd  5  jmp  0x57cd
0x56e2  3  mov  edx, dword ptr [rcx + 0x28]
0x56e5  5  mov  edi, 2
0x56ea  4  mov  rcx, qword ptr [rcx + 0x18]
0x56ee  2  mov  eax, edx
0x56f0  3  shr  eax, 4
0x56f3  2  test  al, 1
0x56f5  4  lea  rax, [rcx + 8]
0x56f9  4  mov  qword ptr [rbx + 0x18], rax
0x56fd  2  je  0x5705
0x56ff  4  movsx  rsi, word ptr [rcx]
0x5703  2  jmp  0x56b5
0x5705  3  movzx  esi, word ptr [rcx]
0x5708  2  jmp  0x56b5
0x570a  3  mov  edx, dword ptr [rcx + 0x28]
0x570d  5  mov  edi, 1
0x5712  4  mov  rcx, qword ptr [rcx + 0x18]
0x5716  2  mov  eax, edx
0x5718  3  shr  eax, 4
0x571b  3  test  dil, al
0x571e  4  lea  rax, [rcx + 8]
0x5722  4  mov  qword ptr [rbx + 0x18], rax
0x5726  2  je  0x572e
0x5728  4  movsx  rsi, byte ptr [rcx]
0x572c  2  jmp  0x56b5
0x572e  3  movzx  esi, byte ptr [rcx]
0x5731  2  jmp  0x56b5
0x5733  4  sub  r8d, 6
0x5737  6  je  0x5699
0x573d  4  sub  r8d, 1
0x5741  6  je  0x5699
0x5747  4  sub  r8d, 2
0x574b  6  je  0x5699
0x5751  5  jmp  0x5685
0x5756  4  mov  rax, qword ptr [rcx + 8]
0x575a  3  xor  r9d, r9d
0x575d  3  xor  r8d, r8d
0x5760  2  xor  edx, edx
0x5762  4  mov  byte ptr [rax + 0x30], 1
0x5766  7  mov  dword ptr [rax + 0x2c], 0x16
0x576d  4  mov  rax, qword ptr [rcx + 8]
0x5771  2  xor  ecx, ecx
0x5773  5  mov  qword ptr [rsp + 0x28], rax
0x5778  6  and  qword ptr [rsp + 0x20], 0
0x577e  5  call  0x8867
0x5783  2  xor  al, al
0x5785  5  jmp  0x581f
0x578a  3  mov  edx, dword ptr [rcx + 0x28]
0x578d  5  mov  edi, 4
0x5792  4  mov  rcx, qword ptr [rcx + 0x18]
0x5796  2  mov  eax, edx
0x5798  3  shr  eax, 4
0x579b  2  test  al, 1
0x579d  4  lea  rax, [rcx + 8]
0x57a1  4  mov  qword ptr [rbx + 0x18], rax
0x57a5  2  je  0x57af
0x57a7  3  movsxd  rsi, dword ptr [rcx]
0x57aa  5  jmp  0x56b5
0x57af  2  mov  esi, dword ptr [rcx]
0x57b1  5  jmp  0x56b5
0x57b6  4  mov  r8, qword ptr [rbx + 8]
0x57ba  4  lea  rcx, [rbx + 0x50]
0x57be  3  and  edx, 0xfffffff7
0x57c1  3  mov  dword ptr [rbx + 0x28], edx
0x57c4  4  movsxd  rdx, dword ptr [rbx + 0x30]
0x57c8  5  call  0x4ed3
0x57cd  3  test  rsi, rsi
0x57d0  2  jne  0x57d6
0x57d2  4  and  dword ptr [rbx + 0x28], 0xffffffdf
0x57d6  4  mov  byte ptr [rbx + 0x4c], 0
0x57da  3  mov  r8b, bpl
0x57dd  3  mov  rcx, rbx
0x57e0  3  cmp  rdi, r14
0x57e3  2  jne  0x57ef
0x57e5  3  mov  rdx, rsi
0x57e8  5  call  0x5afb
0x57ed  2  jmp  0x57f6
0x57ef  2  mov  edx, esi
0x57f1  5  call  0x5957
0x57f6  3  mov  eax, dword ptr [rbx + 0x28]
0x57f9  3  shr  eax, 7
0x57fc  2  test  al, 1
0x57fe  2  je  0x581d
0x5800  4  cmp  dword ptr [rbx + 0x48], 0
0x5804  2  je  0x580f
0x5806  4  mov  rax, qword ptr [rbx + 0x40]
0x580a  3  cmp  byte ptr [rax], 0x30
0x580d  2  je  0x581d
0x580f  4  dec  qword ptr [rbx + 0x40]
0x5813  4  mov  rcx, qword ptr [rbx + 0x40]
0x5817  3  mov  byte ptr [rcx], 0x30
0x581a  3  inc  dword ptr [rbx + 0x48]
0x581d  2  mov  al, 1
0x581f  5  mov  rbx, qword ptr [rsp + 0x40]
0x5824  5  mov  rbp, qword ptr [rsp + 0x48]
0x5829  5  mov  rsi, qword ptr [rsp + 0x50]
0x582e  5  mov  rdi, qword ptr [rsp + 0x58]
0x5833  4  add  rsp, 0x30
0x5837  2  pop  r14
0x5839  1  ret  
0x583a  1  int3  
0x583b  4  lea  r8, [rcx + 0x50]
0x583f  3  mov  r9d, edx
0x5842  7  mov  rax, qword ptr [r8 + 0x408]
0x5849  3  test  rax, rax
0x584c  2  jne  0x5855
0x584e  5  mov  eax, 0x200
0x5853  2  jmp  0x5862
0x5855  3  mov  r8, rax
0x5858  7  mov  rax, qword ptr [rcx + 0x450]
0x585f  3  shr  rax, 1
0x5862  4  lea  rdx, [r8 - 1]
0x5866  3  add  rdx, rax
0x5869  4  mov  qword ptr [rcx + 0x40], rdx
0x586d  3  mov  r8, rdx
0x5870  3  mov  eax, dword ptr [rcx + 0x30]
0x5873  2  test  eax, eax
0x5875  2  jg  0x587c
0x5877  3  test  r9d, r9d
0x587a  2  je  0x5899
0x587c  2  dec  eax
0x587e  3  mov  dword ptr [rcx + 0x30], eax
0x5881  3  mov  al, r9b
0x5884  2  and  al, 7
0x5886  4  shr  r9d, 3
0x588a  2  add  al, 0x30
0x588c  3  mov  byte ptr [r8], al
0x588f  4  dec  qword ptr [rcx + 0x40]
0x5893  4  mov  r8, qword ptr [rcx + 0x40]
0x5897  2  jmp  0x5870
0x5899  3  sub  edx, dword ptr [rcx + 0x40]
0x589c  4  lea  rax, [r8 + 1]
0x58a0  3  mov  dword ptr [rcx + 0x48], edx
0x58a3  4  mov  qword ptr [rcx + 0x40], rax
0x58a7  1  ret  
0x58a8  1  int3  
0x58a9  1  int3  
0x58aa  1  int3  
0x58ab  5  mov  qword ptr [rsp + 8], rbx
0x58b0  7  mov  rax, qword ptr [rcx + 0x458]
0x58b7  3  mov  r9, rcx
0x58ba  4  add  rcx, 0x50
0x58be  3  mov  bl, r8b
0x58c1  3  mov  r11d, edx
0x58c4  3  test  rax, rax
0x58c7  2  jne  0x58d0
0x58c9  5  mov  eax, 0x200
0x58ce  2  jmp  0x58dd
0x58d0  3  mov  rcx, rax
0x58d3  7  mov  rax, qword ptr [r9 + 0x450]
0x58da  3  shr  rax, 1
0x58dd  4  lea  r8, [rcx - 1]
0x58e1  3  add  r8, rax
0x58e4  4  mov  qword ptr [r9 + 0x40], r8
0x58e8  3  mov  r10, r8
0x58eb  4  mov  eax, dword ptr [r9 + 0x30]
0x58ef  2  test  eax, eax
0x58f1  2  jg  0x58f8
0x58f3  3  test  r11d, r11d
0x58f6  2  je  0x593f
0x58f8  2  dec  eax
0x58fa  4  mov  dword ptr [r9 + 0x30], eax
0x58fe  5  mov  eax, 0xcccccccd
0x5903  3  mul  r11d
0x5906  3  shr  edx, 3
0x5909  2  mov  al, dl
0x590b  3  shl  al, 2
0x590e  3  lea  ecx, [rax + rdx]
0x5911  2  add  cl, cl
0x5913  3  sub  r11b, cl
0x5916  4  add  r11b, 0x30
0x591a  3  mov  al, r11b
0x591d  3  mov  cl, r11b
0x5920  3  mov  r11d, edx
0x5923  2  cmp  al, 0x39
0x5925  2  jle  0x5932
0x5927  2  mov  al, bl
0x5929  2  xor  al, 1
0x592b  3  shl  al, 5
0x592e  2  add  al, 7
0x5930  2  add  al, cl
0x5932  3  mov  byte ptr [r10], al
0x5935  4  dec  qword ptr [r9 + 0x40]
0x5939  4  mov  r10, qword ptr [r9 + 0x40]
0x593d  2  jmp  0x58eb
0x593f  4  sub  r8d, dword ptr [r9 + 0x40]
0x5943  4  lea  rax, [r10 + 1]
0x5947  5  mov  rbx, qword ptr [rsp + 8]
0x594c  4  mov  dword ptr [r9 + 0x48], r8d
0x5950  4  mov  qword ptr [r9 + 0x40], rax
0x5954  1  ret  
0x5955  1  int3  
0x5956  1  int3  
0x5957  4  lea  r9, [rcx + 0x50]
0x595b  3  mov  r11b, r8b
0x595e  7  mov  rax, qword ptr [r9 + 0x408]
0x5965  3  mov  r10d, edx
0x5968  3  test  rax, rax
0x596b  2  jne  0x5974
0x596d  5  mov  eax, 0x200
0x5972  2  jmp  0x5981
0x5974  3  mov  r9, rax
0x5977  7  mov  rax, qword ptr [rcx + 0x450]
0x597e  3  shr  rax, 1
0x5981  4  lea  rdx, [r9 - 1]
0x5985  3  add  rdx, rax
0x5988  4  mov  qword ptr [rcx + 0x40], rdx
0x598c  3  mov  r8, rdx
0x598f  3  mov  eax, dword ptr [rcx + 0x30]
0x5992  2  test  eax, eax
0x5994  2  jg  0x599b
0x5996  3  test  r10d, r10d
0x5999  2  je  0x59cc
0x599b  2  dec  eax
0x599d  3  mov  dword ptr [rcx + 0x30], eax
0x59a0  3  mov  al, r10b
0x59a3  2  and  al, 0xf
0x59a5  4  shr  r10d, 4
0x59a9  2  add  al, 0x30
0x59ab  3  mov  r9b, al
0x59ae  2  cmp  al, 0x39
0x59b0  2  jbe  0x59bf
0x59b2  3  mov  al, r11b
0x59b5  2  xor  al, 1
0x59b7  3  shl  al, 5
0x59ba  2  add  al, 7
0x59bc  3  add  al, r9b
0x59bf  3  mov  byte ptr [r8], al
0x59c2  4  dec  qword ptr [rcx + 0x40]
0x59c6  4  mov  r8, qword ptr [rcx + 0x40]
0x59ca  2  jmp  0x598f
0x59cc  3  sub  edx, dword ptr [rcx + 0x40]
0x59cf  4  lea  rax, [r8 + 1]
0x59d3  3  mov  dword ptr [rcx + 0x48], edx
0x59d6  4  mov  qword ptr [rcx + 0x40], rax
0x59da  1  ret  
0x59db  4  lea  r8, [rcx + 0x50]
0x59df  3  mov  r9, rdx
0x59e2  7  mov  rax, qword ptr [r8 + 0x408]
0x59e9  3  test  rax, rax
0x59ec  2  jne  0x59f5
0x59ee  5  mov  eax, 0x200
0x59f3  2  jmp  0x5a02
0x59f5  3  mov  r8, rax
0x59f8  7  mov  rax, qword ptr [rcx + 0x450]
0x59ff  3  shr  rax, 1
0x5a02  4  lea  rdx, [r8 - 1]
0x5a06  3  add  rdx, rax
0x5a09  4  mov  qword ptr [rcx + 0x40], rdx
0x5a0d  3  mov  r8, rdx
0x5a10  3  mov  eax, dword ptr [rcx + 0x30]
0x5a13  2  test  eax, eax
0x5a15  2  jg  0x5a1c
0x5a17  3  test  r9, r9
0x5a1a  2  je  0x5a39
0x5a1c  2  dec  eax
0x5a1e  3  mov  dword ptr [rcx + 0x30], eax
0x5a21  3  mov  al, r9b
0x5a24  2  and  al, 7
0x5a26  4  shr  r9, 3
0x5a2a  2  add  al, 0x30
0x5a2c  3  mov  byte ptr [r8], al
0x5a2f  4  dec  qword ptr [rcx + 0x40]
0x5a33  4  mov  r8, qword ptr [rcx + 0x40]
0x5a37  2  jmp  0x5a10
0x5a39  3  sub  edx, dword ptr [rcx + 0x40]
0x5a3c  4  lea  rax, [r8 + 1]
0x5a40  3  mov  dword ptr [rcx + 0x48], edx
0x5a43  4  mov  qword ptr [rcx + 0x40], rax
0x5a47  1  ret  
0x5a48  1  int3  
0x5a49  1  int3  
0x5a4a  1  int3  
0x5a4b  5  mov  qword ptr [rsp + 8], rbx
0x5a50  7  mov  rax, qword ptr [rcx + 0x458]
0x5a57  3  mov  r9, rcx
0x5a5a  4  add  rcx, 0x50
0x5a5e  3  mov  bl, r8b
0x5a61  3  mov  r11, rdx
0x5a64  3  test  rax, rax
0x5a67  2  jne  0x5a70
0x5a69  5  mov  eax, 0x200
0x5a6e  2  jmp  0x5a7d
0x5a70  3  mov  rcx, rax
0x5a73  7  mov  rax, qword ptr [r9 + 0x450]
0x5a7a  3  shr  rax, 1
0x5a7d  4  lea  r8, [rcx - 1]
0x5a81  3  add  r8, rax
0x5a84  4  mov  qword ptr [r9 + 0x40], r8
0x5a88  3  mov  r10, r8
0x5a8b  4  mov  eax, dword ptr [r9 + 0x30]
0x5a8f  2  test  eax, eax
0x5a91  2  jg  0x5a98
0x5a93  3  test  r11, r11
0x5a96  2  je  0x5ae5
0x5a98  2  dec  eax
0x5a9a  4  mov  dword ptr [r9 + 0x30], eax
0x5a9e  10  movabs  rax, 0xcccccccccccccccd
0x5aa8  3  mul  r11
0x5aab  4  shr  rdx, 3
0x5aaf  2  mov  al, dl
0x5ab1  3  shl  al, 2
0x5ab4  3  lea  ecx, [rax + rdx]
0x5ab7  2  add  cl, cl
0x5ab9  3  sub  r11b, cl
0x5abc  4  add  r11b, 0x30
0x5ac0  3  mov  al, r11b
0x5ac3  3  mov  cl, r11b
0x5ac6  3  mov  r11, rdx
0x5ac9  2  cmp  al, 0x39
0x5acb  2  jle  0x5ad8
0x5acd  2  mov  al, bl
0x5acf  2  xor  al, 1
0x5ad1  3  shl  al, 5
0x5ad4  2  add  al, 7
0x5ad6  2  add  al, cl
0x5ad8  3  mov  byte ptr [r10], al
0x5adb  4  dec  qword ptr [r9 + 0x40]
0x5adf  4  mov  r10, qword ptr [r9 + 0x40]
0x5ae3  2  jmp  0x5a8b
0x5ae5  4  sub  r8d, dword ptr [r9 + 0x40]
0x5ae9  4  lea  rax, [r10 + 1]
0x5aed  5  mov  rbx, qword ptr [rsp + 8]
0x5af2  4  mov  dword ptr [r9 + 0x48], r8d
0x5af6  4  mov  qword ptr [r9 + 0x40], rax
0x5afa  1  ret  
0x5afb  4  lea  r9, [rcx + 0x50]
0x5aff  3  mov  r11b, r8b
0x5b02  7  mov  rax, qword ptr [r9 + 0x408]
0x5b09  3  mov  r10, rdx
0x5b0c  3  test  rax, rax
0x5b0f  2  jne  0x5b18
0x5b11  5  mov  eax, 0x200
0x5b16  2  jmp  0x5b25
0x5b18  3  mov  r9, rax
0x5b1b  7  mov  rax, qword ptr [rcx + 0x450]
0x5b22  3  shr  rax, 1
0x5b25  4  lea  rdx, [r9 - 1]
0x5b29  3  add  rdx, rax
0x5b2c  4  mov  qword ptr [rcx + 0x40], rdx
0x5b30  3  mov  r8, rdx
0x5b33  3  mov  eax, dword ptr [rcx + 0x30]
0x5b36  2  test  eax, eax
0x5b38  2  jg  0x5b3f
0x5b3a  3  test  r10, r10
0x5b3d  2  je  0x5b70
0x5b3f  2  dec  eax
0x5b41  3  mov  dword ptr [rcx + 0x30], eax
0x5b44  3  mov  al, r10b
0x5b47  2  and  al, 0xf
0x5b49  4  shr  r10, 4
0x5b4d  2  add  al, 0x30
0x5b4f  3  mov  r9b, al
0x5b52  2  cmp  al, 0x39
0x5b54  2  jbe  0x5b63
0x5b56  3  mov  al, r11b
0x5b59  2  xor  al, 1
0x5b5b  3  shl  al, 5
0x5b5e  2  add  al, 7
0x5b60  3  add  al, r9b
0x5b63  3  mov  byte ptr [r8], al
0x5b66  4  dec  qword ptr [rcx + 0x40]
0x5b6a  4  mov  r8, qword ptr [rcx + 0x40]
0x5b6e  2  jmp  0x5b33
0x5b70  3  sub  edx, dword ptr [rcx + 0x40]
0x5b73  4  lea  rax, [r8 + 1]
0x5b77  3  mov  dword ptr [rcx + 0x48], edx
0x5b7a  4  mov  qword ptr [rcx + 0x40], rax
0x5b7e  1  ret  
0x5b7f  3  mov  rax, rsp
0x5b82  4  mov  qword ptr [rax + 0x10], rbx
0x5b86  4  mov  qword ptr [rax + 0x18], rsi
0x5b8a  4  mov  qword ptr [rax + 0x20], rdi
0x5b8e  1  push  rbp
0x5b8f  2  push  r14
0x5b91  2  push  r15
0x5b93  7  lea  rbp, [rax - 0x3b8]
0x5b9a  7  sub  rsp, 0x4a0
0x5ba1  7  mov  rax, qword ptr [rip + 0x1b490]
0x5ba8  3  xor  rax, rsp
0x5bab  7  mov  qword ptr [rbp + 0x390], rax
0x5bb2  3  mov  rax, qword ptr [rcx]
0x5bb5  3  mov  rbx, rcx
0x5bb8  4  mov  r14, qword ptr [rcx + 8]
0x5bbc  3  mov  r15, qword ptr [rax]
0x5bbf  3  mov  rcx, r15
0x5bc2  5  call  0xada7
0x5bc7  4  mov  rcx, qword ptr [rbx + 0x18]
0x5bcb  3  xorps  xmm0, xmm0
0x5bce  3  mov  r9, qword ptr [rbx]
0x5bd1  3  mov  sil, al
0x5bd4  4  mov  rdx, qword ptr [rbx + 0x20]
0x5bd8  3  mov  r11, qword ptr [rcx]
0x5bdb  3  mov  r9, qword ptr [r9]
0x5bde  3  mov  rdi, qword ptr [rdx]
0x5be1  4  mov  rcx, qword ptr [rbx + 0x10]
0x5be5  3  mov  r10, qword ptr [rcx]
0x5be8  4  mov  rcx, qword ptr [rbx + 8]
0x5bec  5  and  dword ptr [rsp + 0x40], 0
0x5bf1  5  and  dword ptr [rsp + 0x48], 0
0x5bf6  5  and  dword ptr [rsp + 0x4c], 0
0x5bfb  5  and  dword ptr [rsp + 0x50], 0
0x5c00  6  and  word ptr [rsp + 0x58], 0
0x5c06  5  and  dword ptr [rsp + 0x68], 0
0x5c0b  7  and  dword ptr [rbp + 0x388], 0
0x5c12  5  mov  qword ptr [rsp + 0x28], rcx
0x5c17  5  lea  rcx, [rsp + 0x20]
0x5c1c  5  mov  byte ptr [rsp + 0x44], 0
0x5c21  5  mov  byte ptr [rsp + 0x6c], 0
0x5c26  8  movdqa  xmmword ptr [rbp + 0x370], xmm0
0x5c2e  7  mov  qword ptr [rbp + 0x380], r9
0x5c35  5  mov  qword ptr [rsp + 0x20], r10
0x5c3a  5  mov  qword ptr [rsp + 0x30], r11
0x5c3f  5  mov  qword ptr [rsp + 0x38], rdi
0x5c44  5  call  0x5e0b
0x5c49  7  mov  rcx, qword ptr [rbp + 0x378]
0x5c50  2  mov  ebx, eax
0x5c52  5  call  0x8b07
0x5c57  8  and  qword ptr [rbp + 0x378], 0
0x5c5f  3  mov  r8, r14
0x5c62  3  mov  rdx, r15
0x5c65  3  mov  cl, sil
0x5c68  5  call  0xae6f
0x5c6d  2  mov  eax, ebx
0x5c6f  7  mov  rcx, qword ptr [rbp + 0x390]
0x5c76  3  xor  rcx, rsp
0x5c79  5  call  0x14c73
0x5c7e  8  lea  r11, [rsp + 0x4a0]
0x5c86  4  mov  rbx, qword ptr [r11 + 0x28]
0x5c8a  4  mov  rsi, qword ptr [r11 + 0x30]
0x5c8e  4  mov  rdi, qword ptr [r11 + 0x38]
0x5c92  3  mov  rsp, r11
0x5c95  2  pop  r15
0x5c97  2  pop  r14
0x5c99  1  pop  rbp
0x5c9a  1  ret  
0x5c9b  3  mov  rax, qword ptr [rdx]
0x5c9e  7  mov  rdx, qword ptr [rax + 0xf8]
0x5ca5  3  mov  rax, qword ptr [rdx]
0x5ca8  3  mov  r9b, byte ptr [rax]
0x5cab  2  mov  al, byte ptr [rcx]
0x5cad  2  test  al, al
0x5caf  2  je  0x5cc5
0x5cb1  2  mov  dl, al
0x5cb3  2  mov  al, dl
0x5cb5  3  cmp  dl, r9b
0x5cb8  2  je  0x5cc5
0x5cba  3  inc  rcx
0x5cbd  2  mov  al, byte ptr [rcx]
0x5cbf  2  mov  dl, al
0x5cc1  2  test  al, al
0x5cc3  2  jne  0x5cb3
0x5cc5  3  inc  rcx
0x5cc8  2  test  al, al
0x5cca  2  je  0x5d04
0x5ccc  2  jmp  0x5cd7
0x5cce  2  sub  al, 0x45
0x5cd0  2  test  al, 0xdf
0x5cd2  2  je  0x5cdd
0x5cd4  3  inc  rcx
0x5cd7  2  mov  al, byte ptr [rcx]
0x5cd9  2  test  al, al
0x5cdb  2  jne  0x5cce
0x5cdd  3  mov  r8, rcx
0x5ce0  3  dec  rcx
0x5ce3  2  mov  al, byte ptr [rcx]
0x5ce5  2  cmp  al, 0x30
0x5ce7  2  je  0x5ce0
0x5ce9  3  cmp  al, r9b
0x5cec  4  lea  rdx, [rcx - 1]
0x5cf0  4  cmovne  rdx, rcx
0x5cf4  3  sub  r8, rdx
0x5cf7  4  mov  al, byte ptr [r8 + rdx]
0x5cfb  3  inc  rdx
0x5cfe  2  mov  byte ptr [rdx], al
0x5d00  2  test  al, al
0x5d02  2  jne  0x5cf7
0x5d04  1  ret  
0x5d05  1  int3  
0x5d06  1  int3  
0x5d07  1  int3  
0x5d08  1  int3  
0x5d09  1  int3  
0x5d0a  1  int3  
0x5d0b  1  int3  
0x5d0c  1  int3  
0x5d0d  1  int3  
0x5d0e  1  int3  
0x5d0f  1  int3  
0x5d10  1  int3  
0x5d11  1  int3  
0x5d12  1  int3  
0x5d13  2  push  rdi
0x5d15  4  sub  rsp, 0x20
0x5d19  4  cmp  qword ptr [rcx], 0
0x5d1d  3  mov  rdi, rcx
0x5d20  2  jne  0x5d6b
0x5d22  5  mov  qword ptr [rsp + 0x38], rbx
0x5d27  6  call  qword ptr [rip + 0x10353]
0x5d2d  4  cmp  byte ptr [rdi + 0x10], 0
0x5d31  4  mov  dword ptr [rsp + 0x30], eax
0x5d35  2  jne  0x5d43
0x5d37  2  xor  edx, edx
0x5d39  4  mov  byte ptr [rdi + 0x10], 1
0x5d3d  4  mov  qword ptr [rdi + 8], rdx
0x5d41  2  jmp  0x5d47
0x5d43  4  mov  rdx, qword ptr [rdi + 8]
0x5d47  5  lea  rcx, [rsp + 0x30]
0x5d4c  5  call  0xb467
0x5d51  4  mov  ecx, dword ptr [rsp + 0x30]
0x5d55  3  mov  rbx, rax
0x5d58  3  mov  qword ptr [rdi], rax
0x5d5b  6  call  qword ptr [rip + 0x10327]
0x5d61  3  test  rbx, rbx
0x5d64  5  mov  rbx, qword ptr [rsp + 0x38]
0x5d69  2  je  0x5d74
0x5d6b  3  mov  rax, qword ptr [rdi]
0x5d6e  4  add  rsp, 0x20
0x5d72  1  pop  rdi
0x5d73  1  ret  
0x5d74  5  call  0x8487
0x5d79  1  int3  
0x5d7a  1  int3  
0x5d7b  3  mov  r11, rsp
0x5d7e  4  mov  qword ptr [r11 + 0x10], rbx
0x5d82  4  mov  qword ptr [r11 + 0x18], rbp
0x5d86  4  mov  qword ptr [r11 + 0x20], rsi
0x5d8a  1  push  rdi
0x5d8b  4  sub  rsp, 0x30
0x5d8f  4  mov  rbp, qword ptr [rcx + 8]
0x5d93  3  mov  rsi, rcx
0x5d96  4  mov  rax, qword ptr [rcx + 0x10]
0x5d9a  3  mov  rdi, rdx
0x5d9d  4  lea  rcx, [r11 + 8]
0x5da1  3  dec  rax
0x5da4  4  mov  qword ptr [r11 - 0x10], rcx
0x5da8  4  lea  rdx, [r11 - 0x18]
0x5dac  4  mov  rbx, qword ptr [rbp + 0x2c]
0x5db0  3  mov  r9b, 1
0x5db3  6  mov  r8d, 0xa
0x5db9  4  mov  qword ptr [r11 + 8], rax
0x5dbd  3  mov  rcx, rbp
0x5dc0  4  mov  qword ptr [r11 - 0x18], rax
0x5dc4  5  call  0x4f7b
0x5dc9  2  mov  dword ptr [rdi], eax
0x5dcb  2  xor  ecx, ecx
0x5dcd  4  mov  rax, qword ptr [rsi + 8]
0x5dd1  3  cmp  byte ptr [rax + 0x30], cl
0x5dd4  2  je  0x5ddc
0x5dd6  4  cmp  dword ptr [rax + 0x2c], 0x22
0x5dda  2  je  0x5ded
0x5ddc  5  mov  rax, qword ptr [rsp + 0x40]
0x5de1  4  cmp  rax, qword ptr [rsi + 0x10]
0x5de5  2  jb  0x5ded
0x5de7  4  mov  qword ptr [rsi + 0x10], rax
0x5deb  2  mov  cl, 1
0x5ded  5  mov  rsi, qword ptr [rsp + 0x58]
0x5df2  2  mov  al, cl
0x5df4  4  mov  qword ptr [rbp + 0x2c], rbx
0x5df8  5  mov  rbx, qword ptr [rsp + 0x48]
0x5dfd  5  mov  rbp, qword ptr [rsp + 0x50]
0x5e02  4  add  rsp, 0x30
0x5e06  1  pop  rdi
0x5e07  1  ret  
0x5e08  1  int3  
0x5e09  1  int3  
0x5e0a  1  int3  
0x5e0b  3  mov  rax, rsp
0x5e0e  4  mov  qword ptr [rax + 8], rbx
0x5e12  4  mov  qword ptr [rax + 0x10], rbp
0x5e16  4  mov  qword ptr [rax + 0x18], rsi
0x5e1a  4  mov  qword ptr [rax + 0x20], rdi
0x5e1e  2  push  r14
0x5e20  4  sub  rsp, 0x30
0x5e24  4  mov  rax, qword ptr [rcx + 8]
0x5e28  3  mov  rbx, rcx
0x5e2b  7  mov  rcx, qword ptr [rcx + 0x460]
0x5e32  3  or  esi, 0xffffffff
0x5e35  2  xor  ebp, ebp
0x5e37  3  test  rcx, rcx
0x5e3a  2  jne  0x5e4c
0x5e3c  4  mov  byte ptr [rax + 0x30], 1
0x5e40  7  mov  dword ptr [rax + 0x2c], 0x16
0x5e47  5  jmp  0x6183
0x5e4c  5  call  0x6cdb
0x5e51  2  test  al, al
0x5e53  6  je  0x5fbb
0x5e59  4  mov  rcx, qword ptr [rbx + 0x10]
0x5e5d  3  test  rcx, rcx
0x5e60  2  jne  0x5e94
0x5e62  4  mov  rax, qword ptr [rbx + 8]
0x5e66  3  xor  r9d, r9d
0x5e69  3  xor  r8d, r8d
0x5e6c  2  xor  edx, edx
0x5e6e  4  mov  byte ptr [rax + 0x30], 1
0x5e72  7  mov  dword ptr [rax + 0x2c], 0x16
0x5e79  4  mov  rax, qword ptr [rbx + 8]
0x5e7d  5  mov  qword ptr [rsp + 0x28], rax
0x5e82  5  mov  qword ptr [rsp + 0x20], rbp
0x5e87  5  call  0x8867
0x5e8c  3  or  eax, 0xffffffff
0x5e8f  5  jmp  0x5fbd
0x5e94  6  mov  eax, dword ptr [rbx + 0x468]
0x5e9a  2  inc  eax
0x5e9c  6  mov  dword ptr [rbx + 0x468], eax
0x5ea2  3  cmp  eax, 2
0x5ea5  6  je  0x613c
0x5eab  7  lea  r14, [rip + 0x1149e]
0x5eb2  3  mov  dword ptr [rbx + 0x48], ebp
0x5eb5  4  mov  byte ptr [rbx + 0x24], bpl
0x5eb9  3  mov  r8b, byte ptr [rcx]
0x5ebc  3  inc  rcx
0x5ebf  5  jmp  0x6118
0x5ec4  3  cmp  dword ptr [rbx + 0x20], ebp
0x5ec7  6  jl  0x6129
0x5ecd  4  lea  eax, [r8 - 0x20]
0x5ed1  2  cmp  al, 0x5a
0x5ed3  2  ja  0x5ee7
0x5ed5  4  movsx  rax, r8b
0x5ed9  4  sub  rax, 0x20
0x5edd  3  and  eax, 0x7f
0x5ee0  5  mov  cl, byte ptr [r14 + rax*2 + 1]
0x5ee5  2  jmp  0x5eea
0x5ee7  3  mov  cl, bpl
0x5eea  4  movzx  eax, byte ptr [rbx + 0x24]
0x5eee  3  movzx  ecx, cl
0x5ef1  4  lea  rdx, [rax + rcx*8]
0x5ef5  3  and  edx, 0x7f
0x5ef8  5  movzx  eax, byte ptr [r14 + rdx*2]
0x5efd  3  mov  byte ptr [rbx + 0x24], al
0x5f00  2  cmp  al, 8
0x5f02  6  jae  0x6170
0x5f08  2  mov  ecx, eax
0x5f0a  2  test  al, al
0x5f0c  6  je  0x603e
0x5f12  3  sub  ecx, 1
0x5f15  6  je  0x6027
0x5f1b  3  sub  ecx, 1
0x5f1e  6  je  0x5fd8
0x5f24  3  sub  ecx, 1
0x5f27  2  je  0x5f87
0x5f29  3  sub  ecx, 1
0x5f2c  2  je  0x5f7f
0x5f2e  3  sub  ecx, 1
0x5f31  2  je  0x5f51
0x5f33  3  sub  ecx, 1
0x5f36  2  je  0x5f47
0x5f38  3  cmp  ecx, 1
0x5f3b  2  jne  0x5fbb
0x5f3d  3  mov  rcx, rbx
0x5f40  5  call  0x632b
0x5f45  2  jmp  0x5fb3
0x5f47  3  mov  rcx, rbx
0x5f4a  5  call  0x61a3
0x5f4f  2  jmp  0x5fb3
0x5f51  4  cmp  r8b, 0x2a
0x5f55  2  je  0x5f65
0x5f57  4  lea  rdx, [rbx + 0x30]
0x5f5b  3  mov  rcx, rbx
0x5f5e  5  call  0x5d7b
0x5f63  2  jmp  0x5fb3
0x5f65  4  mov  rcx, qword ptr [rbx + 0x18]
0x5f69  4  lea  rax, [rcx + 8]
0x5f6d  4  mov  qword ptr [rbx + 0x18], rax
0x5f71  2  mov  eax, dword ptr [rcx]
0x5f73  2  test  eax, eax
0x5f75  2  mov  ecx, eax
0x5f77  3  cmovs  ecx, esi
0x5f7a  3  mov  dword ptr [rbx + 0x30], ecx
0x5f7d  2  jmp  0x5fb1
0x5f7f  3  mov  dword ptr [rbx + 0x30], ebp
0x5f82  5  jmp  0x610d
0x5f87  4  cmp  r8b, 0x2a
0x5f8b  2  je  0x5f93
0x5f8d  4  lea  rdx, [rbx + 0x2c]
0x5f91  2  jmp  0x5f5b
0x5f93  4  mov  rcx, qword ptr [rbx + 0x18]
0x5f97  4  lea  rax, [rcx + 8]
0x5f9b  4  mov  qword ptr [rbx + 0x18], rax
0x5f9f  2  mov  eax, dword ptr [rcx]
0x5fa1  3  mov  dword ptr [rbx + 0x2c], eax
0x5fa4  2  test  eax, eax
0x5fa6  2  jns  0x5fb1
0x5fa8  4  or  dword ptr [rbx + 0x28], 4
0x5fac  2  neg  eax
0x5fae  3  mov  dword ptr [rbx + 0x2c], eax
0x5fb1  2  mov  al, 1
0x5fb3  2  test  al, al
0x5fb5  6  jne  0x610d
0x5fbb  2  mov  eax, esi
0x5fbd  5  mov  rbx, qword ptr [rsp + 0x40]
0x5fc2  5  mov  rbp, qword ptr [rsp + 0x48]
0x5fc7  5  mov  rsi, qword ptr [rsp + 0x50]
0x5fcc  5  mov  rdi, qword ptr [rsp + 0x58]
0x5fd1  4  add  rsp, 0x30
0x5fd5  2  pop  r14
0x5fd7  1  ret  
0x5fd8  4  cmp  r8b, 0x20
0x5fdc  2  je  0x601e
0x5fde  4  cmp  r8b, 0x23
0x5fe2  2  je  0x6015
0x5fe4  4  cmp  r8b, 0x2b
0x5fe8  2  je  0x600c
0x5fea  4  cmp  r8b, 0x2d
0x5fee  2  je  0x6003
0x5ff0  4  cmp  r8b, 0x30
0x5ff4  6  jne  0x610d
0x5ffa  4  or  dword ptr [rbx + 0x28], 8
0x5ffe  5  jmp  0x610d
0x6003  4  or  dword ptr [rbx + 0x28], 4
0x6007  5  jmp  0x610d
0x600c  4  or  dword ptr [rbx + 0x28], 1
0x6010  5  jmp  0x610d
0x6015  4  or  dword ptr [rbx + 0x28], 0x20
0x6019  5  jmp  0x610d
0x601e  4  or  dword ptr [rbx + 0x28], 2
0x6022  5  jmp  0x610d
0x6027  4  mov  qword ptr [rbx + 0x28], rbp
0x602b  4  mov  byte ptr [rbx + 0x38], bpl
0x602f  3  mov  dword ptr [rbx + 0x30], esi
0x6032  3  mov  dword ptr [rbx + 0x34], ebp
0x6035  4  mov  byte ptr [rbx + 0x4c], bpl
0x6039  5  jmp  0x610d
0x603e  4  mov  rdi, qword ptr [rbx + 8]
0x6042  4  mov  byte ptr [rbx + 0x4c], bpl
0x6046  4  cmp  byte ptr [rdi + 0x28], bpl
0x604a  2  jne  0x6054
0x604c  3  mov  rcx, rdi
0x604f  5  call  0x6c63
0x6054  5  movsx  r8, byte ptr [rbx + 0x39]
0x6059  3  mov  r9, r8
0x605c  3  cmp  r8d, esi
0x605f  2  jl  0x60ca
0x6061  4  mov  rax, qword ptr [rdi + 0x18]
0x6065  3  mov  rcx, qword ptr [rax]
0x6068  5  mov  eax, 0x8000
0x606d  5  test  word ptr [rcx + r8*2], ax
0x6072  2  je  0x60ca
0x6074  7  mov  rax, qword ptr [rbx + 0x460]
0x607b  4  mov  r8, qword ptr [rbx + 8]
0x607f  3  mov  edx, dword ptr [rax + 0x14]
0x6082  1  nop  
0x6083  3  shr  edx, 0xc
0x6086  3  test  dl, 1
0x6089  2  je  0x6098
0x608b  7  mov  rax, qword ptr [rbx + 0x460]
0x6092  4  cmp  qword ptr [rax + 8], rbp
0x6096  2  je  0x60ab
0x6098  7  mov  rdx, qword ptr [rbx + 0x460]
0x609f  3  mov  ecx, r9d
0x60a2  5  call  0xad43
0x60a7  2  cmp  eax, esi
0x60a9  2  je  0x60b0
0x60ab  3  inc  dword ptr [rbx + 0x20]
0x60ae  2  jmp  0x60b3
0x60b0  3  mov  dword ptr [rbx + 0x20], esi
0x60b3  4  mov  rax, qword ptr [rbx + 0x10]
0x60b7  3  mov  r8b, byte ptr [rax]
0x60ba  3  inc  rax
0x60bd  4  mov  qword ptr [rbx + 0x10], rax
0x60c1  4  mov  byte ptr [rbx + 0x39], r8b
0x60c5  3  test  r8b, r8b
0x60c8  2  je  0x6144
0x60ca  7  mov  rax, qword ptr [rbx + 0x460]
0x60d1  4  mov  rdx, qword ptr [rbx + 8]
0x60d5  3  mov  ecx, dword ptr [rax + 0x14]
0x60d8  1  nop  
0x60d9  3  shr  ecx, 0xc
0x60dc  3  test  cl, 1
0x60df  2  je  0x60ee
0x60e1  7  mov  rax, qword ptr [rbx + 0x460]
0x60e8  4  cmp  qword ptr [rax + 8], rbp
0x60ec  2  je  0x6105
0x60ee  4  movsx  ecx, r8b
0x60f2  3  mov  r8, rdx
0x60f5  7  mov  rdx, qword ptr [rbx + 0x460]
0x60fc  5  call  0xad43
0x6101  2  cmp  eax, esi
0x6103  2  je  0x610a
0x6105  3  inc  dword ptr [rbx + 0x20]
0x6108  2  jmp  0x610d
0x610a  3  mov  dword ptr [rbx + 0x20], esi
0x610d  4  mov  rax, qword ptr [rbx + 0x10]
0x6111  3  mov  r8b, byte ptr [rax]
0x6114  4  lea  rcx, [rax + 1]
0x6118  4  mov  qword ptr [rbx + 0x10], rcx
0x611c  4  mov  byte ptr [rbx + 0x39], r8b
0x6120  3  test  r8b, r8b
0x6123  6  jne  0x5ec4
0x6129  6  inc  dword ptr [rbx + 0x468]
0x612f  7  cmp  dword ptr [rbx + 0x468], 2
0x6136  6  jne  0x5eb2
0x613c  3  mov  eax, dword ptr [rbx + 0x20]
0x613f  5  jmp  0x5fbd
0x6144  4  mov  rax, qword ptr [rbx + 8]
0x6148  3  xor  r9d, r9d
0x614b  3  xor  r8d, r8d
0x614e  2  xor  edx, edx
0x6150  2  xor  ecx, ecx
0x6152  4  mov  byte ptr [rax + 0x30], 1
0x6156  7  mov  dword ptr [rax + 0x2c], 0x16
0x615d  4  mov  rax, qword ptr [rbx + 8]
0x6161  5  mov  qword ptr [rsp + 0x28], rax
0x6166  5  mov  qword ptr [rsp + 0x20], rbp
0x616b  5  call  0x8867
0x6170  4  mov  rax, qword ptr [rbx + 8]
0x6174  4  mov  byte ptr [rax + 0x30], 1
0x6178  7  mov  dword ptr [rax + 0x2c], 0x16
0x617f  4  mov  rax, qword ptr [rbx + 8]
0x6183  5  mov  qword ptr [rsp + 0x28], rax
0x6188  3  xor  r9d, r9d
0x618b  3  xor  r8d, r8d
0x618e  5  mov  qword ptr [rsp + 0x20], rbp
0x6193  2  xor  edx, edx
0x6195  2  xor  ecx, ecx
0x6197  5  call  0x8867
0x619c  5  jmp  0x5fbb
0x61a1  1  int3  
0x61a2  1  int3  
0x61a3  4  sub  rsp, 0x38
0x61a7  3  mov  al, byte ptr [rcx + 0x39]
0x61aa  2  cmp  al, 0x46
0x61ac  2  jne  0x61c4
0x61ae  3  test  byte ptr [rcx], 8
0x61b1  6  jne  0x6323
0x61b7  4  mov  byte ptr [rcx + 0x24], 7
0x61bb  4  add  rsp, 0x38
0x61bf  5  jmp  0x632b
0x61c4  2  cmp  al, 0x4e
0x61c6  2  jne  0x6209
0x61c8  3  test  byte ptr [rcx], 8
0x61cb  6  jne  0x6323
0x61d1  4  mov  byte ptr [rcx + 0x24], 8
0x61d5  4  mov  rax, qword ptr [rcx + 8]
0x61d9  3  xor  r9d, r9d
0x61dc  3  xor  r8d, r8d
0x61df  2  xor  edx, edx
0x61e1  4  mov  byte ptr [rax + 0x30], 1
0x61e5  7  mov  dword ptr [rax + 0x2c], 0x16
0x61ec  4  mov  rax, qword ptr [rcx + 8]
0x61f0  2  xor  ecx, ecx
0x61f2  5  mov  qword ptr [rsp + 0x28], rax
0x61f7  6  and  qword ptr [rsp + 0x20], 0
0x61fd  5  call  0x8867
0x6202  2  xor  al, al
0x6204  5  jmp  0x6325
0x6209  4  cmp  dword ptr [rcx + 0x34], 0
0x620d  2  jne  0x61d5
0x620f  2  cmp  al, 0x49
0x6211  6  je  0x62c7
0x6217  2  cmp  al, 0x4c
0x6219  6  je  0x62be
0x621f  2  cmp  al, 0x54
0x6221  6  je  0x62b5
0x6227  2  cmp  al, 0x68
0x6229  2  je  0x6297
0x622b  2  cmp  al, 0x6a
0x622d  2  je  0x628b
0x622f  2  cmp  al, 0x6c
0x6231  2  je  0x6267
0x6233  2  cmp  al, 0x74
0x6235  2  je  0x625b
0x6237  2  cmp  al, 0x77
0x6239  2  je  0x624f
0x623b  2  cmp  al, 0x7a
0x623d  6  jne  0x6323
0x6243  7  mov  dword ptr [rcx + 0x34], 6
0x624a  5  jmp  0x6323
0x624f  7  mov  dword ptr [rcx + 0x34], 0xc
0x6256  5  jmp  0x6323
0x625b  7  mov  dword ptr [rcx + 0x34], 7
0x6262  5  jmp  0x6323
0x6267  4  mov  rax, qword ptr [rcx + 0x10]
0x626b  3  cmp  byte ptr [rax], 0x6c
0x626e  2  jne  0x627e
0x6270  3  inc  rax
0x6273  4  mov  qword ptr [rcx + 0x10], rax
0x6277  5  mov  eax, 4
0x627c  2  jmp  0x6283
0x627e  5  mov  eax, 3
0x6283  3  mov  dword ptr [rcx + 0x34], eax
0x6286  5  jmp  0x6323
0x628b  7  mov  dword ptr [rcx + 0x34], 5
0x6292  5  jmp  0x6323
0x6297  4  mov  rax, qword ptr [rcx + 0x10]
0x629b  3  cmp  byte ptr [rax], 0x68
0x629e  2  jne  0x62ae
0x62a0  3  inc  rax
0x62a3  4  mov  qword ptr [rcx + 0x10], rax
0x62a7  5  mov  eax, 1
0x62ac  2  jmp  0x6283
0x62ae  5  mov  eax, 2
0x62b3  2  jmp  0x6283
0x62b5  7  mov  dword ptr [rcx + 0x34], 0xd
0x62bc  2  jmp  0x6323
0x62be  7  mov  dword ptr [rcx + 0x34], 8
0x62c5  2  jmp  0x6323
0x62c7  4  mov  r8, qword ptr [rcx + 0x10]
0x62cb  3  mov  al, byte ptr [r8]
0x62ce  2  cmp  al, 0x33
0x62d0  2  jne  0x62ea
0x62d2  5  cmp  byte ptr [r8 + 1], 0x32
0x62d7  2  jne  0x62ea
0x62d9  4  lea  rax, [r8 + 2]
0x62dd  7  mov  dword ptr [rcx + 0x34], 0xa
0x62e4  4  mov  qword ptr [rcx + 0x10], rax
0x62e8  2  jmp  0x6323
0x62ea  2  cmp  al, 0x36
0x62ec  2  jne  0x6306
0x62ee  5  cmp  byte ptr [r8 + 1], 0x34
0x62f3  2  jne  0x6323
0x62f5  4  lea  rax, [r8 + 2]
0x62f9  7  mov  dword ptr [rcx + 0x34], 0xb
0x6300  4  mov  qword ptr [rcx + 0x10], rax
0x6304  2  jmp  0x6323
0x6306  2  sub  al, 0x58
0x6308  2  cmp  al, 0x20
0x630a  2  ja  0x6323
0x630c  10  movabs  rdx, 0x120821001
0x6316  4  bt  rdx, rax
0x631a  2  jae  0x6323
0x631c  7  mov  dword ptr [rcx + 0x34], 9
0x6323  2  mov  al, 1
0x6325  4  add  rsp, 0x38
0x6329  1  ret  
0x632a  1  int3  
0x632b  5  mov  qword ptr [rsp + 0x10], rbx
0x6330  5  mov  qword ptr [rsp + 0x18], rsi
0x6335  1  push  rbp
0x6336  1  push  rdi
0x6337  2  push  r12
0x6339  2  push  r14
0x633b  2  push  r15
0x633d  3  mov  rbp, rsp
0x6340  4  sub  rsp, 0x50
0x6344  7  mov  rax, qword ptr [rip + 0x1aced]
0x634b  3  xor  rax, rsp
0x634e  4  mov  qword ptr [rbp - 0x10], rax
0x6352  4  movsx  edx, byte ptr [rcx + 0x39]
0x6356  3  mov  rbx, rcx
0x6359  5  mov  edi, 0x78
0x635e  3  cmp  edx, 0x64
0x6361  2  jg  0x63cd
0x6363  6  je  0x63f4
0x6369  3  cmp  edx, 0x53
0x636c  2  jg  0x639b
0x636e  6  je  0x6437
0x6374  3  sub  edx, 0x41
0x6377  2  je  0x6391
0x6379  3  sub  edx, 2
0x637c  2  je  0x63b7
0x637e  3  sub  edx, 2
0x6381  2  je  0x6391
0x6383  3  sub  edx, 1
0x6386  2  je  0x6391
0x6388  3  cmp  edx, 1
0x638b  6  jne  0x6457
0x6391  5  call  0x67df
0x6396  5  jmp  0x6453
0x639b  3  cmp  edx, 0x58
0x639e  6  je  0x644c
0x63a4  3  cmp  edx, 0x5a
0x63a7  2  je  0x63c3
0x63a9  3  cmp  edx, 0x61
0x63ac  2  je  0x6391
0x63ae  3  cmp  edx, 0x63
0x63b1  6  jne  0x6457
0x63b7  2  xor  edx, edx
0x63b9  5  call  0x6a33
0x63be  5  jmp  0x6453
0x63c3  5  call  0x6763
0x63c8  5  jmp  0x6453
0x63cd  3  cmp  edx, 0x6f
0x63d0  2  jg  0x6420
0x63d2  2  je  0x6401
0x63d4  3  sub  edx, 0x65
0x63d7  2  je  0x6391
0x63d9  3  sub  edx, 1
0x63dc  2  je  0x6391
0x63de  3  sub  edx, 1
0x63e1  2  je  0x6391
0x63e3  3  sub  edx, 2
0x63e6  2  je  0x63f4
0x63e8  3  cmp  edx, 5
0x63eb  2  jne  0x6457
0x63ed  5  call  0x6b07
0x63f2  2  jmp  0x6453
0x63f4  4  or  dword ptr [rcx + 0x28], 0x10
0x63f8  2  xor  edx, edx
0x63fa  5  call  0x5433
0x63ff  2  jmp  0x6453
0x6401  3  mov  ecx, dword ptr [rcx + 0x28]
0x6404  2  mov  eax, ecx
0x6406  3  shr  eax, 5
0x6409  2  test  al, 1
0x640b  2  je  0x6414
0x640d  4  bts  ecx, 7
0x6411  3  mov  dword ptr [rbx + 0x28], ecx
0x6414  2  xor  edx, edx
0x6416  3  mov  rcx, rbx
0x6419  5  call  0x522f
0x641e  2  jmp  0x6453
0x6420  3  cmp  edx, 0x70
0x6423  2  je  0x643e
0x6425  3  cmp  edx, 0x73
0x6428  2  je  0x6437
0x642a  3  cmp  edx, 0x75
0x642d  2  je  0x63f8
0x642f  2  cmp  edx, edi
0x6431  2  jne  0x6457
0x6433  2  xor  edx, edx
0x6435  2  jmp  0x644e
0x6437  5  call  0x6bbf
0x643c  2  jmp  0x6453
0x643e  7  mov  dword ptr [rcx + 0x30], 0x10
0x6445  7  mov  dword ptr [rcx + 0x34], 0xb
0x644c  2  mov  dl, 1
0x644e  5  call  0x5637
0x6453  2  test  al, al
0x6455  2  jne  0x645e
0x6457  2  xor  al, al
0x6459  5  jmp  0x673d
0x645e  4  cmp  byte ptr [rbx + 0x38], 0
0x6462  6  jne  0x673b
0x6468  3  mov  edx, dword ptr [rbx + 0x28]
0x646b  2  xor  eax, eax
0x646d  4  mov  word ptr [rbp - 0x20], ax
0x6471  2  xor  esi, esi
0x6473  3  mov  byte ptr [rbp - 0x1e], al
0x6476  2  mov  eax, edx
0x6478  3  shr  eax, 4
0x647b  2  test  al, 1
0x647d  2  je  0x64aa
0x647f  2  mov  eax, edx
0x6481  3  shr  eax, 6
0x6484  2  test  al, 1
0x6486  2  je  0x648e
0x6488  4  mov  byte ptr [rbp - 0x20], 0x2d
0x648c  2  jmp  0x64a5
0x648e  3  test  dl, 1
0x6491  2  je  0x6499
0x6493  4  mov  byte ptr [rbp - 0x20], 0x2b
0x6497  2  jmp  0x64a5
0x6499  2  mov  eax, edx
0x649b  2  shr  eax, 1
0x649d  2  test  al, 1
0x649f  2  je  0x64aa
0x64a1  4  mov  byte ptr [rbp - 0x20], 0x20
0x64a5  5  mov  esi, 1
0x64aa  3  mov  cl, byte ptr [rbx + 0x39]
0x64ad  3  lea  eax, [rcx - 0x58]
0x64b0  2  test  al, 0xdf
0x64b2  2  jne  0x64c2
0x64b4  2  mov  eax, edx
0x64b6  3  shr  eax, 5
0x64b9  2  test  al, 1
0x64bb  2  je  0x64c2
0x64bd  3  mov  r8b, 1
0x64c0  2  jmp  0x64c5
0x64c2  3  xor  r8b, r8b
0x64c5  3  lea  eax, [rcx - 0x41]
0x64c8  2  test  al, 0xdf
0x64ca  3  sete  al
0x64cd  3  test  r8b, r8b
0x64d0  2  jne  0x64d6
0x64d2  2  test  al, al
0x64d4  2  je  0x64f1
0x64d6  5  mov  byte ptr [rbp + rsi - 0x20], 0x30
0x64db  3  cmp  cl, 0x58
0x64de  2  je  0x64e5
0x64e0  3  cmp  cl, 0x41
0x64e3  2  jne  0x64e8
0x64e5  3  mov  dil, 0x58
0x64e8  5  mov  byte ptr [rbp + rsi - 0x1f], dil
0x64ed  4  add  rsi, 2
0x64f1  4  mov  r15d, dword ptr [rbx + 0x2c]
0x64f5  3  sub  r15d, esi
0x64f8  4  sub  r15d, dword ptr [rbx + 0x48]
0x64fc  3  test  dl, 0xc
0x64ff  2  jne  0x6561
0x6501  4  mov  r14, qword ptr [rbx + 8]
0x6505  2  xor  edi, edi
0x6507  3  test  r15d, r15d
0x650a  2  jle  0x6561
0x650c  7  mov  rax, qword ptr [rbx + 0x460]
0x6513  3  mov  ecx, dword ptr [rax + 0x14]
0x6516  1  nop  
0x6517  3  shr  ecx, 0xc
0x651a  3  test  cl, 1
0x651d  2  je  0x652d
0x651f  7  mov  rax, qword ptr [rbx + 0x460]
0x6526  5  cmp  qword ptr [rax + 8], 0
0x652b  2  je  0x6546
0x652d  7  mov  rdx, qword ptr [rbx + 0x460]
0x6534  3  mov  r8, r14
0x6537  5  mov  ecx, 0x20
0x653c  5  call  0xad43
0x6541  3  cmp  eax, -1
0x6544  2  je  0x655d
0x6546  3  mov  ecx, dword ptr [rbx + 0x20]
0x6549  3  lea  eax, [rcx + 1]
0x654c  3  mov  dword ptr [rbx + 0x20], eax
0x654f  3  cmp  ecx, -2
0x6552  2  je  0x6561
0x6554  2  inc  edi
0x6556  3  cmp  edi, r15d
0x6559  2  jl  0x650c
0x655b  2  jmp  0x6561
0x655d  4  or  dword ptr [rbx + 0x20], 0xffffffff
0x6561  4  mov  rdx, qword ptr [rbx + 8]
0x6565  7  lea  r14, [rbx + 0x460]
0x656c  3  mov  rax, qword ptr [r14]
0x656f  4  lea  rdi, [rbx + 0x20]
0x6573  3  mov  ecx, dword ptr [rax + 0x14]
0x6576  1  nop  
0x6577  3  shr  ecx, 0xc
0x657a  3  test  cl, 1
0x657d  2  je  0x658d
0x657f  3  mov  rax, qword ptr [r14]
0x6582  5  cmp  qword ptr [rax + 8], 0
0x6587  2  jne  0x658d
0x6589  2  add  dword ptr [rdi], esi
0x658b  2  jmp  0x65a4
0x658d  5  mov  qword ptr [rsp + 0x20], rdx
0x6592  3  mov  r9, rdi
0x6595  4  lea  rdx, [rbp - 0x20]
0x6599  3  mov  r8d, esi
0x659c  3  mov  rcx, r14
0x659f  5  call  0x6d77
0x65a4  3  mov  ecx, dword ptr [rbx + 0x28]
0x65a7  2  mov  eax, ecx
0x65a9  3  shr  eax, 3
0x65ac  2  test  al, 1
0x65ae  2  je  0x6609
0x65b0  3  shr  ecx, 2
0x65b3  3  test  cl, 1
0x65b6  2  jne  0x6609
0x65b8  4  mov  r12, qword ptr [rbx + 8]
0x65bc  2  xor  esi, esi
0x65be  3  test  r15d, r15d
0x65c1  2  jle  0x6609
0x65c3  3  mov  rax, qword ptr [r14]
0x65c6  3  mov  ecx, dword ptr [rax + 0x14]
0x65c9  1  nop  
0x65ca  3  shr  ecx, 0xc
0x65cd  3  test  cl, 1
0x65d0  2  je  0x65dc
0x65d2  3  mov  rax, qword ptr [r14]
0x65d5  5  cmp  qword ptr [rax + 8], 0
0x65da  2  je  0x65f1
0x65dc  3  mov  rdx, qword ptr [r14]
0x65df  3  mov  r8, r12
0x65e2  5  mov  ecx, 0x30
0x65e7  5  call  0xad43
0x65ec  3  cmp  eax, -1
0x65ef  2  je  0x6606
0x65f1  2  mov  ecx, dword ptr [rdi]
0x65f3  3  lea  eax, [rcx + 1]
0x65f6  2  mov  dword ptr [rdi], eax
0x65f8  3  cmp  ecx, -2
0x65fb  2  je  0x6609
0x65fd  2  inc  esi
0x65ff  3  cmp  esi, r15d
0x6602  2  jl  0x65c3
0x6604  2  jmp  0x6609
0x6606  3  or  dword ptr [rdi], 0xffffffff
0x6609  4  cmp  byte ptr [rbx + 0x4c], 0
0x660d  6  je  0x669e
0x6613  4  cmp  dword ptr [rbx + 0x48], 0
0x6617  6  jle  0x669e
0x661d  4  mov  r12, qword ptr [rbx + 0x40]
0x6621  2  xor  esi, esi
0x6623  4  mov  rax, qword ptr [rbx + 8]
0x6627  4  lea  rdx, [rbp - 0x1c]
0x662b  5  movzx  r9d, word ptr [r12]
0x6630  4  lea  rcx, [rbp - 0x20]
0x6634  4  and  dword ptr [rbp - 0x20], 0
0x6638  5  lea  r12, [r12 + 2]
0x663d  6  mov  r8d, 6
0x6643  5  mov  qword ptr [rsp + 0x20], rax
0x6648  5  call  0xa9db
0x664d  2  test  eax, eax
0x664f  2  jne  0x6699
0x6651  4  mov  r8d, dword ptr [rbp - 0x20]
0x6655  3  test  r8d, r8d
0x6658  2  je  0x6699
0x665a  3  mov  rax, qword ptr [r14]
0x665d  4  mov  rdx, qword ptr [rbx + 8]
0x6661  3  mov  ecx, dword ptr [rax + 0x14]
0x6664  1  nop  
0x6665  3  shr  ecx, 0xc
0x6668  3  test  cl, 1
0x666b  2  je  0x667c
0x666d  3  mov  rax, qword ptr [r14]
0x6670  5  cmp  qword ptr [rax + 8], 0
0x6675  2  jne  0x667c
0x6677  3  add  dword ptr [rdi], r8d
0x667a  2  jmp  0x6690
0x667c  5  mov  qword ptr [rsp + 0x20], rdx
0x6681  3  mov  r9, rdi
0x6684  4  lea  rdx, [rbp - 0x1c]
0x6688  3  mov  rcx, r14
0x668b  5  call  0x6d77
0x6690  2  inc  esi
0x6692  3  cmp  esi, dword ptr [rbx + 0x48]
0x6695  2  jne  0x6623
0x6697  2  jmp  0x66db
0x6699  3  or  dword ptr [rdi], 0xffffffff
0x669c  2  jmp  0x66db
0x669e  3  mov  rax, qword ptr [r14]
0x66a1  4  mov  rdx, qword ptr [rbx + 8]
0x66a5  4  mov  r8d, dword ptr [rbx + 0x48]
0x66a9  4  mov  r10, qword ptr [rbx + 0x40]
0x66ad  3  mov  ecx, dword ptr [rax + 0x14]
0x66b0  1  nop  
0x66b1  3  shr  ecx, 0xc
0x66b4  3  test  cl, 1
0x66b7  2  je  0x66c8
0x66b9  3  mov  rax, qword ptr [r14]
0x66bc  5  cmp  qword ptr [rax + 8], 0
0x66c1  2  jne  0x66c8
0x66c3  3  add  dword ptr [rdi], r8d
0x66c6  2  jmp  0x66db
0x66c8  5  mov  qword ptr [rsp + 0x20], rdx
0x66cd  3  mov  r9, rdi
0x66d0  3  mov  rdx, r10
0x66d3  3  mov  rcx, r14
0x66d6  5  call  0x6d77
0x66db  3  cmp  dword ptr [rdi], 0
0x66de  2  jl  0x673b
0x66e0  3  mov  eax, dword ptr [rbx + 0x28]
0x66e3  3  shr  eax, 2
0x66e6  2  test  al, 1
0x66e8  2  je  0x673b
0x66ea  4  mov  rsi, qword ptr [rbx + 8]
0x66ee  2  xor  ebx, ebx
0x66f0  3  test  r15d, r15d
0x66f3  2  jle  0x673b
0x66f5  3  mov  rax, qword ptr [r14]
0x66f8  3  mov  ecx, dword ptr [rax + 0x14]
0x66fb  1  nop  
0x66fc  3  shr  ecx, 0xc
0x66ff  3  test  cl, 1
0x6702  2  je  0x670e
0x6704  3  mov  rax, qword ptr [r14]
0x6707  5  cmp  qword ptr [rax + 8], 0
0x670c  2  je  0x6723
0x670e  3  mov  rdx, qword ptr [r14]
0x6711  3  mov  r8, rsi
0x6714  5  mov  ecx, 0x20
0x6719  5  call  0xad43
0x671e  3  cmp  eax, -1
0x6721  2  je  0x6738
0x6723  2  mov  ecx, dword ptr [rdi]
0x6725  3  lea  eax, [rcx + 1]
0x6728  2  mov  dword ptr [rdi], eax
0x672a  3  cmp  ecx, -2
0x672d  2  je  0x673b
0x672f  2  inc  ebx
0x6731  3  cmp  ebx, r15d
0x6734  2  jl  0x66f5
0x6736  2  jmp  0x673b
0x6738  3  or  dword ptr [rdi], 0xffffffff
0x673b  2  mov  al, 1
0x673d  4  mov  rcx, qword ptr [rbp - 0x10]
0x6741  3  xor  rcx, rsp
0x6744  5  call  0x14c73
0x6749  5  lea  r11, [rsp + 0x50]
0x674e  4  mov  rbx, qword ptr [r11 + 0x38]
0x6752  4  mov  rsi, qword ptr [r11 + 0x40]
0x6756  3  mov  rsp, r11
0x6759  2  pop  r15
0x675b  2  pop  r14
0x675d  2  pop  r12
0x675f  1  pop  rdi
0x6760  1  pop  rbp
0x6761  1  ret  
0x6762  1  int3  
0x6763  4  mov  rdx, qword ptr [rcx + 0x18]
0x6767  4  lea  rax, [rdx + 8]
0x676b  4  mov  qword ptr [rcx + 0x18], rax
0x676f  3  mov  r9, qword ptr [rdx]
0x6772  3  test  r9, r9
0x6775  2  je  0x67c5
0x6777  4  mov  r10, qword ptr [r9 + 8]
0x677b  3  test  r10, r10
0x677e  2  je  0x67c5
0x6780  3  mov  edx, dword ptr [rcx + 0x34]
0x6783  4  mov  r8b, byte ptr [rcx + 0x39]
0x6787  3  sub  edx, 2
0x678a  2  je  0x67ad
0x678c  3  sub  edx, 1
0x678f  2  je  0x67a9
0x6791  3  cmp  edx, 9
0x6794  2  je  0x67a9
0x6796  4  cmp  dword ptr [rcx + 0x34], 0xd
0x679a  2  je  0x67ad
0x679c  4  sub  r8b, 0x63
0x67a0  4  test  r8b, 0xef
0x67a4  3  setne  al
0x67a7  2  jmp  0x67af
0x67a9  2  mov  al, 1
0x67ab  2  jmp  0x67af
0x67ad  2  xor  al, al
0x67af  4  mov  qword ptr [rcx + 0x40], r10
0x67b3  2  test  al, al
0x67b5  4  movzx  edx, word ptr [r9]
0x67b9  2  mov  eax, edx
0x67bb  2  je  0x67d5
0x67bd  4  mov  byte ptr [rcx + 0x4c], 1
0x67c1  2  shr  eax, 1
0x67c3  2  jmp  0x67d9
0x67c5  7  lea  rdx, [rip + 0x10c94]
0x67cc  5  mov  eax, 6
0x67d1  4  mov  qword ptr [rcx + 0x40], rdx
0x67d5  4  mov  byte ptr [rcx + 0x4c], 0
0x67d9  3  mov  dword ptr [rcx + 0x48], eax
0x67dc  2  mov  al, 1
0x67de  1  ret  
0x67df  5  mov  qword ptr [rsp + 0x10], rbx
0x67e4  5  mov  qword ptr [rsp + 0x18], rbp
0x67e9  5  mov  qword ptr [rsp + 0x20], rsi
0x67ee  1  push  rdi
0x67ef  4  sub  rsp, 0x50
0x67f3  4  or  dword ptr [rcx + 0x28], 0x10
0x67f7  3  mov  rbx, rcx
0x67fa  3  mov  eax, dword ptr [rcx + 0x30]
0x67fd  2  test  eax, eax
0x67ff  2  jns  0x6817
0x6801  3  mov  al, byte ptr [rcx + 0x39]
0x6804  2  sub  al, 0x41
0x6806  2  and  al, 0xdf
0x6808  2  neg  al
0x680a  2  sbb  eax, eax
0x680c  3  and  eax, 0xfffffff9
0x680f  3  add  eax, 0xd
0x6812  3  mov  dword ptr [rcx + 0x30], eax
0x6815  2  jmp  0x6831
0x6817  2  jne  0x6831
0x6819  4  cmp  byte ptr [rcx + 0x39], 0x67
0x681d  2  je  0x6825
0x681f  4  cmp  byte ptr [rcx + 0x39], 0x47
0x6823  2  jne  0x6831
0x6825  7  mov  dword ptr [rcx + 0x30], 1
0x682c  5  mov  eax, 1
0x6831  4  mov  r8, qword ptr [rcx + 8]
0x6835  4  lea  rdi, [rcx + 0x50]
0x6839  5  add  eax, 0x15d
0x683e  3  mov  rcx, rdi
0x6841  3  movsxd  rdx, eax
0x6844  5  call  0x4ed3
0x6849  6  mov  r8d, 0x200
0x684f  2  test  al, al
0x6851  2  jne  0x6877
0x6853  8  cmp  qword ptr [rbx + 0x458], 0
0x685b  2  jne  0x6862
0x685d  3  mov  eax, r8d
0x6860  2  jmp  0x686c
0x6862  7  mov  rax, qword ptr [rbx + 0x450]
0x6869  3  shr  rax, 1
0x686c  6  lea  edx, [rax - 0x15d]
0x6872  3  mov  dword ptr [rbx + 0x30], edx
0x6875  2  jmp  0x687a
0x6877  3  mov  edx, dword ptr [rbx + 0x30]
0x687a  7  mov  rax, qword ptr [rdi + 0x408]
0x6881  3  test  rax, rax
0x6884  4  cmove  rax, rdi
0x6888  4  mov  qword ptr [rbx + 0x40], rax
0x688c  2  xor  eax, eax
0x688e  4  mov  rcx, qword ptr [rbx + 0x18]
0x6892  5  mov  qword ptr [rsp + 0x60], rax
0x6897  4  lea  rax, [rcx + 8]
0x689b  4  mov  qword ptr [rbx + 0x18], rax
0x689f  7  mov  r10, qword ptr [rbx + 0x458]
0x68a6  4  movsd  xmm0, qword ptr [rcx]
0x68aa  4  mov  r11, qword ptr [rbx + 8]
0x68ae  3  mov  rsi, qword ptr [rbx]
0x68b1  4  movsx  ebp, byte ptr [rbx + 0x39]
0x68b5  6  movsd  qword ptr [rsp + 0x60], xmm0
0x68bb  3  test  r10, r10
0x68be  2  jne  0x68cc
0x68c0  7  lea  r9, [rdi + 0x200]
0x68c7  3  mov  rcx, r8
0x68ca  2  jmp  0x68f0
0x68cc  7  mov  r9, qword ptr [rdi + 0x400]
0x68d3  3  mov  rdi, r10
0x68d6  7  mov  rcx, qword ptr [rbx + 0x450]
0x68dd  7  mov  r8, qword ptr [rbx + 0x450]
0x68e4  3  shr  r9, 1
0x68e7  3  add  r9, r10
0x68ea  3  shr  rcx, 1
0x68ed  3  shr  r8, 1
0x68f0  5  mov  qword ptr [rsp + 0x48], r11
0x68f5  8  mov  dword ptr [rsp + 0x40], 1
0x68fd  5  mov  qword ptr [rsp + 0x38], rsi
0x6902  4  mov  dword ptr [rsp + 0x30], edx
0x6906  3  mov  rdx, rdi
0x6909  4  mov  dword ptr [rsp + 0x28], ebp
0x690d  5  mov  qword ptr [rsp + 0x20], rcx
0x6912  5  lea  rcx, [rsp + 0x60]
0x6917  5  call  0xa6f3
0x691c  3  mov  eax, dword ptr [rbx + 0x28]
0x691f  3  shr  eax, 5
0x6922  2  test  al, 1
0x6924  2  je  0x69a2
0x6926  4  cmp  dword ptr [rbx + 0x30], 0
0x692a  2  jne  0x69a2
0x692c  4  mov  rdi, qword ptr [rbx + 8]
0x6930  4  cmp  byte ptr [rdi + 0x28], 0
0x6934  2  jne  0x693e
0x6936  3  mov  rcx, rdi
0x6939  5  call  0x6c63
0x693e  4  mov  rcx, qword ptr [rbx + 0x40]
0x6942  4  mov  r9, qword ptr [rdi + 0x18]
0x6946  4  movzx  r8d, byte ptr [rcx]
0x694a  7  mov  rdx, qword ptr [r9 + 0x110]
0x6951  5  cmp  byte ptr [r8 + rdx], 0x65
0x6956  2  je  0x6969
0x6958  3  mov  rax, qword ptr [r9]
0x695b  3  inc  rcx
0x695e  4  movzx  r8d, byte ptr [rcx]
0x6962  5  test  byte ptr [rax + r8*2], 4
0x6967  2  jne  0x695b
0x6969  4  movzx  eax, r8b
0x696d  4  cmp  byte ptr [rax + rdx], 0x78
0x6971  2  jne  0x6977
0x6973  4  mov  r8b, byte ptr [rcx + 2]
0x6977  7  mov  rax, qword ptr [r9 + 0xf8]
0x697e  4  lea  rdx, [rcx + 2]
0x6982  4  cmovne  rdx, rcx
0x6986  3  mov  rcx, qword ptr [rax]
0x6989  2  mov  al, byte ptr [rcx]
0x698b  2  mov  byte ptr [rdx], al
0x698d  3  inc  rdx
0x6990  2  mov  al, byte ptr [rdx]
0x6992  3  mov  cl, r8b
0x6995  3  mov  byte ptr [rdx], r8b
0x6998  3  inc  rdx
0x699b  3  mov  r8b, al
0x699e  2  test  cl, cl
0x69a0  2  jne  0x6990
0x69a2  3  mov  al, byte ptr [rbx + 0x39]
0x69a5  2  sub  al, 0x47
0x69a7  2  test  al, 0xdf
0x69a9  2  jne  0x69d4
0x69ab  3  mov  eax, dword ptr [rbx + 0x28]
0x69ae  3  shr  eax, 5
0x69b1  2  test  al, 1
0x69b3  2  jne  0x69d4
0x69b5  4  mov  rdi, qword ptr [rbx + 8]
0x69b9  4  cmp  byte ptr [rdi + 0x28], 0
0x69bd  2  jne  0x69c7
0x69bf  3  mov  rcx, rdi
0x69c2  5  call  0x6c63
0x69c7  4  mov  rcx, qword ptr [rbx + 0x40]
0x69cb  4  lea  rdx, [rdi + 0x18]
0x69cf  5  call  0x5c9b
0x69d4  4  mov  rcx, qword ptr [rbx + 0x40]
0x69d8  2  mov  al, byte ptr [rcx]
0x69da  2  cmp  al, 0x2d
0x69dc  2  jne  0x69eb
0x69de  4  or  dword ptr [rbx + 0x28], 0x40
0x69e2  3  inc  rcx
0x69e5  4  mov  qword ptr [rbx + 0x40], rcx
0x69e9  2  mov  al, byte ptr [rcx]
0x69eb  2  sub  al, 0x49
0x69ed  2  cmp  al, 0x25
0x69ef  2  ja  0x6a09
0x69f1  10  movabs  rdx, 0x2100000021
0x69fb  4  bt  rdx, rax
0x69ff  2  jae  0x6a09
0x6a01  4  and  dword ptr [rbx + 0x28], 0xfffffff7
0x6a05  4  mov  byte ptr [rbx + 0x39], 0x73
0x6a09  4  or  rdx, 0xffffffffffffffff
0x6a0d  3  inc  rdx
0x6a10  4  cmp  byte ptr [rcx + rdx], 0
0x6a14  2  jne  0x6a0d
0x6a16  5  mov  rbp, qword ptr [rsp + 0x70]
0x6a1b  2  mov  al, 1
0x6a1d  5  mov  rsi, qword ptr [rsp + 0x78]
0x6a22  3  mov  dword ptr [rbx + 0x48], edx
0x6a25  5  mov  rbx, qword ptr [rsp + 0x68]
0x6a2a  4  add  rsp, 0x50
0x6a2e  1  pop  rdi
0x6a2f  1  ret  
0x6a30  1  int3  
0x6a31  1  int3  
0x6a32  1  int3  
0x6a33  5  mov  qword ptr [rsp + 8], rbx
0x6a38  1  push  rdi
0x6a39  4  sub  rsp, 0x30
0x6a3d  3  mov  dl, byte ptr [rcx + 0x39]
0x6a40  3  mov  rbx, rcx
0x6a43  3  mov  ecx, dword ptr [rcx + 0x34]
0x6a46  3  sub  ecx, 2
0x6a49  2  je  0x6abd
0x6a4b  3  sub  ecx, 1
0x6a4e  2  je  0x6a68
0x6a50  3  cmp  ecx, 9
0x6a53  2  je  0x6a68
0x6a55  4  cmp  dword ptr [rbx + 0x34], 0xd
0x6a59  2  je  0x6abd
0x6a5b  3  sub  dl, 0x63
0x6a5e  3  test  dl, 0xef
0x6a61  3  setne  al
0x6a64  2  test  al, al
0x6a66  2  je  0x6abd
0x6a68  4  mov  rcx, qword ptr [rbx + 0x18]
0x6a6c  4  lea  rax, [rcx + 8]
0x6a70  4  mov  qword ptr [rbx + 0x18], rax
0x6a74  7  mov  rdx, qword ptr [rbx + 0x458]
0x6a7b  4  mov  rax, qword ptr [rbx + 8]
0x6a7f  4  movzx  r9d, word ptr [rcx]
0x6a83  3  test  rdx, rdx
0x6a86  2  jne  0x6a97
0x6a88  4  lea  rdx, [rbx + 0x50]
0x6a8c  6  mov  r8d, 0x200
0x6a92  3  mov  rdi, rdx
0x6a95  2  jmp  0x6aa5
0x6a97  7  mov  r8, qword ptr [rbx + 0x450]
0x6a9e  4  lea  rdi, [rbx + 0x50]
0x6aa2  3  shr  r8, 1
0x6aa5  4  lea  rcx, [rbx + 0x48]
0x6aa9  5  mov  qword ptr [rsp + 0x20], rax
0x6aae  5  call  0xa9db
0x6ab3  2  test  eax, eax
0x6ab5  2  je  0x6ae6
0x6ab7  4  mov  byte ptr [rbx + 0x38], 1
0x6abb  2  jmp  0x6ae6
0x6abd  4  mov  rcx, qword ptr [rbx + 0x18]
0x6ac1  4  lea  rdi, [rbx + 0x50]
0x6ac5  7  mov  rdx, qword ptr [rdi + 0x408]
0x6acc  3  test  rdx, rdx
0x6acf  4  lea  rax, [rcx + 8]
0x6ad3  4  cmove  rdx, rdi
0x6ad7  4  mov  qword ptr [rbx + 0x18], rax
0x6adb  2  mov  al, byte ptr [rcx]
0x6add  2  mov  byte ptr [rdx], al
0x6adf  7  mov  dword ptr [rbx + 0x48], 1
0x6ae6  7  mov  rcx, qword ptr [rdi + 0x408]
0x6aed  2  mov  al, 1
0x6aef  3  test  rcx, rcx
0x6af2  4  cmove  rcx, rdi
0x6af6  4  mov  qword ptr [rbx + 0x40], rcx
0x6afa  5  mov  rbx, qword ptr [rsp + 0x40]
0x6aff  4  add  rsp, 0x30
0x6b03  1  pop  rdi
0x6b04  1  ret  
0x6b05  1  int3  
0x6b06  1  int3  
0x6b07  5  mov  qword ptr [rsp + 8], rbx
0x6b0c  1  push  rdi
0x6b0d  4  sub  rsp, 0x30
0x6b11  4  mov  rdx, qword ptr [rcx + 0x18]
0x6b15  3  mov  rbx, rcx
0x6b18  4  lea  rax, [rdx + 8]
0x6b1c  4  mov  qword ptr [rcx + 0x18], rax
0x6b20  3  mov  rdi, qword ptr [rdx]
0x6b23  5  call  0xad2b
0x6b28  2  test  eax, eax
0x6b2a  2  jne  0x6b5d
0x6b2c  4  mov  rax, qword ptr [rbx + 8]
0x6b30  3  xor  r9d, r9d
0x6b33  3  xor  r8d, r8d
0x6b36  2  xor  edx, edx
0x6b38  2  xor  ecx, ecx
0x6b3a  4  mov  byte ptr [rax + 0x30], 1
0x6b3e  7  mov  dword ptr [rax + 0x2c], 0x16
0x6b45  4  mov  rax, qword ptr [rbx + 8]
0x6b49  5  mov  qword ptr [rsp + 0x28], rax
0x6b4e  6  and  qword ptr [rsp + 0x20], 0
0x6b54  5  call  0x8867
0x6b59  2  xor  al, al
0x6b5b  2  jmp  0x6bab
0x6b5d  3  mov  ecx, dword ptr [rbx + 0x34]
0x6b60  3  cmp  ecx, 5
0x6b63  2  jg  0x6b85
0x6b65  2  je  0x6b9e
0x6b67  2  test  ecx, ecx
0x6b69  2  je  0x6bb6
0x6b6b  3  sub  ecx, 1
0x6b6e  2  je  0x6b7e
0x6b70  3  sub  ecx, 1
0x6b73  2  jne  0x6b94
0x6b75  4  movzx  eax, word ptr [rbx + 0x20]
0x6b79  3  mov  word ptr [rdi], ax
0x6b7c  2  jmp  0x6ba5
0x6b7e  3  mov  al, byte ptr [rbx + 0x20]
0x6b81  2  mov  byte ptr [rdi], al
0x6b83  2  jmp  0x6ba5
0x6b85  3  sub  ecx, 6
0x6b88  2  je  0x6b9e
0x6b8a  3  sub  ecx, 1
0x6b8d  2  je  0x6b9e
0x6b8f  3  sub  ecx, 2
0x6b92  2  je  0x6b9e
0x6b94  3  sub  ecx, 1
0x6b97  2  je  0x6bb6
0x6b99  3  cmp  ecx, 1
0x6b9c  2  jne  0x6b2c
0x6b9e  4  movsxd  rax, dword ptr [rbx + 0x20]
0x6ba2  3  mov  qword ptr [rdi], rax
0x6ba5  4  mov  byte ptr [rbx + 0x38], 1
0x6ba9  2  mov  al, 1
0x6bab  5  mov  rbx, qword ptr [rsp + 0x40]
0x6bb0  4  add  rsp, 0x30
0x6bb4  1  pop  rdi
0x6bb5  1  ret  
0x6bb6  3  mov  eax, dword ptr [rbx + 0x20]
0x6bb9  2  mov  dword ptr [rdi], eax
0x6bbb  2  jmp  0x6ba5
0x6bbd  1  int3  
0x6bbe  1  int3  
0x6bbf  2  push  rbx
0x6bc1  4  sub  rsp, 0x20
0x6bc5  4  mov  rdx, qword ptr [rcx + 0x18]
0x6bc9  3  mov  rbx, rcx
0x6bcc  4  lea  rax, [rdx + 8]
0x6bd0  4  mov  qword ptr [rcx + 0x18], rax
0x6bd4  5  mov  eax, 0x7fffffff
0x6bd9  3  mov  rcx, qword ptr [rdx]
0x6bdc  4  mov  r8d, dword ptr [rbx + 0x30]
0x6be0  4  cmp  r8d, -1
0x6be4  3  mov  edx, dword ptr [rbx + 0x34]
0x6be7  4  mov  r9b, byte ptr [rbx + 0x39]
0x6beb  4  cmove  r8d, eax
0x6bef  4  mov  qword ptr [rbx + 0x40], rcx
0x6bf3  3  sub  edx, 2
0x6bf6  2  je  0x6c35
0x6bf8  3  sub  edx, 1
0x6bfb  2  je  0x6c17
0x6bfd  3  cmp  edx, 9
0x6c00  2  je  0x6c17
0x6c02  4  cmp  dword ptr [rbx + 0x34], 0xd
0x6c06  2  je  0x6c35
0x6c08  4  sub  r9b, 0x63
0x6c0c  4  test  r9b, 0xef
0x6c10  3  setne  al
0x6c13  2  test  al, al
0x6c15  2  je  0x6c35
0x6c17  3  test  rcx, rcx
0x6c1a  2  jne  0x6c27
0x6c1c  7  lea  rcx, [rip + 0x1082d]
0x6c23  4  mov  qword ptr [rbx + 0x40], rcx
0x6c27  3  movsxd  rdx, r8d
0x6c2a  4  mov  byte ptr [rbx + 0x4c], 1
0x6c2e  5  call  0x992f
0x6c33  2  jmp  0x6c4d
0x6c35  3  test  rcx, rcx
0x6c38  2  jne  0x6c45
0x6c3a  7  lea  rcx, [rip + 0x1081f]
0x6c41  4  mov  qword ptr [rbx + 0x40], rcx
0x6c45  3  movsxd  rdx, r8d
0x6c48  5  call  0x97df
0x6c4d  3  mov  dword ptr [rbx + 0x48], eax
0x6c50  2  mov  al, 1
0x6c52  4  add  rsp, 0x20
0x6c56  1  pop  rbx
0x6c57  1  ret  
0x6c58  1  int3  
0x6c59  1  int3  
0x6c5a  1  int3  
0x6c5b  1  int3  
0x6c5c  1  int3  
0x6c5d  1  int3  
0x6c5e  1  int3  
0x6c5f  1  int3  
0x6c60  1  int3  
0x6c61  1  int3  
0x6c62  1  int3  
0x6c63  5  mov  qword ptr [rsp + 8], rbx
0x6c68  5  mov  qword ptr [rsp + 0x10], rsi
0x6c6d  1  push  rdi
0x6c6e  4  sub  rsp, 0x20
0x6c72  3  mov  rdi, rcx
0x6c75  5  call  0x5d13
0x6c7a  4  lea  rdx, [rdi + 0x18]
0x6c7e  3  mov  rcx, rax
0x6c81  3  mov  rsi, rax
0x6c84  7  mov  r8, qword ptr [rax + 0x90]
0x6c8b  3  mov  qword ptr [rdx], r8
0x6c8e  7  mov  r8, qword ptr [rax + 0x88]
0x6c95  4  mov  qword ptr [rdi + 0x20], r8
0x6c99  4  mov  r8, qword ptr [rdi + 8]
0x6c9d  5  call  0x9b3b
0x6ca2  4  mov  r8, qword ptr [rdi + 8]
0x6ca6  4  lea  rdx, [rdi + 0x20]
0x6caa  3  mov  rcx, rsi
0x6cad  5  call  0x9ba7
0x6cb2  6  mov  eax, dword ptr [rsi + 0x3a8]
0x6cb8  2  test  al, 2
0x6cba  2  jne  0x6cc9
0x6cbc  3  or  eax, 2
0x6cbf  6  mov  dword ptr [rsi + 0x3a8], eax
0x6cc5  4  mov  byte ptr [rdi + 0x28], 2
0x6cc9  5  mov  rbx, qword ptr [rsp + 0x30]
0x6cce  5  mov  rsi, qword ptr [rsp + 0x38]
0x6cd3  4  add  rsp, 0x20
0x6cd7  1  pop  rdi
0x6cd8  1  ret  
0x6cd9  1  int3  
0x6cda  1  int3  
0x6cdb  4  sub  rsp, 0x28
0x6cdf  3  mov  eax, dword ptr [rcx + 0x14]
0x6ce2  1  nop  
0x6ce3  3  shr  eax, 0xc
0x6ce6  2  test  al, 1
0x6ce8  6  jne  0x6d6f
0x6cee  5  call  0xad03
0x6cf3  3  movsxd  r9, eax
0x6cf6  7  lea  r10, [rip + 0x1a473]
0x6cfd  7  lea  r11, [rip + 0x1b32c]
0x6d04  3  mov  r8, r9
0x6d07  4  lea  eax, [r9 + 2]
0x6d0b  3  cmp  eax, 1
0x6d0e  2  jbe  0x6d2b
0x6d10  3  mov  rax, r9
0x6d13  3  mov  rdx, r9
0x6d16  4  sar  rdx, 6
0x6d1a  3  and  eax, 0x3f
0x6d1d  4  lea  rcx, [rax + rax*8]
0x6d21  4  mov  rax, qword ptr [r11 + rdx*8]
0x6d25  4  lea  rdx, [rax + rcx*8]
0x6d29  2  jmp  0x6d2e
0x6d2b  3  mov  rdx, r10
0x6d2e  4  cmp  byte ptr [rdx + 0x39], 0
0x6d32  2  jne  0x6d5b
0x6d34  4  lea  eax, [r9 + 2]
0x6d38  3  cmp  eax, 1
0x6d3b  2  jbe  0x6d54
0x6d3d  3  mov  rax, r8
0x6d40  4  sar  rax, 6
0x6d44  4  and  r8d, 0x3f
0x6d48  4  mov  rax, qword ptr [r11 + rax*8]
0x6d4c  4  lea  rcx, [r8 + r8*8]
0x6d50  4  lea  r10, [rax + rcx*8]
0x6d54  5  test  byte ptr [r10 + 0x3d], 1
0x6d59  2  je  0x6d6f
0x6d5b  5  call  0x8a6f
0x6d60  6  mov  dword ptr [rax], 0x16
0x6d66  5  call  0x8933
0x6d6b  2  xor  al, al
0x6d6d  2  jmp  0x6d71
0x6d6f  2  mov  al, 1
0x6d71  4  add  rsp, 0x28
0x6d75  1  ret  
0x6d76  1  int3  
0x6d77  5  mov  qword ptr [rsp + 8], rbx
0x6d7c  5  mov  qword ptr [rsp + 0x10], rbp
0x6d81  5  mov  qword ptr [rsp + 0x18], rsi
0x6d86  1  push  rdi
0x6d87  2  push  r14
0x6d89  2  push  r15
0x6d8b  4  sub  rsp, 0x20
0x6d8f  5  mov  rsi, qword ptr [rsp + 0x60]
0x6d94  3  mov  rdi, r9
0x6d97  3  movsxd  rbp, r8d
0x6d9a  3  mov  r14, rdx
0x6d9d  3  add  rbp, rdx
0x6da0  3  mov  r15, rcx
0x6da3  3  cmp  rdx, rbp
0x6da6  4  mov  rbx, qword ptr [rsi + 0x2c]
0x6daa  2  je  0x6e26
0x6dac  3  mov  rax, qword ptr [r15]
0x6daf  4  movsx  edx, byte ptr [r14]
0x6db3  3  mov  ecx, dword ptr [rax + 0x14]
0x6db6  1  nop  
0x6db7  3  shr  ecx, 0xc
0x6dba  3  test  cl, 1
0x6dbd  2  je  0x6dc9
0x6dbf  3  mov  rax, qword ptr [r15]
0x6dc2  5  cmp  qword ptr [rax + 8], 0
0x6dc7  2  je  0x6e14
0x6dc9  2  mov  ecx, edx
0x6dcb  3  mov  r8, rsi
0x6dce  3  mov  rdx, qword ptr [r15]
0x6dd1  5  call  0xad43
0x6dd6  3  mov  rcx, qword ptr [r15]
0x6dd9  3  cmp  eax, -1
0x6ddc  2  jne  0x6e14
0x6dde  4  cmp  byte ptr [rsi + 0x30], 0
0x6de2  2  je  0x6e23
0x6de4  4  cmp  dword ptr [rsi + 0x2c], 0x2a
0x6de8  2  jne  0x6e23
0x6dea  3  mov  eax, dword ptr [rcx + 0x14]
0x6ded  1  nop  
0x6dee  3  shr  eax, 0xc
0x6df1  2  test  al, 1
0x6df3  2  je  0x6dff
0x6df5  3  mov  rax, qword ptr [r15]
0x6df8  5  cmp  qword ptr [rax + 8], 0
0x6dfd  2  je  0x6e14
0x6dff  3  mov  rdx, qword ptr [r15]
0x6e02  3  mov  r8, rsi
0x6e05  5  mov  ecx, 0x3f
0x6e0a  5  call  0xad43
0x6e0f  3  cmp  eax, -1
0x6e12  2  je  0x6e18
0x6e14  2  inc  dword ptr [rdi]
0x6e16  2  jmp  0x6e1b
0x6e18  3  or  dword ptr [rdi], 0xffffffff
0x6e1b  3  inc  r14
0x6e1e  3  cmp  r14, rbp
0x6e21  2  jmp  0x6daa
0x6e23  3  or  dword ptr [rdi], 0xffffffff
0x6e26  5  mov  rbp, qword ptr [rsp + 0x48]
0x6e2b  4  mov  qword ptr [rsi + 0x2c], rbx
0x6e2f  5  mov  rbx, qword ptr [rsp + 0x40]
0x6e34  5  mov  rsi, qword ptr [rsp + 0x50]
0x6e39  4  add  rsp, 0x20
0x6e3d  2  pop  r15
0x6e3f  2  pop  r14
0x6e41  1  pop  rdi
0x6e42  1  ret  
0x6e43  2  push  rbp
0x6e45  1  push  rbx
0x6e46  1  push  rdi
0x6e47  5  lea  rbp, [rsp - 0x3f]
0x6e4c  7  sub  rsp, 0xb0
0x6e53  5  and  qword ptr [rbp - 0x41], 0
0x6e58  4  mov  byte ptr [rbp - 0x31], 0
0x6e5c  4  mov  byte ptr [rbp - 0x19], 0
0x6e60  4  mov  byte ptr [rbp - 0x11], 0
0x6e64  4  mov  byte ptr [rbp - 9], 0
0x6e68  3  test  r9, r9
0x6e6b  2  je  0x6e73
0x6e6d  4  movups  xmm0, xmmword ptr [r9]
0x6e71  2  jmp  0x6e83
0x6e73  7  cmp  dword ptr [rip + 0x1afb6], 0
0x6e7a  2  jne  0x6e8c
0x6e7c  7  movups  xmm0, xmmword ptr [rip + 0x1a495]
0x6e83  4  mov  byte ptr [rbp - 0x19], 1
0x6e87  5  movdqu  xmmword ptr [rbp - 0x29], xmm0
0x6e8c  4  mov  rax, qword ptr [rbp + 0x7f]
0x6e90  4  mov  qword ptr [rbp + 0x77], rax
0x6e94  4  mov  qword ptr [rbp + 0x6f], r8
0x6e98  4  mov  qword ptr [rbp + 0x5f], rdx
0x6e9c  4  mov  qword ptr [rbp + 0x67], rcx
0x6ea0  3  test  rdx, rdx
0x6ea3  2  jne  0x6ed3
0x6ea5  4  lea  rax, [rbp - 0x41]
0x6ea9  4  mov  byte ptr [rbp - 0x11], 1
0x6ead  5  mov  qword ptr [rsp + 0x28], rax
0x6eb2  3  xor  r9d, r9d
0x6eb5  6  and  qword ptr [rsp + 0x20], 0
0x6ebb  3  xor  r8d, r8d
0x6ebe  2  xor  edx, edx
0x6ec0  7  mov  dword ptr [rbp - 0x15], 0x16
0x6ec7  2  xor  ecx, ecx
0x6ec9  5  call  0x8867
0x6ece  3  or  edi, 0xffffffff
0x6ed1  2  jmp  0x6f1f
0x6ed3  3  test  r8, r8
0x6ed6  2  je  0x6ea5
0x6ed8  4  lea  rax, [rbp + 0x5f]
0x6edc  4  mov  qword ptr [rbp - 1], rdx
0x6ee0  4  mov  qword ptr [rbp + 0xf], rax
0x6ee4  4  lea  r9, [rbp - 1]
0x6ee8  4  lea  rax, [rbp - 0x41]
0x6eec  4  mov  qword ptr [rbp + 7], rdx
0x6ef0  4  mov  qword ptr [rbp + 0x17], rax
0x6ef4  4  lea  r8, [rbp + 0xf]
0x6ef8  4  lea  rax, [rbp + 0x67]
0x6efc  4  mov  qword ptr [rbp + 0x1f], rax
0x6f00  4  lea  rdx, [rbp + 7]
0x6f04  4  lea  rax, [rbp + 0x6f]
0x6f08  4  mov  qword ptr [rbp + 0x27], rax
0x6f0c  4  lea  rcx, [rbp + 0x7f]
0x6f10  4  lea  rax, [rbp + 0x77]
0x6f14  4  mov  qword ptr [rbp + 0x2f], rax
0x6f18  5  call  0x4e93
0x6f1d  2  mov  edi, eax
0x6f1f  4  cmp  byte ptr [rbp - 0x19], 2
0x6f23  2  jne  0x6f30
0x6f25  4  mov  rcx, qword ptr [rbp - 0x41]
0x6f29  7  and  dword ptr [rcx + 0x3a8], 0xfffffffd
0x6f30  4  cmp  byte ptr [rbp - 0x11], 0
0x6f34  2  je  0x6f45
0x6f36  3  mov  ebx, dword ptr [rbp - 0x15]
0x6f39  4  lea  rcx, [rbp - 0x41]
0x6f3d  5  call  0x5d13
0x6f42  3  mov  dword ptr [rax + 0x20], ebx
0x6f45  4  cmp  byte ptr [rbp - 9], 0
0x6f49  2  je  0x6f5a
0x6f4b  3  mov  ebx, dword ptr [rbp - 0xd]
0x6f4e  4  lea  rcx, [rbp - 0x41]
0x6f52  5  call  0x5d13
0x6f57  3  mov  dword ptr [rax + 0x24], ebx
0x6f5a  2  mov  eax, edi
0x6f5c  7  add  rsp, 0xb0
0x6f63  1  pop  rdi
0x6f64  1  pop  rbx
0x6f65  1  pop  rbp
0x6f66  1  ret  
0x6f67  5  mov  qword ptr [rsp + 8], rbx
0x6f6c  5  mov  qword ptr [rsp + 0x10], rbp
0x6f71  5  mov  qword ptr [rsp + 0x18], rsi
0x6f76  1  push  rdi
0x6f77  4  sub  rsp, 0x20
0x6f7b  3  mov  rsi, rdx
0x6f7e  2  mov  edi, ecx
0x6f80  5  call  0xb39f
0x6f85  3  xor  r9d, r9d
0x6f88  3  mov  rbx, rax
0x6f8b  3  test  rax, rax
0x6f8e  2  je  0x6faf
0x6f90  3  mov  rcx, qword ptr [rax]
0x6f93  3  mov  rax, rcx
0x6f96  7  lea  r8, [rcx + 0xc0]
0x6f9d  3  cmp  rcx, r8
0x6fa0  2  je  0x6faf
0x6fa2  2  cmp  dword ptr [rax], edi
0x6fa4  2  je  0x6fc6
0x6fa6  4  add  rax, 0x10
0x6faa  3  cmp  rax, r8
0x6fad  2  jne  0x6fa2
0x6faf  2  xor  eax, eax
0x6fb1  5  mov  rbx, qword ptr [rsp + 0x30]
0x6fb6  5  mov  rbp, qword ptr [rsp + 0x38]
0x6fbb  5  mov  rsi, qword ptr [rsp + 0x40]
0x6fc0  4  add  rsp, 0x20
0x6fc4  1  pop  rdi
0x6fc5  1  ret  
0x6fc6  3  test  rax, rax
0x6fc9  2  je  0x6faf
0x6fcb  4  mov  r8, qword ptr [rax + 8]
0x6fcf  3  test  r8, r8
0x6fd2  2  je  0x6faf
0x6fd4  4  cmp  r8, 5
0x6fd8  2  jne  0x6fe4
0x6fda  4  mov  qword ptr [rax + 8], r9
0x6fde  4  lea  eax, [r8 - 4]
0x6fe2  2  jmp  0x6fb1
0x6fe4  4  cmp  r8, 1
0x6fe8  2  jne  0x6fef
0x6fea  3  or  eax, 0xffffffff
0x6fed  2  jmp  0x6fb1
0x6fef  4  mov  rbp, qword ptr [rbx + 8]
0x6ff3  4  mov  qword ptr [rbx + 8], rsi
0x6ff7  4  cmp  dword ptr [rax + 4], 8
0x6ffb  6  jne  0x70c5
0x7001  4  add  rcx, 0x30
0x7005  7  lea  rdx, [rcx + 0x90]
0x700c  2  jmp  0x7016
0x700e  4  mov  qword ptr [rcx + 8], r9
0x7012  4  add  rcx, 0x10
0x7016  3  cmp  rcx, rdx
0x7019  2  jne  0x700e
0x701b  6  cmp  dword ptr [rax], 0xc000008d
0x7021  3  mov  edi, dword ptr [rbx + 0x10]
0x7024  2  je  0x70a0
0x7026  6  cmp  dword ptr [rax], 0xc000008e
0x702c  2  je  0x7099
0x702e  6  cmp  dword ptr [rax], 0xc000008f
0x7034  2  je  0x7092
0x7036  6  cmp  dword ptr [rax], 0xc0000090
0x703c  2  je  0x708b
0x703e  6  cmp  dword ptr [rax], 0xc0000091
0x7044  2  je  0x7084
0x7046  6  cmp  dword ptr [rax], 0xc0000092
0x704c  2  je  0x707d
0x704e  6  cmp  dword ptr [rax], 0xc0000093
0x7054  2  je  0x7076
0x7056  6  cmp  dword ptr [rax], 0xc00002b4
0x705c  2  je  0x706f
0x705e  6  cmp  dword ptr [rax], 0xc00002b5
0x7064  2  mov  edx, edi
0x7066  2  jne  0x70a8
0x7068  5  mov  edx, 0x8d
0x706d  2  jmp  0x70a5
0x706f  5  mov  edx, 0x8e
0x7074  2  jmp  0x70a5
0x7076  5  mov  edx, 0x85
0x707b  2  jmp  0x70a5
0x707d  5  mov  edx, 0x8a
0x7082  2  jmp  0x70a5
0x7084  5  mov  edx, 0x84
0x7089  2  jmp  0x70a5
0x708b  5  mov  edx, 0x81
0x7090  2  jmp  0x70a5
0x7092  5  mov  edx, 0x86
0x7097  2  jmp  0x70a5
0x7099  5  mov  edx, 0x83
0x709e  2  jmp  0x70a5
0x70a0  5  mov  edx, 0x82
0x70a5  3  mov  dword ptr [rbx + 0x10], edx
0x70a8  10  movabs  r10, 0x8b9c1f4f30d33370
0x70b2  5  mov  ecx, 8
0x70b7  3  mov  rax, r8
0x70ba  6  call  qword ptr [rip + 0xf1b0]
0x70c0  3  mov  dword ptr [rbx + 0x10], edi
0x70c3  2  jmp  0x70df
0x70c5  4  mov  qword ptr [rax + 8], r9
0x70c9  10  movabs  r10, 0xc6c1864950d77370
0x70d3  3  mov  ecx, dword ptr [rax + 4]
0x70d6  3  mov  rax, r8
0x70d9  6  call  qword ptr [rip + 0xf191]
0x70df  4  mov  qword ptr [rbx + 8], rbp
0x70e3  5  jmp  0x6fea
0x70e8  1  int3  
0x70e9  1  int3  
0x70ea  1  int3  
0x70eb  6  mov  eax, dword ptr [rip + 0x1abc3]
0x70f1  1  ret  
0x70f2  1  int3  
0x70f3  6  mov  dword ptr [rip + 0x1abbb], ecx
0x70f9  1  ret  
0x70fa  1  int3  
0x70fb  7  mov  rax, qword ptr [rip + 0x19f36]
0x7102  7  mov  rdx, qword ptr [rip + 0x1abaf]
0x7109  2  mov  ecx, eax
0x710b  3  xor  rdx, rax
0x710e  3  and  ecx, 0x3f
0x7111  3  ror  rdx, cl
0x7114  3  test  rdx, rdx
0x7117  3  setne  al
0x711a  1  ret  
0x711b  7  mov  qword ptr [rip + 0x1ab96], rcx
0x7122  1  ret  
0x7123  7  mov  rax, qword ptr [rip + 0x19f0e]
0x712a  3  mov  r8, rcx
0x712d  7  mov  rdx, qword ptr [rip + 0x1ab84]
0x7134  2  mov  ecx, eax
0x7136  3  and  ecx, 0x3f
0x7139  3  xor  rdx, rax
0x713c  3  ror  rdx, cl
0x713f  3  test  rdx, rdx
0x7142  2  jne  0x7147
0x7144  2  xor  eax, eax
0x7146  1  ret  
0x7147  10  movabs  r10, 0xd88807e658547170
0x7151  3  mov  rcx, r8
0x7154  3  mov  rax, rdx
0x7157  6  jmp  qword ptr [rip + 0xf112]
0x715e  1  int3  
0x715f  7  mov  r8, qword ptr [rip + 0x19ed2]
0x7166  3  mov  r9, rcx
0x7169  3  mov  edx, r8d
0x716c  5  mov  ecx, 0x40
0x7171  3  and  edx, 0x3f
0x7174  2  sub  ecx, edx
0x7176  3  ror  r9, cl
0x7179  3  xor  r9, r8
0x717c  7  mov  qword ptr [rip + 0x1ab35], r9
0x7183  1  ret  
0x7184  1  int3  
0x7185  1  int3  
0x7186  1  int3  
0x7187  5  mov  qword ptr [rsp + 8], rbx
0x718c  5  mov  qword ptr [rsp + 0x10], rbp
0x7191  5  mov  qword ptr [rsp + 0x18], rsi
0x7196  1  push  rdi
0x7197  2  push  r12
0x7199  2  push  r13
0x719b  2  push  r14
0x719d  2  push  r15
0x719f  4  sub  rsp, 0x20
0x71a3  5  mov  r12, qword ptr [rsp + 0x70]
0x71a8  3  mov  r13, r9
0x71ab  3  mov  rbx, r8
0x71ae  3  mov  r14, rdx
0x71b1  3  mov  rdi, rcx
0x71b4  5  and  qword ptr [r12], 0
0x71b9  7  mov  qword ptr [r9], 1
0x71c0  3  test  rdx, rdx
0x71c3  2  je  0x71cc
0x71c5  3  mov  qword ptr [rdx], rbx
0x71c8  4  add  r14, 8
0x71cc  3  xor  bpl, bpl
0x71cf  3  cmp  byte ptr [rdi], 0x22
0x71d2  3  mov  r15, rdi
0x71d5  2  jne  0x71e6
0x71d7  3  test  bpl, bpl
0x71da  3  mov  sil, 0x22
0x71dd  4  sete  bpl
0x71e1  3  inc  rdi
0x71e4  2  jmp  0x7220
0x71e6  4  inc  qword ptr [r12]
0x71ea  3  test  rbx, rbx
0x71ed  2  je  0x71f6
0x71ef  2  mov  al, byte ptr [rdi]
0x71f1  2  mov  byte ptr [rbx], al
0x71f3  3  inc  rbx
0x71f6  3  movsx  esi, byte ptr [rdi]
0x71f9  3  inc  rdi
0x71fc  2  mov  ecx, esi
0x71fe  5  call  0xce47
0x7203  2  test  eax, eax
0x7205  2  je  0x721b
0x7207  4  inc  qword ptr [r12]
0x720b  3  test  rbx, rbx
0x720e  2  je  0x7217
0x7210  2  mov  al, byte ptr [rdi]
0x7212  2  mov  byte ptr [rbx], al
0x7214  3  inc  rbx
0x7217  4  lea  rdi, [r15 + 2]
0x721b  3  test  sil, sil
0x721e  2  je  0x723c
0x7220  3  test  bpl, bpl
0x7223  2  jne  0x71cf
0x7225  4  cmp  sil, 0x20
0x7229  2  je  0x7231
0x722b  4  cmp  sil, 9
0x722f  2  jne  0x71cf
0x7231  3  test  rbx, rbx
0x7234  2  je  0x723f
0x7236  4  mov  byte ptr [rbx - 1], 0
0x723a  2  jmp  0x723f
0x723c  3  dec  rdi
0x723f  3  xor  sil, sil
0x7242  2  mov  al, byte ptr [rdi]
0x7244  2  test  al, al
0x7246  6  je  0x7322
0x724c  2  cmp  al, 0x20
0x724e  2  je  0x7254
0x7250  2  cmp  al, 9
0x7252  2  jne  0x725b
0x7254  3  inc  rdi
0x7257  2  mov  al, byte ptr [rdi]
0x7259  2  jmp  0x724c
0x725b  2  test  al, al
0x725d  6  je  0x7322
0x7263  3  test  r14, r14
0x7266  2  je  0x726f
0x7268  3  mov  qword ptr [r14], rbx
0x726b  4  add  r14, 8
0x726f  4  inc  qword ptr [r13]
0x7273  5  mov  edx, 1
0x7278  2  xor  eax, eax
0x727a  2  jmp  0x7281
0x727c  3  inc  rdi
0x727f  2  inc  eax
0x7281  2  mov  cl, byte ptr [rdi]
0x7283  3  cmp  cl, 0x5c
0x7286  2  je  0x727c
0x7288  3  cmp  cl, 0x22
0x728b  2  jne  0x72be
0x728d  2  test  dl, al
0x728f  2  jne  0x72a9
0x7291  3  test  sil, sil
0x7294  2  je  0x72a0
0x7296  3  cmp  byte ptr [rdi + 1], cl
0x7299  2  jne  0x72a0
0x729b  3  inc  rdi
0x729e  2  jmp  0x72a9
0x72a0  2  xor  edx, edx
0x72a2  3  test  sil, sil
0x72a5  4  sete  sil
0x72a9  2  shr  eax, 1
0x72ab  2  jmp  0x72be
0x72ad  2  dec  eax
0x72af  3  test  rbx, rbx
0x72b2  2  je  0x72ba
0x72b4  3  mov  byte ptr [rbx], 0x5c
0x72b7  3  inc  rbx
0x72ba  4  inc  qword ptr [r12]
0x72be  2  test  eax, eax
0x72c0  2  jne  0x72ad
0x72c2  2  mov  al, byte ptr [rdi]
0x72c4  2  test  al, al
0x72c6  2  je  0x730e
0x72c8  3  test  sil, sil
0x72cb  2  jne  0x72d5
0x72cd  2  cmp  al, 0x20
0x72cf  2  je  0x730e
0x72d1  2  cmp  al, 9
0x72d3  2  je  0x730e
0x72d5  2  test  edx, edx
0x72d7  2  je  0x7306
0x72d9  3  test  rbx, rbx
0x72dc  2  je  0x72e3
0x72de  2  mov  byte ptr [rbx], al
0x72e0  3  inc  rbx
0x72e3  3  movsx  ecx, byte ptr [rdi]
0x72e6  5  call  0xce47
0x72eb  2  test  eax, eax
0x72ed  2  je  0x7302
0x72ef  4  inc  qword ptr [r12]
0x72f3  3  inc  rdi
0x72f6  3  test  rbx, rbx
0x72f9  2  je  0x7302
0x72fb  2  mov  al, byte ptr [rdi]
0x72fd  2  mov  byte ptr [rbx], al
0x72ff  3  inc  rbx
0x7302  4  inc  qword ptr [r12]
0x7306  3  inc  rdi
0x7309  5  jmp  0x7273
0x730e  3  test  rbx, rbx
0x7311  2  je  0x7319
0x7313  3  mov  byte ptr [rbx], 0
0x7316  3  inc  rbx
0x7319  4  inc  qword ptr [r12]
0x731d  5  jmp  0x7242
0x7322  3  test  r14, r14
0x7325  2  je  0x732b
0x7327  4  and  qword ptr [r14], 0
0x732b  4  inc  qword ptr [r13]
0x732f  5  mov  rbx, qword ptr [rsp + 0x50]
0x7334  5  mov  rbp, qword ptr [rsp + 0x58]
0x7339  5  mov  rsi, qword ptr [rsp + 0x60]
0x733e  4  add  rsp, 0x20
0x7342  2  pop  r15
0x7344  2  pop  r14
0x7346  2  pop  r13
0x7348  2  pop  r12
0x734a  1  pop  rdi
0x734b  1  ret  
0x734c  1  int3  
0x734d  1  int3  
0x734e  1  int3  
0x734f  2  push  rbx
0x7351  4  sub  rsp, 0x20
0x7355  10  movabs  rax, 0x1fffffffffffffff
0x735f  3  mov  r9, rdx
0x7362  3  cmp  rcx, rax
0x7365  2  jae  0x73a4
0x7367  2  xor  edx, edx
0x7369  4  or  rax, 0xffffffffffffffff
0x736d  3  div  r8
0x7370  3  cmp  r9, rax
0x7373  2  jae  0x73a4
0x7375  4  shl  rcx, 3
0x7379  4  imul  r9, r8
0x737d  3  mov  rax, rcx
0x7380  3  not  rax
0x7383  3  cmp  rax, r9
0x7386  2  jbe  0x73a4
0x7388  3  add  rcx, r9
0x738b  5  mov  edx, 1
0x7390  5  call  0x8a8f
0x7395  2  xor  ecx, ecx
0x7397  3  mov  rbx, rax
0x739a  5  call  0x8b07
0x739f  3  mov  rax, rbx
0x73a2  2  jmp  0x73a6
0x73a4  2  xor  eax, eax
0x73a6  4  add  rsp, 0x20
0x73aa  1  pop  rbx
0x73ab  1  ret  
0x73ac  1  int3  
0x73ad  1  int3  
0x73ae  1  int3  
0x73af  5  mov  qword ptr [rsp + 8], rbx
0x73b4  1  push  rbp
0x73b5  1  push  rsi
0x73b6  1  push  rdi
0x73b7  2  push  r14
0x73b9  2  push  r15
0x73bb  3  mov  rbp, rsp
0x73be  4  sub  rsp, 0x30
0x73c2  2  xor  edi, edi
0x73c4  3  mov  r14d, ecx
0x73c7  2  test  ecx, ecx
0x73c9  6  je  0x7522
0x73cf  3  lea  eax, [rcx - 1]
0x73d2  3  cmp  eax, 1
0x73d5  2  jbe  0x73ed
0x73d7  5  call  0x8a6f
0x73dc  3  lea  ebx, [rdi + 0x16]
0x73df  2  mov  dword ptr [rax], ebx
0x73e1  5  call  0x8933
0x73e6  2  mov  edi, ebx
0x73e8  5  jmp  0x7522
0x73ed  5  call  0xca97
0x73f2  7  lea  rbx, [rip + 0x1a8c7]
0x73f9  6  mov  r8d, 0x104
0x73ff  3  mov  rdx, rbx
0x7402  2  xor  ecx, ecx
0x7404  5  call  0xc17b
0x7409  7  mov  rsi, qword ptr [rip + 0x1aa10]
0x7410  7  mov  qword ptr [rip + 0x1a9e9], rbx
0x7417  3  test  rsi, rsi
0x741a  2  je  0x7421
0x741c  3  cmp  byte ptr [rsi], dil
0x741f  2  jne  0x7424
0x7421  3  mov  rsi, rbx
0x7424  4  lea  rax, [rbp + 0x48]
0x7428  4  mov  qword ptr [rbp + 0x40], rdi
0x742c  4  lea  r9, [rbp + 0x40]
0x7430  5  mov  qword ptr [rsp + 0x20], rax
0x7435  3  xor  r8d, r8d
0x7438  4  mov  qword ptr [rbp + 0x48], rdi
0x743c  2  xor  edx, edx
0x743e  3  mov  rcx, rsi
0x7441  5  call  0x7187
0x7446  4  mov  r15, qword ptr [rbp + 0x40]
0x744a  6  mov  r8d, 1
0x7450  4  mov  rdx, qword ptr [rbp + 0x48]
0x7454  3  mov  rcx, r15
0x7457  5  call  0x734f
0x745c  3  mov  rbx, rax
0x745f  3  test  rax, rax
0x7462  2  jne  0x747c
0x7464  5  call  0x8a6f
0x7469  5  mov  ebx, 0xc
0x746e  2  xor  ecx, ecx
0x7470  2  mov  dword ptr [rax], ebx
0x7472  5  call  0x8b07
0x7477  5  jmp  0x73e6
0x747c  4  lea  r8, [rax + r15*8]
0x7480  3  mov  rdx, rbx
0x7483  4  lea  rax, [rbp + 0x48]
0x7487  3  mov  rcx, rsi
0x748a  4  lea  r9, [rbp + 0x40]
0x748e  5  mov  qword ptr [rsp + 0x20], rax
0x7493  5  call  0x7187
0x7498  4  cmp  r14d, 1
0x749c  2  jne  0x74b4
0x749e  3  mov  eax, dword ptr [rbp + 0x40]
0x74a1  2  dec  eax
0x74a3  7  mov  qword ptr [rip + 0x1a966], rbx
0x74aa  6  mov  dword ptr [rip + 0x1a958], eax
0x74b0  2  xor  ecx, ecx
0x74b2  2  jmp  0x751d
0x74b4  4  lea  rdx, [rbp + 0x38]
0x74b8  4  mov  qword ptr [rbp + 0x38], rdi
0x74bc  3  mov  rcx, rbx
0x74bf  5  call  0xc057
0x74c4  2  mov  esi, eax
0x74c6  2  test  eax, eax
0x74c8  2  je  0x74e3
0x74ca  4  mov  rcx, qword ptr [rbp + 0x38]
0x74ce  5  call  0x8b07
0x74d3  3  mov  rcx, rbx
0x74d6  4  mov  qword ptr [rbp + 0x38], rdi
0x74da  5  call  0x8b07
0x74df  2  mov  edi, esi
0x74e1  2  jmp  0x7522
0x74e3  4  mov  rdx, qword ptr [rbp + 0x38]
0x74e7  3  mov  rcx, rdi
0x74ea  3  mov  rax, rdx
0x74ed  3  cmp  qword ptr [rdx], rdi
0x74f0  2  je  0x74fe
0x74f2  4  lea  rax, [rax + 8]
0x74f6  3  inc  rcx
0x74f9  3  cmp  qword ptr [rax], rdi
0x74fc  2  jne  0x74f2
0x74fe  6  mov  dword ptr [rip + 0x1a904], ecx
0x7504  2  xor  ecx, ecx
0x7506  4  mov  qword ptr [rbp + 0x38], rdi
0x750a  7  mov  qword ptr [rip + 0x1a8ff], rdx
0x7511  5  call  0x8b07
0x7516  3  mov  rcx, rbx
0x7519  4  mov  qword ptr [rbp + 0x38], rdi
0x751d  5  call  0x8b07
0x7522  5  mov  rbx, qword ptr [rsp + 0x60]
0x7527  2  mov  eax, edi
0x7529  4  add  rsp, 0x30
0x752d  2  pop  r15
0x752f  2  pop  r14
0x7531  1  pop  rdi
0x7532  1  pop  rsi
0x7533  1  pop  rbp
0x7534  1  ret  
0x7535  1  int3  
0x7536  1  int3  
0x7537  5  mov  qword ptr [rsp + 8], rbx
0x753c  1  push  rdi
0x753d  4  sub  rsp, 0x20
0x7541  2  xor  edi, edi
0x7543  7  cmp  qword ptr [rip + 0x1a87e], rdi
0x754a  2  je  0x7550
0x754c  2  xor  eax, eax
0x754e  2  jmp  0x759f
0x7550  5  call  0xca97
0x7555  5  call  0xcfcb
0x755a  3  mov  rbx, rax
0x755d  3  test  rax, rax
0x7560  2  jne  0x756e
0x7562  2  xor  ecx, ecx
0x7564  5  call  0x8b07
0x7569  3  or  eax, 0xffffffff
0x756c  2  jmp  0x759f
0x756e  3  mov  rcx, rbx
0x7571  5  call  0x75ab
0x7576  3  test  rax, rax
0x7579  2  jne  0x7580
0x757b  3  or  edi, 0xffffffff
0x757e  2  jmp  0x758e
0x7580  7  mov  qword ptr [rip + 0x1a859], rax
0x7587  7  mov  qword ptr [rip + 0x1a83a], rax
0x758e  2  xor  ecx, ecx
0x7590  5  call  0x8b07
0x7595  3  mov  rcx, rbx
0x7598  5  call  0x8b07
0x759d  2  mov  eax, edi
0x759f  5  mov  rbx, qword ptr [rsp + 0x30]
0x75a4  4  add  rsp, 0x20
0x75a8  1  pop  rdi
0x75a9  1  ret  
0x75aa  1  int3  
0x75ab  3  mov  rax, rsp
0x75ae  4  mov  qword ptr [rax + 8], rbx
0x75b2  4  mov  qword ptr [rax + 0x10], rbp
0x75b6  4  mov  qword ptr [rax + 0x18], rsi
0x75ba  4  mov  qword ptr [rax + 0x20], rdi
0x75be  2  push  r14
0x75c0  4  sub  rsp, 0x30
0x75c4  3  mov  rsi, rcx
0x75c7  2  xor  ecx, ecx
0x75c9  3  mov  r8, rsi
0x75cc  2  mov  dl, byte ptr [rsi]
0x75ce  2  jmp  0x75f5
0x75d0  3  cmp  dl, 0x3d
0x75d3  4  lea  rax, [rcx + 1]
0x75d7  4  cmove  rax, rcx
0x75db  3  mov  rcx, rax
0x75de  4  or  rax, 0xffffffffffffffff
0x75e2  3  inc  rax
0x75e5  5  cmp  byte ptr [r8 + rax], 0
0x75ea  2  jne  0x75e2
0x75ec  3  inc  r8
0x75ef  3  add  r8, rax
0x75f2  3  mov  dl, byte ptr [r8]
0x75f5  2  test  dl, dl
0x75f7  2  jne  0x75d0
0x75f9  3  inc  rcx
0x75fc  5  mov  edx, 8
0x7601  5  call  0x8a8f
0x7606  3  mov  rbx, rax
0x7609  3  test  rax, rax
0x760c  2  jne  0x7619
0x760e  2  xor  ecx, ecx
0x7610  5  call  0x8b07
0x7615  2  xor  eax, eax
0x7617  2  jmp  0x768b
0x7619  3  mov  r14, rbx
0x761c  2  mov  al, byte ptr [rsi]
0x761e  2  test  al, al
0x7620  2  je  0x7681
0x7622  4  or  rbp, 0xffffffffffffffff
0x7626  3  inc  rbp
0x7629  4  cmp  byte ptr [rsi + rbp], 0
0x762d  2  jne  0x7626
0x762f  3  inc  rbp
0x7632  2  cmp  al, 0x3d
0x7634  2  je  0x766b
0x7636  5  mov  edx, 1
0x763b  3  mov  rcx, rbp
0x763e  5  call  0x8a8f
0x7643  3  mov  rdi, rax
0x7646  3  test  rax, rax
0x7649  2  je  0x7670
0x764b  3  mov  r8, rsi
0x764e  3  mov  rdx, rbp
0x7651  3  mov  rcx, rax
0x7654  5  call  0x8427
0x7659  2  xor  ecx, ecx
0x765b  2  test  eax, eax
0x765d  2  jne  0x76a6
0x765f  3  mov  qword ptr [r14], rdi
0x7662  4  add  r14, 8
0x7666  5  call  0x8b07
0x766b  3  add  rsi, rbp
0x766e  2  jmp  0x761c
0x7670  3  mov  rcx, rbx
0x7673  5  call  0x76bb
0x7678  2  xor  ecx, ecx
0x767a  5  call  0x8b07
0x767f  2  jmp  0x760e
0x7681  2  xor  ecx, ecx
0x7683  5  call  0x8b07
0x7688  3  mov  rax, rbx
0x768b  5  mov  rbx, qword ptr [rsp + 0x40]
0x7690  5  mov  rbp, qword ptr [rsp + 0x48]
0x7695  5  mov  rsi, qword ptr [rsp + 0x50]
0x769a  5  mov  rdi, qword ptr [rsp + 0x58]
0x769f  4  add  rsp, 0x30
0x76a3  2  pop  r14
0x76a5  1  ret  
0x76a6  6  and  qword ptr [rsp + 0x20], 0
0x76ac  3  xor  r9d, r9d
0x76af  3  xor  r8d, r8d
0x76b2  2  xor  edx, edx
0x76b4  5  call  0x8953
0x76b9  1  int3  
0x76ba  1  int3  
0x76bb  3  test  rcx, rcx
0x76be  2  je  0x76fb
0x76c0  5  mov  qword ptr [rsp + 8], rbx
0x76c5  1  push  rdi
0x76c6  4  sub  rsp, 0x20
0x76ca  3  mov  rax, qword ptr [rcx]
0x76cd  3  mov  rbx, rcx
0x76d0  3  mov  rdi, rcx
0x76d3  2  jmp  0x76e4
0x76d5  3  mov  rcx, rax
0x76d8  5  call  0x8b07
0x76dd  4  lea  rdi, [rdi + 8]
0x76e1  3  mov  rax, qword ptr [rdi]
0x76e4  3  test  rax, rax
0x76e7  2  jne  0x76d5
0x76e9  3  mov  rcx, rbx
0x76ec  5  call  0x8b07
0x76f1  5  mov  rbx, qword ptr [rsp + 0x30]
0x76f6  4  add  rsp, 0x20
0x76fa  1  pop  rdi
0x76fb  1  ret  
0x76fc  1  int3  
0x76fd  1  int3  
0x76fe  1  int3  
0x76ff  5  mov  qword ptr [rsp + 8], rbx
0x7704  5  mov  qword ptr [rsp + 0x10], rsi
0x7709  5  mov  qword ptr [rsp + 0x18], rdi
0x770e  2  push  r14
0x7710  4  sub  rsp, 0x40
0x7714  7  mov  rdi, qword ptr [rip + 0x1a6b5]
0x771b  4  or  r14d, 0xffffffff
0x771f  3  test  rdi, rdi
0x7722  6  jne  0x77c0
0x7728  3  mov  eax, r14d
0x772b  5  mov  rbx, qword ptr [rsp + 0x50]
0x7730  5  mov  rsi, qword ptr [rsp + 0x58]
0x7735  5  mov  rdi, qword ptr [rsp + 0x60]
0x773a  4  add  rsp, 0x40
0x773e  2  pop  r14
0x7740  1  ret  
0x7741  6  and  qword ptr [rsp + 0x38], 0
0x7747  3  mov  r9d, r14d
0x774a  6  and  qword ptr [rsp + 0x30], 0
0x7750  3  mov  r8, rax
0x7753  5  and  dword ptr [rsp + 0x28], 0
0x7758  2  xor  edx, edx
0x775a  6  and  qword ptr [rsp + 0x20], 0
0x7760  2  xor  ecx, ecx
0x7762  5  call  0xceeb
0x7767  3  movsxd  rsi, eax
0x776a  2  test  eax, eax
0x776c  2  je  0x7728
0x776e  5  mov  edx, 1
0x7773  3  mov  rcx, rsi
0x7776  5  call  0x8a8f
0x777b  3  mov  rbx, rax
0x777e  3  test  rax, rax
0x7781  2  je  0x77d1
0x7783  6  and  qword ptr [rsp + 0x38], 0
0x7789  3  mov  r9d, r14d
0x778c  6  and  qword ptr [rsp + 0x30], 0
0x7792  2  xor  edx, edx
0x7794  3  mov  r8, qword ptr [rdi]
0x7797  2  xor  ecx, ecx
0x7799  4  mov  dword ptr [rsp + 0x28], esi
0x779d  5  mov  qword ptr [rsp + 0x20], rax
0x77a2  5  call  0xceeb
0x77a7  3  mov  rcx, rbx
0x77aa  2  test  eax, eax
0x77ac  2  je  0x77d3
0x77ae  2  xor  edx, edx
0x77b0  5  call  0xd51b
0x77b5  2  xor  ecx, ecx
0x77b7  5  call  0x8b07
0x77bc  4  add  rdi, 8
0x77c0  3  mov  rax, qword ptr [rdi]
0x77c3  3  test  rax, rax
0x77c6  6  jne  0x7741
0x77cc  5  jmp  0x772b
0x77d1  2  xor  ecx, ecx
0x77d3  5  call  0x8b07
0x77d8  5  jmp  0x7728
0x77dd  1  int3  
0x77de  1  int3  
0x77df  4  sub  rsp, 0x28
0x77e3  3  mov  rcx, qword ptr [rcx]
0x77e6  7  cmp  rcx, qword ptr [rip + 0x1a5f3]
0x77ed  2  je  0x77f4
0x77ef  5  call  0x76bb
0x77f4  4  add  rsp, 0x28
0x77f8  1  ret  
0x77f9  1  int3  
0x77fa  1  int3  
0x77fb  4  sub  rsp, 0x28
0x77ff  3  mov  rcx, qword ptr [rcx]
0x7802  7  cmp  rcx, qword ptr [rip + 0x1a5cf]
0x7809  2  je  0x7810
0x780b  5  call  0x76bb
0x7810  4  add  rsp, 0x28
0x7814  1  ret  
0x7815  1  int3  
0x7816  1  int3  
0x7817  4  sub  rsp, 0x28
0x781b  7  mov  rax, qword ptr [rip + 0x1a5a6]
0x7822  3  test  rax, rax
0x7825  2  jne  0x784d
0x7827  7  cmp  qword ptr [rip + 0x1a5a2], rax
0x782e  2  jne  0x7834
0x7830  2  xor  eax, eax
0x7832  2  jmp  0x784d
0x7834  5  call  0x7537
0x7839  2  test  eax, eax
0x783b  2  je  0x7846
0x783d  5  call  0x76ff
0x7842  2  test  eax, eax
0x7844  2  jne  0x7830
0x7846  7  mov  rax, qword ptr [rip + 0x1a57b]
0x784d  4  add  rsp, 0x28
0x7851  1  ret  
0x7852  1  int3  
0x7853  4  sub  rsp, 0x38
0x7857  9  mov  qword ptr [rsp + 0x20], 0xfffffffffffffffe
0x7860  7  lea  rcx, [rip + 0x1a561]
0x7867  5  call  0x77df
0x786c  1  nop  
0x786d  7  lea  rcx, [rip + 0x1a55c]
0x7874  5  call  0x77fb
0x7879  1  nop  
0x787a  7  mov  rcx, qword ptr [rip + 0x1a55f]
0x7881  5  call  0x76bb
0x7886  7  mov  rcx, qword ptr [rip + 0x1a54b]
0x788d  4  add  rsp, 0x38
0x7891  5  jmp  0x76bb
0x7896  1  int3  
0x7897  4  sub  rsp, 0x28
0x789b  7  mov  rax, qword ptr [rip + 0x1a53e]
0x78a2  3  test  rax, rax
0x78a5  2  jne  0x78e0
0x78a7  7  mov  rax, qword ptr [rip + 0x1a51a]
0x78ae  3  test  rax, rax
0x78b1  2  jne  0x78d9
0x78b3  7  cmp  qword ptr [rip + 0x1a516], rax
0x78ba  2  jne  0x78c0
0x78bc  2  xor  eax, eax
0x78be  2  jmp  0x78d9
0x78c0  5  call  0x7537
0x78c5  2  test  eax, eax
0x78c7  2  je  0x78d2
0x78c9  5  call  0x76ff
0x78ce  2  test  eax, eax
0x78d0  2  jne  0x78bc
0x78d2  7  mov  rax, qword ptr [rip + 0x1a4ef]
0x78d9  7  mov  qword ptr [rip + 0x1a500], rax
0x78e0  4  add  rsp, 0x28
0x78e4  1  ret  
0x78e5  1  int3  
0x78e6  1  int3  
0x78e7  5  jmp  0x7537
0x78ec  1  int3  
0x78ed  1  int3  
0x78ee  1  int3  
0x78ef  3  cmp  rcx, rdx
0x78f2  2  je  0x792f
0x78f4  5  mov  qword ptr [rsp + 8], rbx
0x78f9  1  push  rdi
0x78fa  4  sub  rsp, 0x20
0x78fe  3  mov  rdi, rdx
0x7901  3  mov  rbx, rcx
0x7904  3  mov  rax, qword ptr [rbx]
0x7907  3  test  rax, rax
0x790a  2  je  0x791c
0x790c  10  movabs  r10, 0x85f13e9656da4870
0x7916  6  call  qword ptr [rip + 0xe954]
0x791c  4  add  rbx, 8
0x7920  3  cmp  rbx, rdi
0x7923  2  jne  0x7904
0x7925  5  mov  rbx, qword ptr [rsp + 0x30]
0x792a  4  add  rsp, 0x20
0x792e  1  pop  rdi
0x792f  1  ret  
0x7930  1  int3  
0x7931  1  int3  
0x7932  1  int3  
0x7933  5  mov  qword ptr [rsp + 8], rbx
0x7938  1  push  rdi
0x7939  4  sub  rsp, 0x20
0x793d  3  mov  rdi, rdx
0x7940  3  mov  rbx, rcx
0x7943  3  cmp  rcx, rdx
0x7946  2  je  0x796d
0x7948  3  mov  rax, qword ptr [rbx]
0x794b  3  test  rax, rax
0x794e  2  je  0x7964
0x7950  10  movabs  r10, 0xd30527475e523070
0x795a  6  call  qword ptr [rip + 0xe910]
0x7960  2  test  eax, eax
0x7962  2  jne  0x796f
0x7964  4  add  rbx, 8
0x7968  3  cmp  rbx, rdi
0x796b  2  jmp  0x7946
0x796d  2  xor  eax, eax
0x796f  5  mov  rbx, qword ptr [rsp + 0x30]
0x7974  4  add  rsp, 0x20
0x7978  1  pop  rdi
0x7979  1  ret  
0x797a  1  int3  
0x797b  5  mov  qword ptr [rsp + 8], rbx
0x7980  5  mov  qword ptr [rsp + 0x20], r9
0x7985  1  push  rdi
0x7986  4  sub  rsp, 0x20
0x798a  3  mov  rbx, r9
0x798d  3  mov  rdi, r8
0x7990  2  mov  ecx, dword ptr [rdx]
0x7992  5  call  0xd56b
0x7997  1  nop  
0x7998  3  mov  rcx, rdi
0x799b  5  call  0x79b3
0x79a0  1  nop  
0x79a1  2  mov  ecx, dword ptr [rbx]
0x79a3  5  call  0xd5bf
0x79a8  5  mov  rbx, qword ptr [rsp + 0x30]
0x79ad  4  add  rsp, 0x20
0x79b1  1  pop  rdi
0x79b2  1  ret  
0x79b3  2  push  rbx
0x79b5  4  sub  rsp, 0x30
0x79b9  3  mov  rbx, rcx
0x79bc  7  cmp  byte ptr [rip + 0x1a435], 0
0x79c3  6  jne  0x7a72
0x79c9  5  mov  eax, 1
0x79ce  6  xchg  dword ptr [rip + 0x1a414], eax
0x79d4  3  mov  rax, qword ptr [rcx]
0x79d7  2  mov  ecx, dword ptr [rax]
0x79d9  2  test  ecx, ecx
0x79db  2  jne  0x7a1b
0x79dd  7  mov  rax, qword ptr [rip + 0x19654]
0x79e4  7  mov  rdx, qword ptr [rip + 0x1a405]
0x79eb  3  cmp  rdx, rax
0x79ee  2  je  0x7a12
0x79f0  2  mov  ecx, eax
0x79f2  3  and  ecx, 0x3f
0x79f5  3  xor  rax, rdx
0x79f8  3  ror  rax, cl
0x79fb  10  movabs  r10, 0x99012e4578d92870
0x7a05  3  xor  r8d, r8d
0x7a08  2  xor  edx, edx
0x7a0a  2  xor  ecx, ecx
0x7a0c  6  call  qword ptr [rip + 0xe85e]
0x7a12  7  lea  rcx, [rip + 0x1a427]
0x7a19  2  jmp  0x7a27
0x7a1b  3  cmp  ecx, 1
0x7a1e  2  jne  0x7a2d
0x7a20  7  lea  rcx, [rip + 0x1a431]
0x7a27  5  call  0x81b3
0x7a2c  1  nop  
0x7a2d  3  mov  rax, qword ptr [rbx]
0x7a30  3  cmp  dword ptr [rax], 0
0x7a33  2  jne  0x7a48
0x7a35  7  lea  rdx, [rip + 0xe8cc]
0x7a3c  7  lea  rcx, [rip + 0xe8a5]
0x7a43  5  call  0x78ef
0x7a48  7  lea  rdx, [rip + 0xe8c9]
0x7a4f  7  lea  rcx, [rip + 0xe8ba]
0x7a56  5  call  0x78ef
0x7a5b  4  mov  rax, qword ptr [rbx + 8]
0x7a5f  3  cmp  dword ptr [rax], 0
0x7a62  2  jne  0x7a72
0x7a64  7  mov  byte ptr [rip + 0x1a38d], 1
0x7a6b  4  mov  rax, qword ptr [rbx + 0x10]
0x7a6f  3  mov  byte ptr [rax], 1
0x7a72  4  add  rsp, 0x30
0x7a76  1  pop  rbx
0x7a77  1  ret  
0x7a78  5  call  0x83df
0x7a7d  1  nop  
0x7a7e  1  int3  
0x7a7f  5  mov  dword ptr [rsp + 0x18], r8d
0x7a84  4  mov  dword ptr [rsp + 0x10], edx
0x7a88  1  push  rbp
0x7a89  3  mov  rbp, rsp
0x7a8c  4  sub  rsp, 0x50
0x7a90  8  mov  qword ptr [rbp - 0x20], 0xfffffffffffffffe
0x7a98  5  mov  qword ptr [rsp + 0x60], rbx
0x7a9d  2  mov  ebx, ecx
0x7a9f  3  test  r8d, r8d
0x7aa2  2  jne  0x7aee
0x7aa4  2  xor  ecx, ecx
0x7aa6  6  call  qword ptr [rip + 0xe5bc]
0x7aac  3  test  rax, rax
0x7aaf  2  je  0x7aee
0x7ab1  5  mov  ecx, 0x5a4d
0x7ab6  3  cmp  word ptr [rax], cx
0x7ab9  2  jne  0x7aee
0x7abb  4  movsxd  rcx, dword ptr [rax + 0x3c]
0x7abf  3  add  rcx, rax
0x7ac2  6  cmp  dword ptr [rcx], 0x4550
0x7ac8  2  jne  0x7aee
0x7aca  5  mov  eax, 0x20b
0x7acf  4  cmp  word ptr [rcx + 0x18], ax
0x7ad3  2  jne  0x7aee
0x7ad5  7  cmp  dword ptr [rcx + 0x84], 0xe
0x7adc  2  jbe  0x7aee
0x7ade  7  cmp  dword ptr [rcx + 0xf8], 0
0x7ae5  2  je  0x7aee
0x7ae7  2  mov  ecx, ebx
0x7ae9  5  call  0x7b9f
0x7aee  4  mov  byte ptr [rbp + 0x28], 0
0x7af2  4  lea  rax, [rbp + 0x18]
0x7af6  4  mov  qword ptr [rbp - 0x18], rax
0x7afa  4  lea  rax, [rbp + 0x20]
0x7afe  4  mov  qword ptr [rbp - 0x10], rax
0x7b02  4  lea  rax, [rbp + 0x28]
0x7b06  4  mov  qword ptr [rbp - 8], rax
0x7b0a  5  mov  eax, 2
0x7b0f  3  mov  dword ptr [rbp - 0x2c], eax
0x7b12  3  mov  dword ptr [rbp - 0x28], eax
0x7b15  4  lea  r9, [rbp - 0x2c]
0x7b19  4  lea  r8, [rbp - 0x18]
0x7b1d  4  lea  rdx, [rbp - 0x28]
0x7b21  4  lea  rcx, [rbp - 0x30]
0x7b25  5  call  0x797b
0x7b2a  1  nop  
0x7b2b  4  cmp  dword ptr [rbp + 0x20], 0
0x7b2f  2  je  0x7b3c
0x7b31  5  mov  rbx, qword ptr [rsp + 0x60]
0x7b36  4  add  rsp, 0x50
0x7b3a  1  pop  rbp
0x7b3b  1  ret  
0x7b3c  2  mov  ecx, ebx
0x7b3e  5  call  0x7b47
0x7b43  1  int3  
0x7b44  1  int3  
0x7b45  1  int3  
0x7b46  1  int3  
0x7b47  2  push  rbx
0x7b49  4  sub  rsp, 0x20
0x7b4d  2  mov  ebx, ecx
0x7b4f  5  call  0x7b7b
0x7b54  2  test  al, al
0x7b56  2  je  0x7b69
0x7b58  6  call  qword ptr [rip + 0xe5ba]
0x7b5e  3  mov  rcx, rax
0x7b61  2  mov  edx, ebx
0x7b63  6  call  qword ptr [rip + 0xe5bf]
0x7b69  2  mov  ecx, ebx
0x7b6b  5  call  0x7b9f
0x7b70  2  mov  ecx, ebx
0x7b72  6  call  qword ptr [rip + 0xe5a8]
0x7b78  1  int3  
0x7b79  1  int3  
0x7b7a  1  int3  
0x7b7b  4  sub  rsp, 0x28
0x7b7f  5  call  0xd60f
0x7b84  3  cmp  eax, 1
0x7b87  2  je  0x7b95
0x7b89  5  call  0xd5db
0x7b8e  2  test  al, al
0x7b90  3  sete  al
0x7b93  2  jmp  0x7b97
0x7b95  2  xor  al, al
0x7b97  4  add  rsp, 0x28
0x7b9b  1  ret  
0x7b9c  1  int3  
0x7b9d  1  int3  
0x7b9e  1  int3  
0x7b9f  2  push  rbx
0x7ba1  4  sub  rsp, 0x30
0x7ba5  9  mov  qword ptr [rsp + 0x20], 0xfffffffffffffffe
0x7bae  2  mov  ebx, ecx
0x7bb0  6  and  qword ptr [rsp + 0x48], 0
0x7bb6  5  lea  r8, [rsp + 0x48]
0x7bbb  7  lea  rdx, [rip + 0xf9fe]
0x7bc2  2  xor  ecx, ecx
0x7bc4  6  call  qword ptr [rip + 0xe566]
0x7bca  5  mov  rcx, qword ptr [rsp + 0x48]
0x7bcf  2  test  eax, eax
0x7bd1  2  je  0x7bfc
0x7bd3  7  lea  rdx, [rip + 0xf9fe]
0x7bda  6  call  qword ptr [rip + 0xe4f8]
0x7be0  3  test  rax, rax
0x7be3  2  je  0x7bf7
0x7be5  10  movabs  r10, 0xa201879b5e5a7b70
0x7bef  2  mov  ecx, ebx
0x7bf1  6  call  qword ptr [rip + 0xe679]
0x7bf7  5  mov  rcx, qword ptr [rsp + 0x48]
0x7bfc  3  test  rcx, rcx
0x7bff  2  je  0x7c08
0x7c01  6  call  qword ptr [rip + 0xe4c9]
0x7c07  1  nop  
0x7c08  4  add  rsp, 0x30
0x7c0c  1  pop  rbx
0x7c0d  1  ret  
0x7c0e  1  int3  
0x7c0f  7  mov  qword ptr [rip + 0x1a1da], rcx
0x7c16  1  ret  
0x7c17  5  mov  edx, 2
0x7c1c  2  xor  ecx, ecx
0x7c1e  4  lea  r8d, [rdx - 1]
0x7c22  5  jmp  0x7a7f
0x7c27  2  xor  edx, edx
0x7c29  2  xor  ecx, ecx
0x7c2b  4  lea  r8d, [rdx + 1]
0x7c2f  5  jmp  0x7a7f
0x7c34  1  int3  
0x7c35  1  int3  
0x7c36  1  int3  
0x7c37  3  xor  r8d, r8d
0x7c3a  4  lea  edx, [r8 + 2]
0x7c3e  5  jmp  0x7a7f
0x7c43  4  sub  rsp, 0x28
0x7c47  7  mov  r8, qword ptr [rip + 0x193ea]
0x7c4e  3  mov  rdx, rcx
0x7c51  7  cmp  qword ptr [rip + 0x1a198], r8
0x7c58  2  jne  0x7c7b
0x7c5a  3  mov  ecx, r8d
0x7c5d  5  mov  eax, 0x40
0x7c62  3  and  ecx, 0x3f
0x7c65  2  sub  eax, ecx
0x7c67  2  mov  cl, al
0x7c69  3  ror  rdx, cl
0x7c6c  3  xor  rdx, r8
0x7c6f  7  mov  qword ptr [rip + 0x1a17a], rdx
0x7c76  4  add  rsp, 0x28
0x7c7a  1  ret  
0x7c7b  5  call  0x83df
0x7c80  1  int3  
0x7c81  1  int3  
0x7c82  1  int3  
0x7c83  3  xor  r8d, r8d
0x7c86  2  xor  edx, edx
0x7c88  5  jmp  0x7a7f
0x7c8d  1  int3  
0x7c8e  1  int3  
0x7c8f  4  sub  rsp, 0x28
0x7c93  6  lea  eax, [rcx - 0x4000]
0x7c99  5  test  eax, 0xffff3fff
0x7c9e  2  jne  0x7cb2
0x7ca0  6  cmp  ecx, 0xc000
0x7ca6  2  je  0x7cb2
0x7ca8  6  xchg  dword ptr [rip + 0x1aa06], ecx
0x7cae  2  xor  eax, eax
0x7cb0  2  jmp  0x7cc7
0x7cb2  5  call  0x8a6f
0x7cb7  6  mov  dword ptr [rax], 0x16
0x7cbd  5  call  0x8933
0x7cc2  5  mov  eax, 0x16
0x7cc7  4  add  rsp, 0x28
0x7ccb  1  ret  
0x7ccc  1  int3  
0x7ccd  1  int3  
0x7cce  1  int3  
0x7ccf  4  sub  rsp, 0x28
0x7cd3  6  call  qword ptr [rip + 0xe45f]
0x7cd9  7  mov  qword ptr [rip + 0x1a140], rax
0x7ce0  6  call  qword ptr [rip + 0xe45a]
0x7ce6  7  mov  qword ptr [rip + 0x1a13b], rax
0x7ced  2  mov  al, 1
0x7cef  4  add  rsp, 0x28
0x7cf3  1  ret  
0x7cf4  1  int3  
0x7cf5  1  int3  
0x7cf6  1  int3  
0x7cf7  7  lea  rax, [rip + 0x1a10a]
0x7cfe  1  ret  
0x7cff  7  lea  rax, [rip + 0x1a10a]
0x7d06  1  ret  
0x7d07  5  mov  qword ptr [rsp + 8], rbx
0x7d0c  5  mov  qword ptr [rsp + 0x10], rsi
0x7d11  5  mov  qword ptr [rsp + 0x20], r9
0x7d16  1  push  rdi
0x7d17  4  sub  rsp, 0x30
0x7d1b  3  mov  rdi, r9
0x7d1e  2  mov  ecx, dword ptr [rdx]
0x7d20  5  call  0xd56b
0x7d25  1  nop  
0x7d26  7  lea  rbx, [rip + 0x1a72b]
0x7d2d  7  lea  rsi, [rip + 0x1948c]
0x7d34  5  mov  qword ptr [rsp + 0x20], rbx
0x7d39  7  lea  rax, [rip + 0x1a720]
0x7d40  3  cmp  rbx, rax
0x7d43  2  je  0x7d5e
0x7d45  3  cmp  qword ptr [rbx], rsi
0x7d48  2  je  0x7d58
0x7d4a  3  mov  rdx, rsi
0x7d4d  3  mov  rcx, rbx
0x7d50  5  call  0xe167
0x7d55  3  mov  qword ptr [rbx], rax
0x7d58  4  add  rbx, 8
0x7d5c  2  jmp  0x7d34
0x7d5e  2  mov  ecx, dword ptr [rdi]
0x7d60  5  call  0xd5bf
0x7d65  5  mov  rbx, qword ptr [rsp + 0x40]
0x7d6a  5  mov  rsi, qword ptr [rsp + 0x48]
0x7d6f  4  add  rsp, 0x30
0x7d73  1  pop  rdi
0x7d74  1  ret  
0x7d75  1  int3  
0x7d76  1  int3  
0x7d77  5  mov  eax, 1
0x7d7c  6  xchg  dword ptr [rip + 0x1a0ae], eax
0x7d82  1  ret  
0x7d83  3  mov  r11, rsp
0x7d86  4  sub  rsp, 0x28
0x7d8a  5  mov  eax, 4
0x7d8f  4  lea  r9, [r11 + 0x10]
0x7d93  4  lea  r8, [r11 + 8]
0x7d97  4  mov  dword ptr [rsp + 0x38], eax
0x7d9b  4  lea  rdx, [r11 + 0x18]
0x7d9f  4  mov  dword ptr [rsp + 0x40], eax
0x7da3  4  lea  rcx, [r11 + 8]
0x7da7  5  call  0x7d07
0x7dac  4  add  rsp, 0x28
0x7db0  1  ret  
0x7db1  1  int3  
0x7db2  1  int3  
0x7db3  2  push  rbx
0x7db5  4  sub  rsp, 0x20
0x7db9  2  mov  ebx, ecx
0x7dbb  5  call  0xb227
0x7dc0  7  mov  r8d, dword ptr [rax + 0x3a8]
0x7dc7  3  mov  edx, r8d
0x7dca  3  and  dl, 2
0x7dcd  2  neg  dl
0x7dcf  2  sbb  ecx, ecx
0x7dd1  3  cmp  ebx, -1
0x7dd4  2  je  0x7e0c
0x7dd6  2  test  ebx, ebx
0x7dd8  2  je  0x7e13
0x7dda  3  cmp  ebx, 1
0x7ddd  2  je  0x7dff
0x7ddf  3  cmp  ebx, 2
0x7de2  2  je  0x7df9
0x7de4  5  call  0x8a6f
0x7de9  6  mov  dword ptr [rax], 0x16
0x7def  5  call  0x8933
0x7df4  3  or  eax, 0xffffffff
0x7df7  2  jmp  0x7e16
0x7df9  4  and  r8d, 0xfffffffd
0x7dfd  2  jmp  0x7e03
0x7dff  4  or  r8d, 2
0x7e03  7  mov  dword ptr [rax + 0x3a8], r8d
0x7e0a  2  jmp  0x7e13
0x7e0c  7  or  dword ptr [rip + 0x19afd], 0xffffffff
0x7e13  3  lea  eax, [rcx + 2]
0x7e16  4  add  rsp, 0x20
0x7e1a  1  pop  rbx
0x7e1b  1  ret  
0x7e1c  1  int3  
0x7e1d  1  int3  
0x7e1e  1  int3  
0x7e1f  6  mov  eax, dword ptr [rip + 0x1a00f]
0x7e25  1  nop  
0x7e26  1  ret  
0x7e27  4  sub  rsp, 0x28
0x7e2b  3  cmp  ecx, 1
0x7e2e  2  jbe  0x7e45
0x7e30  5  call  0x8a6f
0x7e35  6  mov  dword ptr [rax], 0x16
0x7e3b  5  call  0x8933
0x7e40  3  or  eax, 0xffffffff
0x7e43  2  jmp  0x7e4d
0x7e45  6  xchg  dword ptr [rip + 0x19fe9], ecx
0x7e4b  2  mov  eax, ecx
0x7e4d  4  add  rsp, 0x28
0x7e51  1  ret  
0x7e52  1  int3  
0x7e53  7  lea  rax, [rip + 0x19fde]
0x7e5a  1  ret  
0x7e5b  5  mov  qword ptr [rsp + 8], rbx
0x7e60  5  mov  qword ptr [rsp + 0x20], r9
0x7e65  1  push  rdi
0x7e66  4  sub  rsp, 0x20
0x7e6a  3  mov  rbx, r9
0x7e6d  3  mov  rdi, r8
0x7e70  2  mov  ecx, dword ptr [rdx]
0x7e72  5  call  0xd56b
0x7e77  1  nop  
0x7e78  3  mov  rcx, rdi
0x7e7b  5  call  0x7ed3
0x7e80  2  mov  edi, eax
0x7e82  2  mov  ecx, dword ptr [rbx]
0x7e84  5  call  0xd5bf
0x7e89  2  mov  eax, edi
0x7e8b  5  mov  rbx, qword ptr [rsp + 0x30]
0x7e90  4  add  rsp, 0x20
0x7e94  1  pop  rdi
0x7e95  1  ret  
0x7e96  1  int3  
0x7e97  5  mov  qword ptr [rsp + 8], rbx
0x7e9c  5  mov  qword ptr [rsp + 0x20], r9
0x7ea1  1  push  rdi
0x7ea2  4  sub  rsp, 0x20
0x7ea6  3  mov  rbx, r9
0x7ea9  3  mov  rdi, r8
0x7eac  2  mov  ecx, dword ptr [rdx]
0x7eae  5  call  0xd56b
0x7eb3  1  nop  
0x7eb4  3  mov  rcx, rdi
0x7eb7  5  call  0x8083
0x7ebc  2  mov  edi, eax
0x7ebe  2  mov  ecx, dword ptr [rbx]
0x7ec0  5  call  0xd5bf
0x7ec5  2  mov  eax, edi
0x7ec7  5  mov  rbx, qword ptr [rsp + 0x30]
0x7ecc  4  add  rsp, 0x20
0x7ed0  1  pop  rdi
0x7ed1  1  ret  
0x7ed2  1  int3  
0x7ed3  5  mov  qword ptr [rsp + 8], rbx
0x7ed8  5  mov  qword ptr [rsp + 0x10], rbp
0x7edd  5  mov  qword ptr [rsp + 0x18], rsi
0x7ee2  1  push  rdi
0x7ee3  2  push  r14
0x7ee5  2  push  r15
0x7ee7  4  sub  rsp, 0x20
0x7eeb  3  mov  rax, qword ptr [rcx]
0x7eee  2  xor  ebp, ebp
0x7ef0  3  mov  r15, rcx
0x7ef3  3  mov  rdx, qword ptr [rax]
0x7ef6  3  test  rdx, rdx
0x7ef9  6  je  0x8067
0x7eff  7  mov  r10, qword ptr [rip + 0x19132]
0x7f06  3  mov  ecx, r10d
0x7f09  3  mov  rsi, r10
0x7f0c  3  xor  rsi, qword ptr [rdx]
0x7f0f  3  and  ecx, 0x3f
0x7f12  3  mov  r9, r10
0x7f15  3  ror  rsi, cl
0x7f18  4  xor  r9, qword ptr [rdx + 8]
0x7f1c  3  mov  rbx, r10
0x7f1f  4  xor  rbx, qword ptr [rdx + 0x10]
0x7f23  3  ror  r9, cl
0x7f26  3  ror  rbx, cl
0x7f29  3  cmp  r9, rbx
0x7f2c  6  jne  0x7fd9
0x7f32  3  sub  rbx, rsi
0x7f35  5  mov  eax, 0x200
0x7f3a  4  sar  rbx, 3
0x7f3e  3  cmp  rbx, rax
0x7f41  3  mov  rdi, rbx
0x7f44  4  cmova  rdi, rax
0x7f48  3  lea  eax, [rbp + 0x20]
0x7f4b  3  add  rdi, rbx
0x7f4e  4  cmove  rdi, rax
0x7f52  3  cmp  rdi, rbx
0x7f55  2  jb  0x7f75
0x7f57  4  lea  r8d, [rbp + 8]
0x7f5b  3  mov  rdx, rdi
0x7f5e  3  mov  rcx, rsi
0x7f61  5  call  0xe1cf
0x7f66  2  xor  ecx, ecx
0x7f68  3  mov  r14, rax
0x7f6b  5  call  0x8b07
0x7f70  3  test  r14, r14
0x7f73  2  jne  0x7f9d
0x7f75  4  lea  rdi, [rbx + 4]
0x7f79  6  mov  r8d, 8
0x7f7f  3  mov  rdx, rdi
0x7f82  3  mov  rcx, rsi
0x7f85  5  call  0xe1cf
0x7f8a  2  xor  ecx, ecx
0x7f8c  3  mov  r14, rax
0x7f8f  5  call  0x8b07
0x7f94  3  test  r14, r14
0x7f97  6  je  0x8067
0x7f9d  7  mov  r10, qword ptr [rip + 0x19094]
0x7fa4  4  lea  r9, [r14 + rbx*8]
0x7fa8  4  lea  rbx, [r14 + rdi*8]
0x7fac  3  mov  rsi, r14
0x7faf  3  mov  rcx, rbx
0x7fb2  3  sub  rcx, r9
0x7fb5  4  add  rcx, 7
0x7fb9  4  shr  rcx, 3
0x7fbd  3  cmp  r9, rbx
0x7fc0  4  cmova  rcx, rbp
0x7fc4  3  test  rcx, rcx
0x7fc7  2  je  0x7fd9
0x7fc9  3  mov  rax, r10
0x7fcc  3  mov  rdi, r9
0x7fcf  3  rep stosq  qword ptr [rdi], rax
0x7fd2  7  mov  r10, qword ptr [rip + 0x1905f]
0x7fd9  6  mov  r8d, 0x40
0x7fdf  4  lea  rdi, [r9 + 8]
0x7fe3  3  mov  ecx, r8d
0x7fe6  3  mov  eax, r10d
0x7fe9  3  and  eax, 0x3f
0x7fec  2  sub  ecx, eax
0x7fee  4  mov  rax, qword ptr [r15 + 8]
0x7ff2  3  mov  rdx, qword ptr [rax]
0x7ff5  3  mov  eax, r8d
0x7ff8  3  ror  rdx, cl
0x7ffb  3  xor  rdx, r10
0x7ffe  3  mov  qword ptr [r9], rdx
0x8001  7  mov  rdx, qword ptr [rip + 0x19030]
0x8008  2  mov  ecx, edx
0x800a  3  and  ecx, 0x3f
0x800d  2  sub  eax, ecx
0x800f  2  mov  cl, al
0x8011  3  mov  rax, qword ptr [r15]
0x8014  3  ror  rsi, cl
0x8017  3  xor  rsi, rdx
0x801a  3  mov  rcx, qword ptr [rax]
0x801d  3  mov  qword ptr [rcx], rsi
0x8020  3  mov  ecx, r8d
0x8023  7  mov  rdx, qword ptr [rip + 0x1900e]
0x802a  2  mov  eax, edx
0x802c  3  and  eax, 0x3f
0x802f  2  sub  ecx, eax
0x8031  3  mov  rax, qword ptr [r15]
0x8034  3  ror  rdi, cl
0x8037  3  xor  rdi, rdx
0x803a  3  mov  rdx, qword ptr [rax]
0x803d  4  mov  qword ptr [rdx + 8], rdi
0x8041  7  mov  rdx, qword ptr [rip + 0x18ff0]
0x8048  2  mov  eax, edx
0x804a  3  and  eax, 0x3f
0x804d  3  sub  r8d, eax
0x8050  3  mov  rax, qword ptr [r15]
0x8053  3  mov  cl, r8b
0x8056  3  ror  rbx, cl
0x8059  3  xor  rbx, rdx
0x805c  3  mov  rcx, qword ptr [rax]
0x805f  2  xor  eax, eax
0x8061  4  mov  qword ptr [rcx + 0x10], rbx
0x8065  2  jmp  0x806a
0x8067  3  or  eax, 0xffffffff
0x806a  5  mov  rbx, qword ptr [rsp + 0x40]
0x806f  5  mov  rbp, qword ptr [rsp + 0x48]
0x8074  5  mov  rsi, qword ptr [rsp + 0x50]
0x8079  4  add  rsp, 0x20
0x807d  2  pop  r15
0x807f  2  pop  r14
0x8081  1  pop  rdi
0x8082  1  ret  
0x8083  5  mov  qword ptr [rsp + 8], rbx
0x8088  5  mov  qword ptr [rsp + 0x10], rbp
0x808d  5  mov  qword ptr [rsp + 0x18], rsi
0x8092  1  push  rdi
0x8093  2  push  r14
0x8095  2  push  r15
0x8097  4  sub  rsp, 0x20
0x809b  3  mov  rax, qword ptr [rcx]
0x809e  3  mov  rsi, rcx
0x80a1  3  mov  rdx, qword ptr [rax]
0x80a4  3  test  rdx, rdx
0x80a7  2  jne  0x80b1
0x80a9  3  or  eax, 0xffffffff
0x80ac  5  jmp  0x818a
0x80b1  7  mov  r8, qword ptr [rip + 0x18f80]
0x80b8  3  mov  ecx, r8d
0x80bb  3  mov  rdi, r8
0x80be  3  xor  rdi, qword ptr [rdx]
0x80c1  3  and  ecx, 0x3f
0x80c4  3  ror  rdi, cl
0x80c7  3  mov  rbx, r8
0x80ca  4  xor  rbx, qword ptr [rdx + 8]
0x80ce  3  ror  rbx, cl
0x80d1  4  lea  rax, [rdi - 1]
0x80d5  4  cmp  rax, -3
0x80d9  6  ja  0x8188
0x80df  3  mov  ecx, r8d
0x80e2  3  mov  r14, r8
0x80e5  3  and  ecx, 0x3f
0x80e8  3  mov  r15, rdi
0x80eb  3  mov  rbp, rbx
0x80ee  4  sub  rbx, 8
0x80f2  3  cmp  rbx, rdi
0x80f5  2  jb  0x8156
0x80f7  3  mov  rax, qword ptr [rbx]
0x80fa  3  cmp  rax, r14
0x80fd  2  je  0x80ee
0x80ff  3  xor  rax, r8
0x8102  3  mov  qword ptr [rbx], r14
0x8105  3  ror  rax, cl
0x8108  10  movabs  r10, 0x85f13e9656da4870
0x8112  6  call  qword ptr [rip + 0xe158]
0x8118  7  mov  r8, qword ptr [rip + 0x18f19]
0x811f  3  mov  rax, qword ptr [rsi]
0x8122  3  mov  ecx, r8d
0x8125  3  and  ecx, 0x3f
0x8128  3  mov  r9, r8
0x812b  3  mov  rdx, qword ptr [rax]
0x812e  3  mov  rax, r8
0x8131  3  xor  r9, qword ptr [rdx]
0x8134  4  xor  rax, qword ptr [rdx + 8]
0x8138  3  ror  r9, cl
0x813b  3  ror  rax, cl
0x813e  3  cmp  r9, r15
0x8141  2  jne  0x8148
0x8143  3  cmp  rax, rbp
0x8146  2  je  0x80ee
0x8148  3  mov  r15, r9
0x814b  3  mov  rdi, r9
0x814e  3  mov  rbp, rax
0x8151  3  mov  rbx, rax
0x8154  2  jmp  0x80ee
0x8156  4  cmp  rdi, -1
0x815a  2  je  0x816b
0x815c  3  mov  rcx, rdi
0x815f  5  call  0x8b07
0x8164  7  mov  r8, qword ptr [rip + 0x18ecd]
0x816b  3  mov  rax, qword ptr [rsi]
0x816e  3  mov  rcx, qword ptr [rax]
0x8171  3  mov  qword ptr [rcx], r8
0x8174  3  mov  rax, qword ptr [rsi]
0x8177  3  mov  rcx, qword ptr [rax]
0x817a  4  mov  qword ptr [rcx + 8], r8
0x817e  3  mov  rax, qword ptr [rsi]
0x8181  3  mov  rcx, qword ptr [rax]
0x8184  4  mov  qword ptr [rcx + 0x10], r8
0x8188  2  xor  eax, eax
0x818a  5  mov  rbx, qword ptr [rsp + 0x40]
0x818f  5  mov  rbp, qword ptr [rsp + 0x48]
0x8194  5  mov  rsi, qword ptr [rsp + 0x50]
0x8199  4  add  rsp, 0x20
0x819d  2  pop  r15
0x819f  2  pop  r14
0x81a1  1  pop  rdi
0x81a2  1  ret  
0x81a3  3  mov  rdx, rcx
0x81a6  7  lea  rcx, [rip + 0x19c93]
0x81ad  5  jmp  0x821f
0x81b2  1  int3  
0x81b3  3  mov  r11, rsp
0x81b6  4  mov  qword ptr [r11 + 8], rcx
0x81ba  4  sub  rsp, 0x38
0x81be  8  mov  qword ptr [r11 - 0x10], 0xfffffffffffffffe
0x81c6  4  lea  rax, [r11 + 8]
0x81ca  4  mov  qword ptr [r11 - 0x18], rax
0x81ce  5  mov  eax, 2
0x81d3  4  mov  dword ptr [rsp + 0x50], eax
0x81d7  4  mov  dword ptr [rsp + 0x58], eax
0x81db  4  lea  r9, [r11 + 0x18]
0x81df  4  lea  r8, [r11 - 0x18]
0x81e3  4  lea  rdx, [r11 + 0x20]
0x81e7  4  lea  rcx, [r11 + 0x10]
0x81eb  5  call  0x7e97
0x81f0  1  nop  
0x81f1  4  add  rsp, 0x38
0x81f5  1  ret  
0x81f6  1  int3  
0x81f7  3  test  rcx, rcx
0x81fa  2  jne  0x8200
0x81fc  3  or  eax, 0xffffffff
0x81ff  1  ret  
0x8200  4  mov  rax, qword ptr [rcx + 0x10]
0x8204  3  cmp  qword ptr [rcx], rax
0x8207  2  jne  0x821b
0x8209  7  mov  rax, qword ptr [rip + 0x18e28]
0x8210  3  mov  qword ptr [rcx], rax
0x8213  4  mov  qword ptr [rcx + 8], rax
0x8217  4  mov  qword ptr [rcx + 0x10], rax
0x821b  2  xor  eax, eax
0x821d  1  ret  
0x821e  1  int3  
0x821f  5  mov  qword ptr [rsp + 0x10], rdx
0x8224  5  mov  qword ptr [rsp + 8], rcx
0x8229  1  push  rbp
0x822a  3  mov  rbp, rsp
0x822d  4  sub  rsp, 0x40
0x8231  4  lea  rax, [rbp + 0x10]
0x8235  4  mov  qword ptr [rbp - 0x18], rax
0x8239  4  lea  r9, [rbp + 0x28]
0x823d  4  lea  rax, [rbp + 0x18]
0x8241  4  mov  qword ptr [rbp - 0x10], rax
0x8245  4  lea  r8, [rbp - 0x18]
0x8249  5  mov  eax, 2
0x824e  4  lea  rdx, [rbp - 0x20]
0x8252  4  lea  rcx, [rbp + 0x20]
0x8256  3  mov  dword ptr [rbp + 0x28], eax
0x8259  3  mov  dword ptr [rbp - 0x20], eax
0x825c  5  call  0x7e5b
0x8261  4  add  rsp, 0x40
0x8265  1  pop  rbp
0x8266  1  ret  
0x8267  7  lea  rax, [rip + 0x18f52]
0x826e  7  mov  qword ptr [rip + 0x1a1e3], rax
0x8275  2  mov  al, 1
0x8277  1  ret  
0x8278  1  int3  
0x8279  1  int3  
0x827a  1  int3  
0x827b  4  sub  rsp, 0x28
0x827f  7  lea  rcx, [rip + 0x19bba]
0x8286  5  call  0x81f7
0x828b  7  lea  rcx, [rip + 0x19bc6]
0x8292  5  call  0x81f7
0x8297  2  mov  al, 1
0x8299  4  add  rsp, 0x28
0x829d  1  ret  
0x829e  1  int3  
0x829f  4  sub  rsp, 0x28
0x82a3  5  call  0x7853
0x82a8  2  mov  al, 1
0x82aa  4  add  rsp, 0x28
0x82ae  1  ret  
0x82af  2  push  rbx
0x82b1  4  sub  rsp, 0x20
0x82b5  7  mov  rbx, qword ptr [rip + 0x18d7c]
0x82bc  3  mov  rcx, rbx
0x82bf  5  call  0x87c3
0x82c4  3  mov  rcx, rbx
0x82c7  5  call  0xe36b
0x82cc  3  mov  rcx, rbx
0x82cf  5  call  0xe463
0x82d4  3  mov  rcx, rbx
0x82d7  5  call  0x711b
0x82dc  3  mov  rcx, rbx
0x82df  5  call  0x7c0f
0x82e4  2  mov  al, 1
0x82e6  4  add  rsp, 0x20
0x82ea  1  pop  rbx
0x82eb  1  ret  
0x82ec  1  int3  
0x82ed  1  int3  
0x82ee  1  int3  
0x82ef  2  xor  ecx, ecx
0x82f1  5  jmp  0x1d23
0x82f6  1  int3  
0x82f7  2  push  rbx
0x82f9  4  sub  rsp, 0x20
0x82fd  7  mov  rcx, qword ptr [rip + 0x1a16c]
0x8304  3  or  eax, 0xffffffff
0x8307  4  lock xadd  dword ptr [rcx], eax
0x830b  3  cmp  eax, 1
0x830e  2  jne  0x832f
0x8310  7  mov  rcx, qword ptr [rip + 0x1a159]
0x8317  7  lea  rbx, [rip + 0x19012]
0x831e  3  cmp  rcx, rbx
0x8321  2  je  0x832f
0x8323  5  call  0x8b07
0x8328  7  mov  qword ptr [rip + 0x1a141], rbx
0x832f  2  mov  al, 1
0x8331  4  add  rsp, 0x20
0x8335  1  pop  rbx
0x8336  1  ret  
0x8337  4  sub  rsp, 0x28
0x833b  7  mov  rcx, qword ptr [rip + 0x1a106]
0x8342  5  call  0x8b07
0x8347  7  mov  rcx, qword ptr [rip + 0x1a102]
0x834e  8  and  qword ptr [rip + 0x1a0f2], 0
0x8356  5  call  0x8b07
0x835b  7  mov  rcx, qword ptr [rip + 0x19aae]
0x8362  8  and  qword ptr [rip + 0x1a0e6], 0
0x836a  5  call  0x8b07
0x836f  7  mov  rcx, qword ptr [rip + 0x19aa2]
0x8376  8  and  qword ptr [rip + 0x19a92], 0
0x837e  5  call  0x8b07
0x8383  8  and  qword ptr [rip + 0x19a8d], 0
0x838b  2  mov  al, 1
0x838d  4  add  rsp, 0x28
0x8391  1  ret  
0x8392  1  int3  
0x8393  7  lea  rdx, [rip + 0xf376]
0x839a  7  lea  rcx, [rip + 0xf26f]
0x83a1  5  jmp  0xe28f
0x83a6  1  int3  
0x83a7  4  sub  rsp, 0x28
0x83ab  2  test  cl, cl
0x83ad  2  je  0x83c5
0x83af  8  cmp  qword ptr [rip + 0x198f1], 0
0x83b7  2  je  0x83be
0x83b9  5  call  0x94bf
0x83be  2  mov  al, 1
0x83c0  4  add  rsp, 0x28
0x83c4  1  ret  
0x83c5  7  lea  rdx, [rip + 0xf344]
0x83cc  7  lea  rcx, [rip + 0xf23d]
0x83d3  4  add  rsp, 0x28
0x83d7  5  jmp  0xe323
0x83dc  1  int3  
0x83dd  1  int3  
0x83de  1  int3  
0x83df  4  sub  rsp, 0x28
0x83e3  5  call  0xb227
0x83e8  4  mov  rax, qword ptr [rax + 0x18]
0x83ec  3  test  rax, rax
0x83ef  2  je  0x8403
0x83f1  10  movabs  r10, 0x85f13e9656da4870
0x83fb  6  call  qword ptr [rip + 0xde6f]
0x8401  2  jmp  0x8403
0x8403  5  call  0x8487
0x8408  1  nop  
0x8409  1  int3  
0x840a  1  int3  
0x840b  8  mov  dword ptr [rsp + 0x10], 0
0x8413  4  mov  eax, dword ptr [rsp + 0x10]
0x8417  5  jmp  0x8b07
0x841c  1  int3  
0x841d  1  int3  
0x841e  1  int3  
0x841f  5  jmp  0x977f
0x8424  1  int3  
0x8425  1  int3  
0x8426  1  int3  
0x8427  2  push  rbx
0x8429  4  sub  rsp, 0x20
0x842d  2  xor  ebx, ebx
0x842f  3  test  rcx, rcx
0x8432  2  je  0x8440
0x8434  3  test  rdx, rdx
0x8437  2  je  0x8440
0x8439  3  test  r8, r8
0x843c  2  jne  0x8459
0x843e  2  mov  byte ptr [rcx], bl
0x8440  5  call  0x8a6f
0x8445  5  mov  ebx, 0x16
0x844a  2  mov  dword ptr [rax], ebx
0x844c  5  call  0x8933
0x8451  2  mov  eax, ebx
0x8453  4  add  rsp, 0x20
0x8457  1  pop  rbx
0x8458  1  ret  
0x8459  3  mov  r9, rcx
0x845c  3  sub  r8, rcx
0x845f  4  mov  al, byte ptr [r8 + r9]
0x8463  3  mov  byte ptr [r9], al
0x8466  3  inc  r9
0x8469  2  test  al, al
0x846b  2  je  0x8451
0x846d  4  sub  rdx, 1
0x8471  2  jne  0x845f
0x8473  3  test  rdx, rdx
0x8476  2  jne  0x8451
0x8478  2  mov  byte ptr [rcx], bl
0x847a  5  call  0x8a6f
0x847f  5  mov  ebx, 0x22
0x8484  2  jmp  0x844a
0x8486  1  int3  
0x8487  4  sub  rsp, 0x28
0x848b  5  call  0xe433
0x8490  3  test  rax, rax
0x8493  2  je  0x849f
0x8495  5  mov  ecx, 0x16
0x849a  5  call  0xe483
0x849f  7  test  byte ptr [rip + 0x18cb2], 2
0x84a6  2  je  0x84d2
0x84a8  5  mov  ecx, 0x17
0x84ad  6  call  qword ptr [rip + 0xdbad]
0x84b3  2  test  eax, eax
0x84b5  2  je  0x84be
0x84b7  5  mov  ecx, 7
0x84bc  2  int  0x29
0x84be  6  mov  r8d, 1
0x84c4  5  mov  edx, 0x40000015
0x84c9  4  lea  ecx, [r8 + 2]
0x84cd  5  call  0x8667
0x84d2  5  mov  ecx, 3
0x84d7  5  call  0x7c37
0x84dc  1  int3  
0x84dd  1  int3  
0x84de  1  int3  
0x84df  5  jmp  0x8a8f
0x84e4  1  int3  
0x84e5  1  int3  
0x84e6  1  int3  
0x84e7  1  int3  
0x84e8  1  int3  
0x84e9  1  int3  
0x84ea  1  int3  
0x84eb  1  int3  
0x84ec  1  int3  
0x84ed  1  int3  
0x84ee  1  int3  
0x84ef  1  int3  
0x84f0  1  int3  
0x84f1  1  int3  
0x84f2  1  int3  
0x84f3  1  int3  
0x84f4  1  int3  
0x84f5  1  int3  
0x84f6  1  int3  
0x84f7  1  int3  
0x84f8  1  int3  
0x84f9  10  nop  word ptr [rax + rax]
0x8503  3  sub  rdx, rcx
0x8506  3  test  r8, r8
0x8509  2  je  0x8575
0x850b  6  test  ecx, 7
0x8511  2  je  0x8530
0x8513  3  movzx  eax, byte ptr [rcx]
0x8516  3  cmp  al, byte ptr [rdx + rcx]
0x8519  2  jne  0x8578
0x851b  3  inc  rcx
0x851e  3  dec  r8
0x8521  2  je  0x8575
0x8523  2  test  al, al
0x8525  2  je  0x8575
0x8527  7  test  rcx, 7
0x852e  2  jne  0x8513
0x8530  10  movabs  r11, 0x8080808080808080
0x853a  10  movabs  r10, 0xfefefefefefefeff
0x8544  3  lea  eax, [rdx + rcx]
0x8547  5  and  eax, 0xfff
0x854c  5  cmp  eax, 0xff8
0x8551  2  ja  0x8513
0x8553  3  mov  rax, qword ptr [rcx]
0x8556  4  cmp  rax, qword ptr [rdx + rcx]
0x855a  2  jne  0x8513
0x855c  4  add  rcx, 8
0x8560  4  sub  r8, 8
0x8564  2  jbe  0x8575
0x8566  4  lea  r9, [r10 + rax]
0x856a  3  not  rax
0x856d  3  and  rax, r9
0x8570  3  test  r11, rax
0x8573  2  je  0x8544
0x8575  2  xor  eax, eax
0x8577  1  ret  
0x8578  3  sbb  rax, rax
0x857b  4  or  rax, 1
0x857f  1  ret  
0x8580  1  int3  
0x8581  1  int3  
0x8582  1  int3  
0x8583  3  test  r8, r8
0x8586  2  jne  0x85a0
0x8588  2  xor  eax, eax
0x858a  1  ret  
0x858b  3  movzx  eax, word ptr [rcx]
0x858e  3  test  ax, ax
0x8591  2  je  0x85a6
0x8593  3  cmp  ax, word ptr [rdx]
0x8596  2  jne  0x85a6
0x8598  4  add  rcx, 2
0x859c  4  add  rdx, 2
0x85a0  4  sub  r8, 1
0x85a4  2  jne  0x858b
0x85a6  3  movzx  eax, word ptr [rcx]
0x85a9  3  movzx  ecx, word ptr [rdx]
0x85ac  2  sub  eax, ecx
0x85ae  1  ret  
0x85af  5  mov  qword ptr [rsp + 0x10], rbx
0x85b4  5  mov  qword ptr [rsp + 0x18], rsi
0x85b9  1  push  rdi
0x85ba  4  sub  rsp, 0x20
0x85be  3  mov  rsi, qword ptr [rcx]
0x85c1  2  xor  edi, edi
0x85c3  3  mov  rbx, rcx
0x85c6  3  test  rsi, rsi
0x85c9  2  jne  0x8606
0x85cb  6  call  qword ptr [rip + 0xdaaf]
0x85d1  4  mov  dword ptr [rsp + 0x30], eax
0x85d5  4  cmp  byte ptr [rbx + 0x10], dil
0x85d9  2  jne  0x85e5
0x85db  4  mov  qword ptr [rbx + 8], rdi
0x85df  4  mov  byte ptr [rbx + 0x10], 1
0x85e3  2  jmp  0x85e9
0x85e5  4  mov  rdi, qword ptr [rbx + 8]
0x85e9  3  mov  rdx, rdi
0x85ec  5  lea  rcx, [rsp + 0x30]
0x85f1  5  call  0xb467
0x85f6  4  mov  ecx, dword ptr [rsp + 0x30]
0x85fa  3  mov  rsi, rax
0x85fd  3  mov  qword ptr [rbx], rax
0x8600  6  call  qword ptr [rip + 0xda82]
0x8606  5  mov  rbx, qword ptr [rsp + 0x38]
0x860b  3  mov  rax, rsi
0x860e  5  mov  rsi, qword ptr [rsp + 0x40]
0x8613  4  add  rsp, 0x20
0x8617  1  pop  rdi
0x8618  1  ret  
0x8619  1  int3  
0x861a  1  int3  
0x861b  5  mov  qword ptr [rsp + 8], rbx
0x8620  5  mov  qword ptr [rsp + 0x10], rsi
0x8625  1  push  rdi
0x8626  4  sub  rsp, 0x20
0x862a  2  xor  ebx, ebx
0x862c  3  mov  rdi, rdx
0x862f  3  mov  rsi, rcx
0x8632  3  cmp  byte ptr [rdx + 0x10], bl
0x8635  2  jne  0x864f
0x8637  6  call  qword ptr [rip + 0xda43]
0x863d  2  mov  ecx, eax
0x863f  4  mov  qword ptr [rdi + 8], rbx
0x8643  4  mov  byte ptr [rdi + 0x10], 1
0x8647  6  call  qword ptr [rip + 0xda3b]
0x864d  2  jmp  0x8653
0x864f  4  mov  rbx, qword ptr [rdx + 8]
0x8653  4  lea  rax, [rsi + rbx*8]
0x8657  5  mov  rbx, qword ptr [rsp + 0x30]
0x865c  5  mov  rsi, qword ptr [rsp + 0x38]
0x8661  4  add  rsp, 0x20
0x8665  1  pop  rdi
0x8666  1  ret  
0x8667  5  mov  qword ptr [rsp + 0x10], rbx
0x866c  5  mov  qword ptr [rsp + 0x18], rsi
0x8671  1  push  rbp
0x8672  1  push  rdi
0x8673  2  push  r14
0x8675  8  lea  rbp, [rsp - 0x4f0]
0x867d  7  sub  rsp, 0x5f0
0x8684  7  mov  rax, qword ptr [rip + 0x189ad]
0x868b  3  xor  rax, rsp
0x868e  7  mov  qword ptr [rbp + 0x4e0], rax
0x8695  3  mov  edi, r8d
0x8698  2  mov  esi, edx
0x869a  2  mov  ebx, ecx
0x869c  3  cmp  ecx, -1
0x869f  2  je  0x86a6
0x86a1  5  call  0x16b7
0x86a6  2  xor  edx, edx
0x86a8  5  lea  rcx, [rsp + 0x70]
0x86ad  6  mov  r8d, 0x98
0x86b3  5  call  0x1f03
0x86b8  2  xor  edx, edx
0x86ba  4  lea  rcx, [rbp + 0x10]
0x86be  6  mov  r8d, 0x4d0
0x86c4  5  call  0x1f03
0x86c9  5  lea  rax, [rsp + 0x70]
0x86ce  5  mov  qword ptr [rsp + 0x48], rax
0x86d3  4  lea  rcx, [rbp + 0x10]
0x86d7  4  lea  rax, [rbp + 0x10]
0x86db  5  mov  qword ptr [rsp + 0x50], rax
0x86e0  6  call  qword ptr [rip + 0xd942]
0x86e6  7  mov  r14, qword ptr [rbp + 0x108]
0x86ed  5  lea  rdx, [rsp + 0x40]
0x86f2  3  mov  rcx, r14
0x86f5  3  xor  r8d, r8d
0x86f8  6  call  qword ptr [rip + 0xd932]
0x86fe  3  test  rax, rax
0x8701  2  je  0x8739
0x8703  6  and  qword ptr [rsp + 0x38], 0
0x8709  5  lea  rcx, [rsp + 0x58]
0x870e  5  mov  rdx, qword ptr [rsp + 0x40]
0x8713  3  mov  r9, rax
0x8716  5  mov  qword ptr [rsp + 0x30], rcx
0x871b  3  mov  r8, r14
0x871e  5  lea  rcx, [rsp + 0x60]
0x8723  5  mov  qword ptr [rsp + 0x28], rcx
0x8728  4  lea  rcx, [rbp + 0x10]
0x872c  5  mov  qword ptr [rsp + 0x20], rcx
0x8731  2  xor  ecx, ecx
0x8733  6  call  qword ptr [rip + 0xd8ff]
0x8739  7  mov  rax, qword ptr [rbp + 0x508]
0x8740  7  mov  qword ptr [rbp + 0x108], rax
0x8747  7  lea  rax, [rbp + 0x508]
0x874e  4  add  rax, 8
0x8752  4  mov  dword ptr [rsp + 0x70], esi
0x8756  7  mov  qword ptr [rbp + 0xa8], rax
0x875d  7  mov  rax, qword ptr [rbp + 0x508]
0x8764  4  mov  qword ptr [rbp - 0x80], rax
0x8768  4  mov  dword ptr [rsp + 0x74], edi
0x876c  6  call  qword ptr [rip + 0xd8ce]
0x8772  2  xor  ecx, ecx
0x8774  2  mov  edi, eax
0x8776  6  call  qword ptr [rip + 0xd8d4]
0x877c  5  lea  rcx, [rsp + 0x48]
0x8781  6  call  qword ptr [rip + 0xd8c1]
0x8787  2  test  eax, eax
0x8789  2  jne  0x879b
0x878b  2  test  edi, edi
0x878d  2  jne  0x879b
0x878f  3  cmp  ebx, -1
0x8792  2  je  0x879b
0x8794  2  mov  ecx, ebx
0x8796  5  call  0x16b7
0x879b  7  mov  rcx, qword ptr [rbp + 0x4e0]
0x87a2  3  xor  rcx, rsp
0x87a5  5  call  0x14c73
0x87aa  8  lea  r11, [rsp + 0x5f0]
0x87b2  4  mov  rbx, qword ptr [r11 + 0x28]
0x87b6  4  mov  rsi, qword ptr [r11 + 0x30]
0x87ba  3  mov  rsp, r11
0x87bd  2  pop  r14
0x87bf  1  pop  rdi
0x87c0  1  pop  rbp
0x87c1  1  ret  
0x87c2  1  int3  
0x87c3  7  mov  qword ptr [rip + 0x196a6], rcx
0x87ca  1  ret  
0x87cb  5  mov  qword ptr [rsp + 8], rbx
0x87d0  1  push  rbp
0x87d1  3  mov  rbp, rsp
0x87d4  4  sub  rsp, 0x70
0x87d8  5  and  qword ptr [rbp - 0x40], 0
0x87dd  7  cmp  dword ptr [rip + 0x1964c], 0
0x87e4  4  mov  byte ptr [rbp - 0x30], 0
0x87e8  4  mov  byte ptr [rbp - 0x18], 0
0x87ec  4  mov  byte ptr [rbp - 0x10], 0
0x87f0  4  mov  byte ptr [rbp - 8], 0
0x87f4  2  jne  0x8806
0x87f6  7  movups  xmm0, xmmword ptr [rip + 0x18b1b]
0x87fd  4  mov  byte ptr [rbp - 0x18], 1
0x8801  5  movdqu  xmmword ptr [rbp - 0x28], xmm0
0x8806  4  lea  rax, [rbp - 0x40]
0x880a  5  mov  qword ptr [rsp + 0x28], rax
0x880f  4  mov  rax, qword ptr [rbp + 0x30]
0x8813  5  mov  qword ptr [rsp + 0x20], rax
0x8818  5  call  0x8867
0x881d  4  cmp  byte ptr [rbp - 0x18], 2
0x8821  2  jne  0x882e
0x8823  4  mov  rax, qword ptr [rbp - 0x40]
0x8827  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0x882e  4  cmp  byte ptr [rbp - 0x10], 0
0x8832  2  je  0x8843
0x8834  3  mov  ebx, dword ptr [rbp - 0x14]
0x8837  4  lea  rcx, [rbp - 0x40]
0x883b  5  call  0x5d13
0x8840  3  mov  dword ptr [rax + 0x20], ebx
0x8843  4  cmp  byte ptr [rbp - 8], 0
0x8847  2  je  0x8858
0x8849  3  mov  ebx, dword ptr [rbp - 0xc]
0x884c  4  lea  rcx, [rbp - 0x40]
0x8850  5  call  0x5d13
0x8855  3  mov  dword ptr [rax + 0x24], ebx
0x8858  8  mov  rbx, qword ptr [rsp + 0x80]
0x8860  4  add  rsp, 0x70
0x8864  1  pop  rbp
0x8865  1  ret  
0x8866  1  int3  
0x8867  5  mov  qword ptr [rsp + 8], rbx
0x886c  5  mov  qword ptr [rsp + 0x10], rbp
0x8871  5  mov  qword ptr [rsp + 0x18], rsi
0x8876  1  push  rdi
0x8877  4  sub  rsp, 0x30
0x887b  3  mov  rbp, rcx
0x887e  3  mov  ebx, r9d
0x8881  5  mov  rcx, qword ptr [rsp + 0x68]
0x8886  3  mov  rdi, r8
0x8889  3  mov  rsi, rdx
0x888c  5  call  0x85af
0x8891  3  test  rax, rax
0x8894  2  je  0x88dd
0x8896  7  mov  rax, qword ptr [rax + 0x3b8]
0x889d  3  test  rax, rax
0x88a0  2  je  0x88dd
0x88a2  10  movabs  r10, 0xd6bc1f4834572a70
0x88ac  5  mov  rcx, qword ptr [rsp + 0x60]
0x88b1  3  mov  rdx, rsi
0x88b4  5  mov  qword ptr [rsp + 0x20], rcx
0x88b9  3  mov  r8, rdi
0x88bc  3  mov  rcx, rbp
0x88bf  3  mov  r9d, ebx
0x88c2  6  call  qword ptr [rip + 0xd9a8]
0x88c8  5  mov  rbx, qword ptr [rsp + 0x40]
0x88cd  5  mov  rbp, qword ptr [rsp + 0x48]
0x88d2  5  mov  rsi, qword ptr [rsp + 0x50]
0x88d7  4  add  rsp, 0x30
0x88db  1  pop  rdi
0x88dc  1  ret  
0x88dd  5  mov  rdx, qword ptr [rsp + 0x68]
0x88e2  7  lea  rcx, [rip + 0x19587]
0x88e9  5  call  0x861b
0x88ee  3  mov  r11, qword ptr [rax]
0x88f1  7  mov  rax, qword ptr [rip + 0x18740]
0x88f8  3  xor  r11, rax
0x88fb  2  mov  ecx, eax
0x88fd  3  and  ecx, 0x3f
0x8900  3  ror  r11, cl
0x8903  3  test  r11, r11
0x8906  2  je  0x8917
0x8908  10  movabs  r10, 0xd6bc1f4834572a70
0x8912  3  mov  rax, r11
0x8915  2  jmp  0x88ac
0x8917  5  mov  rax, qword ptr [rsp + 0x60]
0x891c  3  mov  r9d, ebx
0x891f  3  mov  r8, rdi
0x8922  5  mov  qword ptr [rsp + 0x20], rax
0x8927  3  mov  rdx, rsi
0x892a  3  mov  rcx, rbp
0x892d  5  call  0x8953
0x8932  1  int3  
0x8933  4  sub  rsp, 0x38
0x8937  6  and  qword ptr [rsp + 0x20], 0
0x893d  3  xor  r9d, r9d
0x8940  3  xor  r8d, r8d
0x8943  2  xor  edx, edx
0x8945  2  xor  ecx, ecx
0x8947  5  call  0x87cb
0x894c  4  add  rsp, 0x38
0x8950  1  ret  
0x8951  1  int3  
0x8952  1  int3  
0x8953  4  sub  rsp, 0x28
0x8957  5  mov  ecx, 0x17
0x895c  6  call  qword ptr [rip + 0xd6fe]
0x8962  2  test  eax, eax
0x8964  2  je  0x896d
0x8966  5  mov  ecx, 5
0x896b  2  int  0x29
0x896d  6  mov  r8d, 1
0x8973  5  mov  edx, 0xc0000417
0x8978  4  lea  ecx, [r8 + 1]
0x897c  5  call  0x8667
0x8981  6  call  qword ptr [rip + 0xd791]
0x8987  3  mov  rcx, rax
0x898a  5  mov  edx, 0xc0000417
0x898f  4  add  rsp, 0x28
0x8993  6  jmp  qword ptr [rip + 0xd78e]
0x899a  1  int3  
0x899b  2  xor  eax, eax
0x899d  7  lea  r9, [rip + 0xed6c]
0x89a4  3  mov  rdx, r9
0x89a7  4  lea  r8d, [rax + 8]
0x89ab  2  cmp  ecx, dword ptr [rdx]
0x89ad  2  je  0x89da
0x89af  2  inc  eax
0x89b1  3  add  rdx, r8
0x89b4  3  cmp  eax, 0x2d
0x89b7  2  jb  0x89ab
0x89b9  3  lea  eax, [rcx - 0x13]
0x89bc  3  cmp  eax, 0x11
0x89bf  2  ja  0x89c7
0x89c1  5  mov  eax, 0xd
0x89c6  1  ret  
0x89c7  6  add  ecx, 0xffffff44
0x89cd  5  mov  eax, 0x16
0x89d2  3  cmp  ecx, 0xe
0x89d5  4  cmovbe  eax, r8d
0x89d9  1  ret  
0x89da  5  mov  eax, dword ptr [r9 + rax*8 + 4]
0x89df  1  ret  
0x89e0  1  int3  
0x89e1  1  int3  
0x89e2  1  int3  
0x89e3  2  push  rbx
0x89e5  4  sub  rsp, 0x20
0x89e9  2  mov  ebx, ecx
0x89eb  5  call  0xb39f
0x89f0  3  test  rax, rax
0x89f3  2  jne  0x89fe
0x89f5  7  lea  rax, [rip + 0x18768]
0x89fc  2  jmp  0x8a02
0x89fe  4  add  rax, 0x24
0x8a02  2  mov  ecx, ebx
0x8a04  2  mov  dword ptr [rax], ebx
0x8a06  5  call  0x899b
0x8a0b  2  mov  ebx, eax
0x8a0d  5  call  0xb39f
0x8a12  7  lea  rcx, [rip + 0x18747]
0x8a19  3  test  rax, rax
0x8a1c  2  je  0x8a22
0x8a1e  4  lea  rcx, [rax + 0x20]
0x8a22  2  mov  dword ptr [rcx], ebx
0x8a24  4  add  rsp, 0x20
0x8a28  1  pop  rbx
0x8a29  1  ret  
0x8a2a  1  int3  
0x8a2b  2  push  rbx
0x8a2d  4  sub  rsp, 0x20
0x8a31  3  mov  rbx, rdx
0x8a34  4  mov  byte ptr [rdx + 0x38], 1
0x8a38  3  mov  dword ptr [rdx + 0x34], ecx
0x8a3b  5  call  0x899b
0x8a40  3  mov  dword ptr [rbx + 0x2c], eax
0x8a43  4  mov  byte ptr [rbx + 0x30], 1
0x8a47  4  add  rsp, 0x20
0x8a4b  1  pop  rbx
0x8a4c  1  ret  
0x8a4d  1  int3  
0x8a4e  1  int3  
0x8a4f  4  sub  rsp, 0x28
0x8a53  5  call  0xb39f
0x8a58  3  test  rax, rax
0x8a5b  2  jne  0x8a66
0x8a5d  7  lea  rax, [rip + 0x18700]
0x8a64  2  jmp  0x8a6a
0x8a66  4  add  rax, 0x24
0x8a6a  4  add  rsp, 0x28
0x8a6e  1  ret  
0x8a6f  4  sub  rsp, 0x28
0x8a73  5  call  0xb39f
0x8a78  3  test  rax, rax
0x8a7b  2  jne  0x8a86
0x8a7d  7  lea  rax, [rip + 0x186dc]
0x8a84  2  jmp  0x8a8a
0x8a86  4  add  rax, 0x20
0x8a8a  4  add  rsp, 0x28
0x8a8e  1  ret  
0x8a8f  2  push  rbx
0x8a91  4  sub  rsp, 0x20
0x8a95  3  mov  r8, rdx
0x8a98  3  mov  rbx, rcx
0x8a9b  3  test  rcx, rcx
0x8a9e  2  je  0x8aae
0x8aa0  2  xor  edx, edx
0x8aa2  4  lea  rax, [rdx - 0x20]
0x8aa6  3  div  rbx
0x8aa9  3  cmp  rax, r8
0x8aac  2  jb  0x8af1
0x8aae  4  imul  rbx, r8
0x8ab2  5  mov  eax, 1
0x8ab7  3  test  rbx, rbx
0x8aba  4  cmove  rbx, rax
0x8abe  2  jmp  0x8ad5
0x8ac0  5  call  0x7e1f
0x8ac5  2  test  eax, eax
0x8ac7  2  je  0x8af1
0x8ac9  3  mov  rcx, rbx
0x8acc  5  call  0xe373
0x8ad1  2  test  eax, eax
0x8ad3  2  je  0x8af1
0x8ad5  7  mov  rcx, qword ptr [rip + 0x19be4]
0x8adc  3  mov  r8, rbx
0x8adf  5  mov  edx, 8
0x8ae4  6  call  qword ptr [rip + 0xd65e]
0x8aea  3  test  rax, rax
0x8aed  2  je  0x8ac0
0x8aef  2  jmp  0x8afe
0x8af1  5  call  0x8a6f
0x8af6  6  mov  dword ptr [rax], 0xc
0x8afc  2  xor  eax, eax
0x8afe  4  add  rsp, 0x20
0x8b02  1  pop  rbx
0x8b03  1  ret  
0x8b04  1  int3  
0x8b05  1  int3  
0x8b06  1  int3  
0x8b07  3  test  rcx, rcx
0x8b0a  2  je  0x8b42
0x8b0c  1  push  rbx
0x8b0d  4  sub  rsp, 0x20
0x8b11  3  mov  r8, rcx
0x8b14  2  xor  edx, edx
0x8b16  7  mov  rcx, qword ptr [rip + 0x19ba3]
0x8b1d  6  call  qword ptr [rip + 0xd62d]
0x8b23  2  test  eax, eax
0x8b25  2  jne  0x8b3d
0x8b27  6  call  qword ptr [rip + 0xd553]
0x8b2d  2  mov  ecx, eax
0x8b2f  5  call  0x899b
0x8b34  2  mov  ebx, eax
0x8b36  5  call  0x8a6f
0x8b3b  2  mov  dword ptr [rax], ebx
0x8b3d  4  add  rsp, 0x20
0x8b41  1  pop  rbx
0x8b42  1  ret  
0x8b43  5  mov  qword ptr [rsp + 8], rbx
0x8b48  5  mov  qword ptr [rsp + 0x10], rbp
0x8b4d  5  mov  qword ptr [rsp + 0x18], rsi
0x8b52  1  push  rdi
0x8b53  2  push  r12
0x8b55  2  push  r13
0x8b57  2  push  r14
0x8b59  2  push  r15
0x8b5b  4  sub  rsp, 0x20
0x8b5f  3  mov  r15d, ecx
0x8b62  7  lea  r14, [rip - 0x8b66]
0x8b69  4  or  rdi, 0xffffffffffffffff
0x8b6d  3  mov  r12, r9
0x8b70  3  mov  rbp, r8
0x8b73  3  mov  r13, rdx
0x8b76  8  mov  r10, qword ptr [r14 + r15*8 + 0x21f30]
0x8b7e  1  nop  
0x8b7f  7  mov  r11, qword ptr [rip + 0x184b2]
0x8b86  3  xor  r10, r11
0x8b89  3  mov  ecx, r11d
0x8b8c  3  and  ecx, 0x3f
0x8b8f  3  ror  r10, cl
0x8b92  3  cmp  r10, rdi
0x8b95  6  je  0x8c86
0x8b9b  3  test  r10, r10
0x8b9e  2  je  0x8ba8
0x8ba0  3  mov  rax, r10
0x8ba3  5  jmp  0x8c88
0x8ba8  3  cmp  r8, r12
0x8bab  6  je  0x8c6b
0x8bb1  3  mov  esi, dword ptr [rbp]
0x8bb4  8  mov  rbx, qword ptr [r14 + rsi*8 + 0x21e80]
0x8bbc  1  nop  
0x8bbd  3  test  rbx, rbx
0x8bc0  2  je  0x8bd0
0x8bc2  3  cmp  rbx, rdi
0x8bc5  6  jne  0x8cc5
0x8bcb  5  jmp  0x8c57
0x8bd0  8  mov  r14, qword ptr [r14 + rsi*8 + 0x17880]
0x8bd8  2  xor  edx, edx
0x8bda  3  mov  rcx, r14
0x8bdd  6  mov  r8d, 0x800
0x8be3  6  call  qword ptr [rip + 0xd4f7]
0x8be9  3  mov  rbx, rax
0x8bec  3  test  rax, rax
0x8bef  6  jne  0x8ca5
0x8bf5  6  call  qword ptr [rip + 0xd485]
0x8bfb  3  cmp  eax, 0x57
0x8bfe  2  jne  0x8c45
0x8c00  3  lea  ebx, [rax - 0x50]
0x8c03  3  mov  rcx, r14
0x8c06  3  mov  r8d, ebx
0x8c09  7  lea  rdx, [rip + 0xe5b8]
0x8c10  5  call  0x8583
0x8c15  2  test  eax, eax
0x8c17  2  je  0x8c45
0x8c19  3  mov  r8d, ebx
0x8c1c  7  lea  rdx, [rip + 0xf1a5]
0x8c23  3  mov  rcx, r14
0x8c26  5  call  0x8583
0x8c2b  2  test  eax, eax
0x8c2d  2  je  0x8c45
0x8c2f  3  xor  r8d, r8d
0x8c32  2  xor  edx, edx
0x8c34  3  mov  rcx, r14
0x8c37  6  call  qword ptr [rip + 0xd4a3]
0x8c3d  3  mov  rbx, rax
0x8c40  3  test  rax, rax
0x8c43  2  jne  0x8ca5
0x8c45  3  mov  rax, rdi
0x8c48  7  lea  r14, [rip - 0x8c4c]
0x8c4f  8  xchg  qword ptr [r14 + rsi*8 + 0x21e80], rax
0x8c57  4  add  rbp, 4
0x8c5b  3  cmp  rbp, r12
0x8c5e  6  jne  0x8bb1
0x8c64  7  mov  r11, qword ptr [rip + 0x183cd]
0x8c6b  3  mov  eax, r11d
0x8c6e  5  mov  ecx, 0x40
0x8c73  3  and  eax, 0x3f
0x8c76  2  sub  ecx, eax
0x8c78  3  ror  rdi, cl
0x8c7b  3  xor  rdi, r11
0x8c7e  8  xchg  qword ptr [r14 + r15*8 + 0x21f30], rdi
0x8c86  2  xor  eax, eax
0x8c88  5  mov  rbx, qword ptr [rsp + 0x50]
0x8c8d  5  mov  rbp, qword ptr [rsp + 0x58]
0x8c92  5  mov  rsi, qword ptr [rsp + 0x60]
0x8c97  4  add  rsp, 0x20
0x8c9b  2  pop  r15
0x8c9d  2  pop  r14
0x8c9f  2  pop  r13
0x8ca1  2  pop  r12
0x8ca3  1  pop  rdi
0x8ca4  1  ret  
0x8ca5  3  mov  rax, rbx
0x8ca8  7  lea  r14, [rip - 0x8cac]
0x8caf  8  xchg  qword ptr [r14 + rsi*8 + 0x21e80], rax
0x8cb7  3  test  rax, rax
0x8cba  2  je  0x8cc5
0x8cbc  3  mov  rcx, rbx
0x8cbf  6  call  qword ptr [rip + 0xd40b]
0x8cc5  3  mov  rdx, r13
0x8cc8  3  mov  rcx, rbx
0x8ccb  6  call  qword ptr [rip + 0xd407]
0x8cd1  3  test  rax, rax
0x8cd4  2  je  0x8c64
0x8cd6  7  mov  r8, qword ptr [rip + 0x1835b]
0x8cdd  5  mov  edx, 0x40
0x8ce2  3  mov  ecx, r8d
0x8ce5  3  and  ecx, 0x3f
0x8ce8  2  sub  edx, ecx
0x8cea  2  mov  cl, dl
0x8cec  3  mov  rdx, rax
0x8cef  3  ror  rdx, cl
0x8cf2  3  xor  rdx, r8
0x8cf5  8  xchg  qword ptr [r14 + r15*8 + 0x21f30], rdx
0x8cfd  2  jmp  0x8c88
0x8cff  2  push  rbx
0x8d01  4  sub  rsp, 0x20
0x8d05  3  mov  rbx, rcx
0x8d08  7  lea  r9, [rip + 0xf139]
0x8d0f  5  mov  ecx, 0x19
0x8d14  7  lea  r8, [rip + 0xf129]
0x8d1b  7  lea  rdx, [rip + 0xf126]
0x8d22  5  call  0x8b43
0x8d27  3  test  rax, rax
0x8d2a  2  je  0x8d4c
0x8d2c  10  movabs  r10, 0xbdc017da34d1c070
0x8d36  3  mov  rdx, rbx
0x8d39  7  mov  rcx, 0xfffffffffffffffa
0x8d40  4  add  rsp, 0x20
0x8d44  1  pop  rbx
0x8d45  6  jmp  qword ptr [rip + 0xd524]
0x8d4c  5  mov  eax, 0xc0000225
0x8d51  4  add  rsp, 0x20
0x8d55  1  pop  rbx
0x8d56  1  ret  
0x8d57  4  sub  rsp, 0x28
0x8d5b  7  lea  r9, [rip + 0xf07a]
0x8d62  2  xor  ecx, ecx
0x8d64  7  lea  r8, [rip + 0xf06d]
0x8d6b  7  lea  rdx, [rip + 0xf06e]
0x8d72  5  call  0x8b43
0x8d77  3  test  rax, rax
0x8d7a  2  je  0x8d91
0x8d7c  10  movabs  r10, 0xd30527475e523070
0x8d86  4  add  rsp, 0x28
0x8d8a  6  jmp  qword ptr [rip + 0xd4df]
0x8d91  5  mov  eax, 1
0x8d96  4  add  rsp, 0x28
0x8d9a  1  ret  
0x8d9b  5  mov  qword ptr [rsp + 8], rbx
0x8da0  5  mov  qword ptr [rsp + 0x10], rbp
0x8da5  5  mov  qword ptr [rsp + 0x18], rsi
0x8daa  1  push  rdi
0x8dab  4  sub  rsp, 0x50
0x8daf  3  mov  ebx, r9d
0x8db2  3  mov  rdi, r8
0x8db5  2  mov  esi, edx
0x8db7  7  lea  r9, [rip + 0xf03a]
0x8dbe  3  mov  rbp, rcx
0x8dc1  7  lea  r8, [rip + 0xf028]
0x8dc8  7  lea  rdx, [rip + 0xf029]
0x8dcf  5  mov  ecx, 1
0x8dd4  5  call  0x8b43
0x8dd9  3  mov  r11, rax
0x8ddc  3  test  rax, rax
0x8ddf  2  je  0x8e40
0x8de1  10  movabs  r10, 0xab8817f47a550870
0x8deb  8  mov  rdx, qword ptr [rsp + 0xa0]
0x8df3  3  mov  r9d, ebx
0x8df6  8  mov  rcx, qword ptr [rsp + 0x98]
0x8dfe  3  mov  r8, rdi
0x8e01  8  mov  rax, qword ptr [rsp + 0x80]
0x8e09  5  mov  qword ptr [rsp + 0x40], rdx
0x8e0e  2  mov  edx, esi
0x8e10  5  mov  qword ptr [rsp + 0x38], rcx
0x8e15  8  mov  rcx, qword ptr [rsp + 0x90]
0x8e1d  5  mov  qword ptr [rsp + 0x30], rcx
0x8e22  7  mov  ecx, dword ptr [rsp + 0x88]
0x8e29  4  mov  dword ptr [rsp + 0x28], ecx
0x8e2d  3  mov  rcx, rbp
0x8e30  5  mov  qword ptr [rsp + 0x20], rax
0x8e35  3  mov  rax, r11
0x8e38  6  call  qword ptr [rip + 0xd432]
0x8e3e  2  jmp  0x8e72
0x8e40  2  xor  edx, edx
0x8e42  3  mov  rcx, rbp
0x8e45  5  call  0x9003
0x8e4a  2  mov  ecx, eax
0x8e4c  3  mov  r9d, ebx
0x8e4f  7  mov  eax, dword ptr [rsp + 0x88]
0x8e56  3  mov  r8, rdi
0x8e59  4  mov  dword ptr [rsp + 0x28], eax
0x8e5d  2  mov  edx, esi
0x8e5f  8  mov  rax, qword ptr [rsp + 0x80]
0x8e67  5  mov  qword ptr [rsp + 0x20], rax
0x8e6c  6  call  qword ptr [rip + 0xd306]
0x8e72  5  mov  rbx, qword ptr [rsp + 0x60]
0x8e77  5  mov  rbp, qword ptr [rsp + 0x68]
0x8e7c  5  mov  rsi, qword ptr [rsp + 0x70]
0x8e81  4  add  rsp, 0x50
0x8e85  1  pop  rdi
0x8e86  1  ret  
0x8e87  6  jmp  qword ptr [rip + 0xd2ca]
0x8e8e  1  int3  
0x8e8f  6  jmp  qword ptr [rip + 0xd2da]
0x8e96  1  int3  
0x8e97  6  jmp  qword ptr [rip + 0xd2c2]
0x8e9e  1  int3  
0x8e9f  6  jmp  qword ptr [rip + 0xd2c2]
0x8ea6  1  int3  
0x8ea7  5  mov  qword ptr [rsp + 8], rbx
0x8eac  5  mov  qword ptr [rsp + 0x10], rsi
0x8eb1  1  push  rdi
0x8eb2  4  sub  rsp, 0x20
0x8eb6  3  mov  esi, r8d
0x8eb9  7  lea  r9, [rip + 0xef50]
0x8ec0  2  mov  ebx, edx
0x8ec2  7  lea  r8, [rip + 0xef3f]
0x8ec9  3  mov  rdi, rcx
0x8ecc  7  lea  rdx, [rip + 0xe365]
0x8ed3  5  mov  ecx, 0xf
0x8ed8  5  call  0x8b43
0x8edd  3  test  rax, rax
0x8ee0  2  je  0x8efc
0x8ee2  10  movabs  r10, 0x82a03e5032d2da70
0x8eec  3  mov  r8d, esi
0x8eef  2  mov  edx, ebx
0x8ef1  3  mov  rcx, rdi
0x8ef4  6  call  qword ptr [rip + 0xd376]
0x8efa  2  jmp  0x8f07
0x8efc  2  mov  edx, ebx
0x8efe  3  mov  rcx, rdi
0x8f01  6  call  qword ptr [rip + 0xd1a1]
0x8f07  5  mov  rbx, qword ptr [rsp + 0x30]
0x8f0c  5  mov  rsi, qword ptr [rsp + 0x38]
0x8f11  4  add  rsp, 0x20
0x8f15  1  pop  rdi
0x8f16  1  ret  
0x8f17  5  mov  qword ptr [rsp + 8], rbx
0x8f1c  5  mov  qword ptr [rsp + 0x10], rbp
0x8f21  5  mov  qword ptr [rsp + 0x18], rsi
0x8f26  1  push  rdi
0x8f27  4  sub  rsp, 0x50
0x8f2b  3  mov  ebx, r9d
0x8f2e  3  mov  rdi, r8
0x8f31  2  mov  esi, edx
0x8f33  7  lea  r9, [rip + 0xeede]
0x8f3a  3  mov  rbp, rcx
0x8f3d  7  lea  r8, [rip + 0xeecc]
0x8f44  7  lea  rdx, [rip + 0xeecd]
0x8f4b  5  mov  ecx, 0x11
0x8f50  5  call  0x8b43
0x8f55  3  mov  r11, rax
0x8f58  3  test  rax, rax
0x8f5b  2  je  0x8fbc
0x8f5d  10  movabs  r10, 0xe3a11f625057e270
0x8f67  8  mov  rdx, qword ptr [rsp + 0xa0]
0x8f6f  3  mov  r9d, ebx
0x8f72  8  mov  rcx, qword ptr [rsp + 0x98]
0x8f7a  3  mov  r8, rdi
0x8f7d  8  mov  rax, qword ptr [rsp + 0x80]
0x8f85  5  mov  qword ptr [rsp + 0x40], rdx
0x8f8a  2  mov  edx, esi
0x8f8c  5  mov  qword ptr [rsp + 0x38], rcx
0x8f91  8  mov  rcx, qword ptr [rsp + 0x90]
0x8f99  5  mov  qword ptr [rsp + 0x30], rcx
0x8f9e  7  mov  ecx, dword ptr [rsp + 0x88]
0x8fa5  4  mov  dword ptr [rsp + 0x28], ecx
0x8fa9  3  mov  rcx, rbp
0x8fac  5  mov  qword ptr [rsp + 0x20], rax
0x8fb1  3  mov  rax, r11
0x8fb4  6  call  qword ptr [rip + 0xd2b6]
0x8fba  2  jmp  0x8fee
0x8fbc  2  xor  edx, edx
0x8fbe  3  mov  rcx, rbp
0x8fc1  5  call  0x9003
0x8fc6  2  mov  ecx, eax
0x8fc8  3  mov  r9d, ebx
0x8fcb  7  mov  eax, dword ptr [rsp + 0x88]
0x8fd2  3  mov  r8, rdi
0x8fd5  4  mov  dword ptr [rsp + 0x28], eax
0x8fd9  2  mov  edx, esi
0x8fdb  8  mov  rax, qword ptr [rsp + 0x80]
0x8fe3  5  mov  qword ptr [rsp + 0x20], rax
0x8fe8  6  call  qword ptr [rip + 0xd192]
0x8fee  5  mov  rbx, qword ptr [rsp + 0x60]
0x8ff3  5  mov  rbp, qword ptr [rsp + 0x68]
0x8ff8  5  mov  rsi, qword ptr [rsp + 0x70]
0x8ffd  4  add  rsp, 0x50
0x9001  1  pop  rdi
0x9002  1  ret  
0x9003  5  mov  qword ptr [rsp + 8], rbx
0x9008  1  push  rdi
0x9009  4  sub  rsp, 0x20
0x900d  2  mov  edi, edx
0x900f  7  lea  r9, [rip + 0xee1a]
0x9016  3  mov  rbx, rcx
0x9019  7  lea  rdx, [rip + 0xee10]
0x9020  5  mov  ecx, 0x13
0x9025  7  lea  r8, [rip + 0xedfc]
0x902c  5  call  0x8b43
0x9031  3  test  rax, rax
0x9034  2  je  0x904d
0x9036  10  movabs  r10, 0xeadd062354d83270
0x9040  2  mov  edx, edi
0x9042  3  mov  rcx, rbx
0x9045  6  call  qword ptr [rip + 0xd225]
0x904b  2  jmp  0x9055
0x904d  3  mov  rcx, rbx
0x9050  5  call  0xe6ff
0x9055  5  mov  rbx, qword ptr [rsp + 0x30]
0x905a  4  add  rsp, 0x20
0x905e  1  pop  rdi
0x905f  1  ret  
0x9060  1  int3  
0x9061  1  int3  
0x9062  1  int3  
0x9063  5  mov  qword ptr [rsp + 8], rdi
0x9068  7  mov  rax, qword ptr [rip + 0x17fc9]
0x906f  7  lea  rdi, [rip + 0x18eba]
0x9076  5  mov  ecx, 0x1f
0x907b  3  rep stosq  qword ptr [rdi], rax
0x907e  5  mov  rdi, qword ptr [rsp + 8]
0x9083  2  mov  al, 1
0x9085  1  ret  
0x9086  1  int3  
0x9087  2  push  rbx
0x9089  4  sub  rsp, 0x20
0x908d  2  test  cl, cl
0x908f  2  jne  0x90c0
0x9091  7  lea  rbx, [rip + 0x18de8]
0x9098  3  mov  rcx, qword ptr [rbx]
0x909b  3  test  rcx, rcx
0x909e  2  je  0x90b0
0x90a0  4  cmp  rcx, -1
0x90a4  2  je  0x90ac
0x90a6  6  call  qword ptr [rip + 0xd024]
0x90ac  4  and  qword ptr [rbx], 0
0x90b0  4  add  rbx, 8
0x90b4  7  lea  rax, [rip + 0x18e6d]
0x90bb  3  cmp  rbx, rax
0x90be  2  jne  0x9098
0x90c0  2  mov  al, 1
0x90c2  4  add  rsp, 0x20
0x90c6  1  pop  rbx
0x90c7  1  ret  
0x90c8  1  int3  
0x90c9  1  int3  
0x90ca  1  int3  
0x90cb  5  mov  qword ptr [rsp + 0x10], rbx
0x90d0  1  push  rdi
0x90d1  4  sub  rsp, 0x30
0x90d5  5  and  dword ptr [rsp + 0x20], 0
0x90da  5  mov  ecx, 8
0x90df  5  call  0xd56b
0x90e4  1  nop  
0x90e5  5  mov  ebx, 3
0x90ea  4  mov  dword ptr [rsp + 0x24], ebx
0x90ee  6  cmp  ebx, dword ptr [rip + 0x18bac]
0x90f4  2  je  0x9164
0x90f6  3  movsxd  rdi, ebx
0x90f9  7  mov  rax, qword ptr [rip + 0x18ba8]
0x9100  4  mov  rcx, qword ptr [rax + rdi*8]
0x9104  3  test  rcx, rcx
0x9107  2  jne  0x910b
0x9109  2  jmp  0x9160
0x910b  3  mov  eax, dword ptr [rcx + 0x14]
0x910e  1  nop  
0x910f  3  shr  eax, 0xd
0x9112  2  and  al, 1
0x9114  2  je  0x912f
0x9116  7  mov  rcx, qword ptr [rip + 0x18b8b]
0x911d  4  mov  rcx, qword ptr [rcx + rdi*8]
0x9121  5  call  0xe8c7
0x9126  3  cmp  eax, -1
0x9129  2  je  0x912f
0x912b  4  inc  dword ptr [rsp + 0x20]
0x912f  7  mov  rax, qword ptr [rip + 0x18b72]
0x9136  4  mov  rcx, qword ptr [rax + rdi*8]
0x913a  4  add  rcx, 0x30
0x913e  6  call  qword ptr [rip + 0xcf5c]
0x9144  7  mov  rcx, qword ptr [rip + 0x18b5d]
0x914b  4  mov  rcx, qword ptr [rcx + rdi*8]
0x914f  5  call  0x8b07
0x9154  7  mov  rax, qword ptr [rip + 0x18b4d]
0x915b  5  and  qword ptr [rax + rdi*8], 0
0x9160  2  inc  ebx
0x9162  2  jmp  0x90ea
0x9164  5  mov  ecx, 8
0x9169  5  call  0xd5bf
0x916e  4  mov  eax, dword ptr [rsp + 0x20]
0x9172  5  mov  rbx, qword ptr [rsp + 0x48]
0x9177  4  add  rsp, 0x30
0x917b  1  pop  rdi
0x917c  1  ret  
0x917d  1  int3  
0x917e  1  int3  
0x917f  5  mov  qword ptr [rsp + 8], rbx
0x9184  5  mov  qword ptr [rsp + 0x20], r9
0x9189  1  push  rdi
0x918a  4  sub  rsp, 0x20
0x918e  3  mov  rdi, r9
0x9191  3  mov  rbx, r8
0x9194  3  mov  rcx, qword ptr [rdx]
0x9197  5  call  0x4e7b
0x919c  1  nop  
0x919d  4  mov  rdx, qword ptr [rbx + 8]
0x91a1  3  mov  rax, qword ptr [rbx]
0x91a4  3  mov  rcx, qword ptr [rax]
0x91a7  3  test  rcx, rcx
0x91aa  2  je  0x9208
0x91ac  3  mov  ecx, dword ptr [rcx + 0x14]
0x91af  1  nop  
0x91b0  2  mov  eax, ecx
0x91b2  3  shr  eax, 0xd
0x91b5  2  and  al, 1
0x91b7  2  je  0x9208
0x91b9  2  mov  eax, ecx
0x91bb  2  and  al, 3
0x91bd  2  cmp  al, 2
0x91bf  2  jne  0x91c6
0x91c1  3  test  cl, 0xc0
0x91c4  2  jne  0x91d0
0x91c6  4  bt  ecx, 0xb
0x91ca  2  jb  0x91d0
0x91cc  2  inc  dword ptr [rdx]
0x91ce  2  jmp  0x9208
0x91d0  4  mov  rax, qword ptr [rbx + 0x10]
0x91d4  3  cmp  byte ptr [rax], 0
0x91d7  2  jne  0x91e9
0x91d9  3  mov  rax, qword ptr [rbx]
0x91dc  3  mov  rcx, qword ptr [rax]
0x91df  3  mov  eax, dword ptr [rcx + 0x14]
0x91e2  1  nop  
0x91e3  2  shr  eax, 1
0x91e5  2  and  al, 1
0x91e7  2  je  0x9208
0x91e9  3  mov  rcx, qword ptr [rbx]
0x91ec  3  mov  rcx, qword ptr [rcx]
0x91ef  5  call  0x93eb
0x91f4  3  cmp  eax, -1
0x91f7  2  je  0x9201
0x91f9  4  mov  rax, qword ptr [rbx + 8]
0x91fd  2  inc  dword ptr [rax]
0x91ff  2  jmp  0x9208
0x9201  4  mov  rax, qword ptr [rbx + 0x18]
0x9205  3  or  dword ptr [rax], 0xffffffff
0x9208  3  mov  rcx, qword ptr [rdi]
0x920b  5  call  0x4e87
0x9210  5  mov  rbx, qword ptr [rsp + 0x30]
0x9215  4  add  rsp, 0x20
0x9219  1  pop  rdi
0x921a  1  ret  
0x921b  5  mov  qword ptr [rsp + 8], rbx
0x9220  5  mov  qword ptr [rsp + 0x20], r9
0x9225  1  push  rsi
0x9226  1  push  rdi
0x9227  2  push  r14
0x9229  4  sub  rsp, 0x60
0x922d  3  mov  rdi, r9
0x9230  3  mov  rsi, r8
0x9233  2  mov  ecx, dword ptr [rdx]
0x9235  5  call  0xd56b
0x923a  1  nop  
0x923b  7  mov  rbx, qword ptr [rip + 0x18a66]
0x9242  7  movsxd  rax, dword ptr [rip + 0x18a57]
0x9249  4  lea  r14, [rbx + rax*8]
0x924d  5  mov  qword ptr [rsp + 0x38], rbx
0x9252  3  cmp  rbx, r14
0x9255  6  je  0x92e4
0x925b  3  mov  rax, qword ptr [rbx]
0x925e  5  mov  qword ptr [rsp + 0x20], rax
0x9263  3  mov  rdx, qword ptr [rsi]
0x9266  3  test  rax, rax
0x9269  2  je  0x928d
0x926b  3  mov  ecx, dword ptr [rax + 0x14]
0x926e  1  nop  
0x926f  2  mov  eax, ecx
0x9271  3  shr  eax, 0xd
0x9274  2  and  al, 1
0x9276  2  je  0x928d
0x9278  2  mov  eax, ecx
0x927a  2  and  al, 3
0x927c  2  cmp  al, 2
0x927e  2  jne  0x9285
0x9280  3  test  cl, 0xc0
0x9283  2  jne  0x9293
0x9285  4  bt  ecx, 0xb
0x9289  2  jb  0x9293
0x928b  2  inc  dword ptr [rdx]
0x928d  4  add  rbx, 8
0x9291  2  jmp  0x924d
0x9293  4  mov  rdx, qword ptr [rsi + 0x10]
0x9297  4  mov  rcx, qword ptr [rsi + 8]
0x929b  3  mov  rax, qword ptr [rsi]
0x929e  5  lea  r8, [rsp + 0x20]
0x92a3  5  mov  qword ptr [rsp + 0x40], r8
0x92a8  5  mov  qword ptr [rsp + 0x48], rax
0x92ad  5  mov  qword ptr [rsp + 0x50], rcx
0x92b2  5  mov  qword ptr [rsp + 0x58], rdx
0x92b7  5  mov  rax, qword ptr [rsp + 0x20]
0x92bc  5  mov  qword ptr [rsp + 0x28], rax
0x92c1  5  mov  qword ptr [rsp + 0x30], rax
0x92c6  5  lea  r9, [rsp + 0x28]
0x92cb  5  lea  r8, [rsp + 0x40]
0x92d0  5  lea  rdx, [rsp + 0x30]
0x92d5  8  lea  rcx, [rsp + 0x88]
0x92dd  5  call  0x917f
0x92e2  2  jmp  0x928d
0x92e4  2  mov  ecx, dword ptr [rdi]
0x92e6  5  call  0xd5bf
0x92eb  8  mov  rbx, qword ptr [rsp + 0x80]
0x92f3  4  add  rsp, 0x60
0x92f7  2  pop  r14
0x92f9  1  pop  rdi
0x92fa  1  pop  rsi
0x92fb  1  ret  
0x92fc  1  int3  
0x92fd  1  int3  
0x92fe  1  int3  
0x92ff  4  mov  byte ptr [rsp + 8], cl
0x9303  1  push  rbp
0x9304  3  mov  rbp, rsp
0x9307  4  sub  rsp, 0x40
0x930b  4  and  dword ptr [rbp + 0x28], 0
0x930f  4  lea  rax, [rbp + 0x28]
0x9313  4  and  dword ptr [rbp + 0x20], 0
0x9317  4  lea  r9, [rbp - 0x20]
0x931b  4  mov  qword ptr [rbp - 0x18], rax
0x931f  4  lea  r8, [rbp - 0x18]
0x9323  4  lea  rax, [rbp + 0x10]
0x9327  4  mov  qword ptr [rbp - 0x10], rax
0x932b  4  lea  rdx, [rbp - 0x1c]
0x932f  4  lea  rax, [rbp + 0x20]
0x9333  4  mov  qword ptr [rbp - 8], rax
0x9337  4  lea  rcx, [rbp + 0x18]
0x933b  5  mov  eax, 8
0x9340  3  mov  dword ptr [rbp - 0x20], eax
0x9343  3  mov  dword ptr [rbp - 0x1c], eax
0x9346  5  call  0x921b
0x934b  4  cmp  byte ptr [rbp + 0x10], 0
0x934f  3  mov  eax, dword ptr [rbp + 0x20]
0x9352  4  cmovne  eax, dword ptr [rbp + 0x28]
0x9356  4  add  rsp, 0x40
0x935a  1  pop  rbp
0x935b  1  ret  
0x935c  1  int3  
0x935d  1  int3  
0x935e  1  int3  
0x935f  5  mov  qword ptr [rsp + 8], rbx
0x9364  5  mov  qword ptr [rsp + 0x10], rbp
0x9369  5  mov  qword ptr [rsp + 0x18], rsi
0x936e  1  push  rdi
0x936f  4  sub  rsp, 0x20
0x9373  3  mov  rbx, rcx
0x9376  3  mov  rbp, rdx
0x9379  3  mov  ecx, dword ptr [rcx + 0x14]
0x937c  2  mov  eax, ecx
0x937e  2  and  al, 3
0x9380  1  nop  
0x9381  2  cmp  al, 2
0x9383  2  jne  0x93d4
0x9385  3  test  cl, 0xc0
0x9388  2  je  0x93d4
0x938a  2  mov  edi, dword ptr [rbx]
0x938c  3  sub  edi, dword ptr [rbx + 8]
0x938f  4  and  dword ptr [rbx + 0x10], 0
0x9393  4  mov  rsi, qword ptr [rbx + 8]
0x9397  3  mov  qword ptr [rbx], rsi
0x939a  2  test  edi, edi
0x939c  2  jle  0x93d4
0x939e  3  mov  rcx, rbx
0x93a1  5  call  0xad03
0x93a6  3  mov  r9, rbp
0x93a9  3  mov  r8d, edi
0x93ac  3  mov  rdx, rsi
0x93af  2  mov  ecx, eax
0x93b1  5  call  0xf287
0x93b6  2  cmp  edi, eax
0x93b8  2  je  0x93c4
0x93ba  5  lock or  dword ptr [rbx + 0x14], 0x10
0x93bf  3  or  eax, 0xffffffff
0x93c2  2  jmp  0x93d6
0x93c4  3  mov  eax, dword ptr [rbx + 0x14]
0x93c7  1  nop  
0x93c8  3  shr  eax, 2
0x93cb  2  test  al, 1
0x93cd  2  je  0x93d4
0x93cf  5  lock and  dword ptr [rbx + 0x14], 0xfffffffd
0x93d4  2  xor  eax, eax
0x93d6  5  mov  rbx, qword ptr [rsp + 0x30]
0x93db  5  mov  rbp, qword ptr [rsp + 0x38]
0x93e0  5  mov  rsi, qword ptr [rsp + 0x40]
0x93e5  4  add  rsp, 0x20
0x93e9  1  pop  rdi
0x93ea  1  ret  
0x93eb  5  mov  qword ptr [rsp + 8], rbx
0x93f0  5  mov  qword ptr [rsp + 0x10], rdi
0x93f5  1  push  rbp
0x93f6  3  mov  rbp, rsp
0x93f9  4  sub  rsp, 0x60
0x93fd  5  and  qword ptr [rbp - 0x40], 0
0x9402  3  mov  rbx, rcx
0x9405  7  cmp  dword ptr [rip + 0x18a24], 0
0x940c  4  mov  byte ptr [rbp - 0x30], 0
0x9410  4  mov  byte ptr [rbp - 0x18], 0
0x9414  4  mov  byte ptr [rbp - 0x10], 0
0x9418  4  mov  byte ptr [rbp - 8], 0
0x941c  2  jne  0x942e
0x941e  7  movups  xmm0, xmmword ptr [rip + 0x17ef3]
0x9425  4  mov  byte ptr [rbp - 0x18], 1
0x9429  5  movdqu  xmmword ptr [rbp - 0x28], xmm0
0x942e  3  test  rbx, rbx
0x9431  2  jne  0x943e
0x9433  2  xor  ecx, ecx
0x9435  5  call  0x92ff
0x943a  2  mov  edi, eax
0x943c  2  jmp  0x9470
0x943e  4  lea  rdx, [rbp - 0x40]
0x9442  5  call  0x935f
0x9447  2  test  eax, eax
0x9449  2  je  0x9450
0x944b  3  or  edi, 0xffffffff
0x944e  2  jmp  0x9470
0x9450  3  mov  eax, dword ptr [rbx + 0x14]
0x9453  1  nop  
0x9454  3  shr  eax, 0xb
0x9457  2  test  al, 1
0x9459  2  je  0x946e
0x945b  3  mov  rcx, rbx
0x945e  5  call  0xad03
0x9463  2  mov  ecx, eax
0x9465  5  call  0xe9eb
0x946a  2  test  eax, eax
0x946c  2  jne  0x944b
0x946e  2  xor  edi, edi
0x9470  4  cmp  byte ptr [rbp - 0x18], 2
0x9474  2  jne  0x9481
0x9476  4  mov  rax, qword ptr [rbp - 0x40]
0x947a  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0x9481  4  cmp  byte ptr [rbp - 0x10], 0
0x9485  2  je  0x9496
0x9487  3  mov  ebx, dword ptr [rbp - 0x14]
0x948a  4  lea  rcx, [rbp - 0x40]
0x948e  5  call  0x5d13
0x9493  3  mov  dword ptr [rax + 0x20], ebx
0x9496  4  cmp  byte ptr [rbp - 8], 0
0x949a  2  je  0x94ab
0x949c  3  mov  ebx, dword ptr [rbp - 0xc]
0x949f  4  lea  rcx, [rbp - 0x40]
0x94a3  5  call  0x5d13
0x94a8  3  mov  dword ptr [rax + 0x24], ebx
0x94ab  5  mov  rbx, qword ptr [rsp + 0x70]
0x94b0  2  mov  eax, edi
0x94b2  5  mov  rdi, qword ptr [rsp + 0x78]
0x94b7  4  add  rsp, 0x60
0x94bb  1  pop  rbp
0x94bc  1  ret  
0x94bd  1  int3  
0x94be  1  int3  
0x94bf  2  mov  cl, 1
0x94c1  5  jmp  0x92ff
0x94c6  1  int3  
0x94c7  2  push  rbx
0x94c9  4  sub  rsp, 0x20
0x94cd  3  mov  eax, dword ptr [rcx + 0x14]
0x94d0  3  mov  rbx, rcx
0x94d3  3  shr  eax, 0xd
0x94d6  1  nop  
0x94d7  2  test  al, 1
0x94d9  2  je  0x9503
0x94db  3  mov  eax, dword ptr [rcx + 0x14]
0x94de  1  nop  
0x94df  3  shr  eax, 6
0x94e2  2  test  al, 1
0x94e4  2  je  0x9503
0x94e6  4  mov  rcx, qword ptr [rcx + 8]
0x94ea  5  call  0x8b07
0x94ef  8  lock and  dword ptr [rbx + 0x14], 0xfffffebf
0x94f7  2  xor  eax, eax
0x94f9  4  mov  qword ptr [rbx + 8], rax
0x94fd  3  mov  qword ptr [rbx], rax
0x9500  3  mov  dword ptr [rbx + 0x10], eax
0x9503  4  add  rsp, 0x20
0x9507  1  pop  rbx
0x9508  1  ret  
0x9509  1  int3  
0x950a  1  int3  
0x950b  3  mov  rax, rsp
0x950e  4  mov  qword ptr [rax + 8], rbx
0x9512  4  mov  qword ptr [rax + 0x10], rbp
0x9516  4  mov  qword ptr [rax + 0x18], rsi
0x951a  4  mov  qword ptr [rax + 0x20], rdi
0x951e  2  push  r14
0x9520  7  sub  rsp, 0x90
0x9527  4  lea  rcx, [rax - 0x78]
0x952b  6  call  qword ptr [rip + 0xcb27]
0x9531  3  xor  r14d, r14d
0x9534  6  cmp  word ptr [rsp + 0x62], r14w
0x953a  6  je  0x95da
0x9540  5  mov  rax, qword ptr [rsp + 0x68]
0x9545  3  test  rax, rax
0x9548  6  je  0x95da
0x954e  3  movsxd  rbx, dword ptr [rax]
0x9551  4  lea  rsi, [rax + 4]
0x9555  5  mov  edi, 0x2000
0x955a  3  add  rbx, rsi
0x955d  2  cmp  dword ptr [rax], edi
0x955f  3  cmovl  edi, dword ptr [rax]
0x9562  2  mov  ecx, edi
0x9564  5  call  0xd737
0x9569  6  cmp  edi, dword ptr [rip + 0x18ec1]
0x956f  7  cmovg  edi, dword ptr [rip + 0x18eba]
0x9576  2  test  edi, edi
0x9578  2  je  0x95da
0x957a  3  mov  ebp, r14d
0x957d  4  cmp  qword ptr [rbx], -1
0x9581  2  je  0x95ca
0x9583  4  cmp  qword ptr [rbx], -2
0x9587  2  je  0x95ca
0x9589  3  test  byte ptr [rsi], 1
0x958c  2  je  0x95ca
0x958e  3  test  byte ptr [rsi], 8
0x9591  2  jne  0x95a0
0x9593  3  mov  rcx, qword ptr [rbx]
0x9596  6  call  qword ptr [rip + 0xcbec]
0x959c  2  test  eax, eax
0x959e  2  je  0x95ca
0x95a0  3  mov  rax, rbp
0x95a3  7  lea  r8, [rip + 0x18a86]
0x95aa  3  mov  rcx, rbp
0x95ad  4  sar  rcx, 6
0x95b1  3  and  eax, 0x3f
0x95b4  4  mov  rcx, qword ptr [r8 + rcx*8]
0x95b8  4  lea  rdx, [rax + rax*8]
0x95bc  3  mov  rax, qword ptr [rbx]
0x95bf  5  mov  qword ptr [rcx + rdx*8 + 0x28], rax
0x95c4  2  mov  al, byte ptr [rsi]
0x95c6  4  mov  byte ptr [rcx + rdx*8 + 0x38], al
0x95ca  3  inc  rbp
0x95cd  3  inc  rsi
0x95d0  4  add  rbx, 8
0x95d4  4  sub  rdi, 1
0x95d8  2  jne  0x957d
0x95da  8  lea  r11, [rsp + 0x90]
0x95e2  4  mov  rbx, qword ptr [r11 + 0x10]
0x95e6  4  mov  rbp, qword ptr [r11 + 0x18]
0x95ea  4  mov  rsi, qword ptr [r11 + 0x20]
0x95ee  4  mov  rdi, qword ptr [r11 + 0x28]
0x95f2  3  mov  rsp, r11
0x95f5  2  pop  r14
0x95f7  1  ret  
0x95f8  1  int3  
0x95f9  1  int3  
0x95fa  1  int3  
0x95fb  3  mov  rax, rsp
0x95fe  4  mov  qword ptr [rax + 8], rbx
0x9602  4  mov  qword ptr [rax + 0x10], rbp
0x9606  4  mov  qword ptr [rax + 0x18], rsi
0x960a  4  mov  qword ptr [rax + 0x20], rdi
0x960e  2  push  r14
0x9610  4  sub  rsp, 0x20
0x9614  2  xor  esi, esi
0x9616  3  xor  r14d, r14d
0x9619  3  movsxd  rcx, esi
0x961c  7  lea  rdi, [rip + 0x18a0d]
0x9623  3  mov  rax, rcx
0x9626  3  and  ecx, 0x3f
0x9629  4  sar  rax, 6
0x962d  4  lea  rbx, [rcx + rcx*8]
0x9631  4  mov  rdi, qword ptr [rdi + rax*8]
0x9635  5  mov  rax, qword ptr [rdi + rbx*8 + 0x28]
0x963a  4  add  rax, 2
0x963e  4  cmp  rax, 1
0x9642  2  jbe  0x964e
0x9644  5  or  byte ptr [rdi + rbx*8 + 0x38], 0x80
0x9649  5  jmp  0x96d9
0x964e  5  mov  byte ptr [rdi + rbx*8 + 0x38], 0x81
0x9653  2  mov  ecx, esi
0x9655  2  test  esi, esi
0x9657  2  je  0x966f
0x9659  3  sub  ecx, 1
0x965c  2  je  0x9668
0x965e  3  cmp  ecx, 1
0x9661  5  mov  ecx, 0xfffffff4
0x9666  2  jmp  0x9674
0x9668  5  mov  ecx, 0xfffffff5
0x966d  2  jmp  0x9674
0x966f  5  mov  ecx, 0xfffffff6
0x9674  6  call  qword ptr [rip + 0xca86]
0x967a  3  mov  rbp, rax
0x967d  4  lea  rcx, [rax + 1]
0x9681  4  cmp  rcx, 1
0x9685  2  jbe  0x96b4
0x9687  3  mov  rcx, rax
0x968a  6  call  qword ptr [rip + 0xcaf8]
0x9690  2  test  eax, eax
0x9692  2  je  0x96b4
0x9694  3  movzx  eax, al
0x9697  5  mov  qword ptr [rdi + rbx*8 + 0x28], rbp
0x969c  3  cmp  eax, 2
0x969f  2  jne  0x96a8
0x96a1  5  or  byte ptr [rdi + rbx*8 + 0x38], 0x40
0x96a6  2  jmp  0x96d9
0x96a8  3  cmp  eax, 3
0x96ab  2  jne  0x96d9
0x96ad  5  or  byte ptr [rdi + rbx*8 + 0x38], 8
0x96b2  2  jmp  0x96d9
0x96b4  5  or  byte ptr [rdi + rbx*8 + 0x38], 0x40
0x96b9  9  mov  qword ptr [rdi + rbx*8 + 0x28], 0xfffffffffffffffe
0x96c2  7  mov  rax, qword ptr [rip + 0x185df]
0x96c9  3  test  rax, rax
0x96cc  2  je  0x96d9
0x96ce  4  mov  rax, qword ptr [r14 + rax]
0x96d2  7  mov  dword ptr [rax + 0x18], 0xfffffffe
0x96d9  2  inc  esi
0x96db  4  add  r14, 8
0x96df  3  cmp  esi, 3
0x96e2  6  jne  0x9619
0x96e8  5  mov  rbx, qword ptr [rsp + 0x30]
0x96ed  5  mov  rbp, qword ptr [rsp + 0x38]
0x96f2  5  mov  rsi, qword ptr [rsp + 0x40]
0x96f7  5  mov  rdi, qword ptr [rsp + 0x48]
0x96fc  4  add  rsp, 0x20
0x9700  2  pop  r14
0x9702  1  ret  
0x9703  2  push  rbx
0x9705  4  sub  rsp, 0x20
0x9709  5  mov  ecx, 7
0x970e  5  call  0xd56b
0x9713  2  xor  ebx, ebx
0x9715  2  xor  ecx, ecx
0x9717  5  call  0xd737
0x971c  2  test  eax, eax
0x971e  2  jne  0x972c
0x9720  5  call  0x950b
0x9725  5  call  0x95fb
0x972a  2  mov  bl, 1
0x972c  5  mov  ecx, 7
0x9731  5  call  0xd5bf
0x9736  2  mov  al, bl
0x9738  4  add  rsp, 0x20
0x973c  1  pop  rbx
0x973d  1  ret  
0x973e  1  int3  
0x973f  5  mov  qword ptr [rsp + 8], rbx
0x9744  1  push  rdi
0x9745  4  sub  rsp, 0x20
0x9749  2  xor  ebx, ebx
0x974b  7  lea  rdi, [rip + 0x188de]
0x9752  4  mov  rcx, qword ptr [rbx + rdi]
0x9756  3  test  rcx, rcx
0x9759  2  je  0x9765
0x975b  5  call  0xd6e7
0x9760  5  and  qword ptr [rbx + rdi], 0
0x9765  4  add  rbx, 8
0x9769  7  cmp  rbx, 0x400
0x9770  2  jb  0x974b
0x9772  5  mov  rbx, qword ptr [rsp + 0x30]
0x9777  2  mov  al, 1
0x9779  4  add  rsp, 0x20
0x977d  1  pop  rdi
0x977e  1  ret  
0x977f  2  push  rbx
0x9781  4  sub  rsp, 0x20
0x9785  3  mov  rbx, rcx
0x9788  4  cmp  rcx, -0x20
0x978c  2  ja  0x97ca
0x978e  3  test  rcx, rcx
0x9791  5  mov  eax, 1
0x9796  4  cmove  rbx, rax
0x979a  2  jmp  0x97b1
0x979c  5  call  0x7e1f
0x97a1  2  test  eax, eax
0x97a3  2  je  0x97ca
0x97a5  3  mov  rcx, rbx
0x97a8  5  call  0xe373
0x97ad  2  test  eax, eax
0x97af  2  je  0x97ca
0x97b1  7  mov  rcx, qword ptr [rip + 0x18f08]
0x97b8  3  mov  r8, rbx
0x97bb  2  xor  edx, edx
0x97bd  6  call  qword ptr [rip + 0xc985]
0x97c3  3  test  rax, rax
0x97c6  2  je  0x979c
0x97c8  2  jmp  0x97d7
0x97ca  5  call  0x8a6f
0x97cf  6  mov  dword ptr [rax], 0xc
0x97d5  2  xor  eax, eax
0x97d7  4  add  rsp, 0x20
0x97db  1  pop  rbx
0x97dc  1  ret  
0x97dd  1  int3  
0x97de  1  int3  
0x97df  6  mov  eax, dword ptr [rip + 0x17833]
0x97e5  3  mov  r9, rcx
0x97e8  3  cmp  eax, 5
0x97eb  6  jl  0x9884
0x97f1  3  mov  r8, rcx
0x97f4  5  mov  eax, 0x20
0x97f9  4  and  r8d, 0x1f
0x97fd  3  sub  rax, r8
0x9800  3  neg  r8
0x9803  3  sbb  r10, r10
0x9806  3  and  r10, rax
0x9809  3  mov  rax, r9
0x980c  3  cmp  rdx, r10
0x980f  4  cmovb  r10, rdx
0x9813  3  add  rcx, r10
0x9816  3  cmp  r9, rcx
0x9819  2  je  0x9828
0x981b  3  cmp  byte ptr [rax], 0
0x981e  2  je  0x9828
0x9820  3  inc  rax
0x9823  3  cmp  rax, rcx
0x9826  2  jne  0x981b
0x9828  3  mov  rcx, rax
0x982b  3  sub  rcx, r9
0x982e  3  cmp  rcx, r10
0x9831  6  jne  0x992b
0x9837  3  mov  r8, rdx
0x983a  3  mov  rcx, rax
0x983d  3  sub  r8, r10
0x9840  4  and  r8, 0xffffffffffffffe0
0x9844  3  add  r8, rax
0x9847  3  cmp  rax, r8
0x984a  2  je  0x9868
0x984c  4  vpxor  xmm1, xmm1, xmm1
0x9850  4  vpcmpeqb  ymm1, ymm1, ymmword ptr [rcx]
0x9854  4  vpmovmskb  eax, ymm1
0x9858  2  test  eax, eax
0x985a  3  vzeroupper  
0x985d  2  jne  0x9868
0x985f  4  add  rcx, 0x20
0x9863  3  cmp  rcx, r8
0x9866  2  jne  0x984c
0x9868  4  lea  rax, [r9 + rdx]
0x986c  2  jmp  0x987a
0x986e  3  cmp  byte ptr [rcx], 0
0x9871  6  je  0x9928
0x9877  3  inc  rcx
0x987a  3  cmp  rcx, rax
0x987d  2  jne  0x986e
0x987f  5  jmp  0x9928
0x9884  3  cmp  eax, 1
0x9887  6  jl  0x9912
0x988d  3  and  ecx, 0xf
0x9890  5  mov  eax, 0x10
0x9895  3  sub  rax, rcx
0x9898  3  neg  rcx
0x989b  3  sbb  r10, r10
0x989e  3  and  r10, rax
0x98a1  3  mov  rax, r9
0x98a4  3  cmp  rdx, r10
0x98a7  4  cmovb  r10, rdx
0x98ab  4  lea  rcx, [r10 + r9]
0x98af  3  cmp  r9, rcx
0x98b2  2  je  0x98c1
0x98b4  3  cmp  byte ptr [rax], 0
0x98b7  2  je  0x98c1
0x98b9  3  inc  rax
0x98bc  3  cmp  rax, rcx
0x98bf  2  jne  0x98b4
0x98c1  3  mov  rcx, rax
0x98c4  3  sub  rcx, r9
0x98c7  3  cmp  rcx, r10
0x98ca  2  jne  0x992b
0x98cc  3  mov  r8, rdx
0x98cf  3  mov  rcx, rax
0x98d2  3  sub  r8, r10
0x98d5  3  xorps  xmm1, xmm1
0x98d8  4  and  r8, 0xfffffffffffffff0
0x98dc  3  add  r8, rax
0x98df  3  cmp  rax, r8
0x98e2  2  je  0x98fd
0x98e4  4  movdqa  xmm0, xmm1
0x98e8  4  pcmpeqb  xmm0, xmmword ptr [rcx]
0x98ec  4  pmovmskb  eax, xmm0
0x98f0  2  test  eax, eax
0x98f2  2  jne  0x98fd
0x98f4  4  add  rcx, 0x10
0x98f8  3  cmp  rcx, r8
0x98fb  2  jne  0x98e4
0x98fd  4  lea  rax, [r9 + rdx]
0x9901  2  jmp  0x990b
0x9903  3  cmp  byte ptr [rcx], 0
0x9906  2  je  0x9928
0x9908  3  inc  rcx
0x990b  3  cmp  rcx, rax
0x990e  2  jne  0x9903
0x9910  2  jmp  0x9928
0x9912  4  lea  rax, [rcx + rdx]
0x9916  3  cmp  r9, rax
0x9919  2  je  0x9928
0x991b  3  cmp  byte ptr [rcx], 0
0x991e  2  je  0x9928
0x9920  3  inc  rcx
0x9923  3  cmp  rcx, rax
0x9926  2  jne  0x991b
0x9928  3  sub  rcx, r9
0x992b  3  mov  rax, rcx
0x992e  1  ret  
0x992f  6  mov  eax, dword ptr [rip + 0x176e3]
0x9935  3  mov  r10, rdx
0x9938  3  mov  r8, rcx
0x993b  3  cmp  eax, 5
0x993e  6  jl  0x9a10
0x9944  4  test  r8b, 1
0x9948  2  je  0x9973
0x994a  4  lea  rax, [rcx + rdx*2]
0x994e  3  mov  rdx, rcx
0x9951  3  cmp  rcx, rax
0x9954  6  je  0x9afb
0x995a  2  xor  ecx, ecx
0x995c  3  cmp  word ptr [rdx], cx
0x995f  6  je  0x9afb
0x9965  4  add  rdx, 2
0x9969  3  cmp  rdx, rax
0x996c  2  jne  0x995c
0x996e  5  jmp  0x9afb
0x9973  3  and  ecx, 0x1f
0x9976  5  mov  eax, 0x20
0x997b  3  sub  rax, rcx
0x997e  3  mov  rdx, r8
0x9981  3  neg  rcx
0x9984  3  sbb  r11, r11
0x9987  3  and  r11, rax
0x998a  3  shr  r11, 1
0x998d  3  cmp  r10, r11
0x9990  4  cmovb  r11, r10
0x9994  2  xor  ecx, ecx
0x9996  4  lea  rax, [r8 + r11*2]
0x999a  3  cmp  r8, rax
0x999d  2  je  0x99ad
0x999f  3  cmp  word ptr [rdx], cx
0x99a2  2  je  0x99ad
0x99a4  4  add  rdx, 2
0x99a8  3  cmp  rdx, rax
0x99ab  2  jne  0x999f
0x99ad  3  sub  rdx, r8
0x99b0  3  sar  rdx, 1
0x99b3  3  cmp  rdx, r11
0x99b6  6  jne  0x9b01
0x99bc  4  lea  r9, [r8 + rdx*2]
0x99c0  3  mov  rax, r10
0x99c3  3  sub  rax, r11
0x99c6  4  and  rax, 0xffffffffffffffe0
0x99ca  3  add  rax, rdx
0x99cd  4  lea  rdx, [r8 + rax*2]
0x99d1  3  cmp  r9, rdx
0x99d4  2  je  0x99f3
0x99d6  4  vpxor  xmm1, xmm1, xmm1
0x99da  5  vpcmpeqw  ymm1, ymm1, ymmword ptr [r9]
0x99df  4  vpmovmskb  eax, ymm1
0x99e3  2  test  eax, eax
0x99e5  3  vzeroupper  
0x99e8  2  jne  0x99f3
0x99ea  4  add  r9, 0x20
0x99ee  3  cmp  r9, rdx
0x99f1  2  jne  0x99d6
0x99f3  4  lea  rax, [r8 + r10*2]
0x99f7  2  jmp  0x9a03
0x99f9  4  cmp  word ptr [r9], cx
0x99fd  2  je  0x9a08
0x99ff  4  add  r9, 2
0x9a03  3  cmp  r9, rax
0x9a06  2  jne  0x99f9
0x9a08  3  mov  rdx, r9
0x9a0b  5  jmp  0x9afb
0x9a10  3  cmp  eax, 1
0x9a13  6  jl  0x9adf
0x9a19  4  test  r8b, 1
0x9a1d  2  je  0x9a48
0x9a1f  4  lea  rax, [rcx + rdx*2]
0x9a23  3  mov  rdx, r8
0x9a26  3  cmp  r8, rax
0x9a29  6  je  0x9afb
0x9a2f  2  xor  ecx, ecx
0x9a31  3  cmp  word ptr [rdx], cx
0x9a34  6  je  0x9afb
0x9a3a  4  add  rdx, 2
0x9a3e  3  cmp  rdx, rax
0x9a41  2  jne  0x9a31
0x9a43  5  jmp  0x9afb
0x9a48  3  and  ecx, 0xf
0x9a4b  5  mov  eax, 0x10
0x9a50  3  sub  rax, rcx
0x9a53  3  mov  rdx, r8
0x9a56  3  neg  rcx
0x9a59  3  sbb  r11, r11
0x9a5c  3  and  r11, rax
0x9a5f  3  shr  r11, 1
0x9a62  3  cmp  r10, r11
0x9a65  4  cmovb  r11, r10
0x9a69  2  xor  ecx, ecx
0x9a6b  4  lea  rax, [r8 + r11*2]
0x9a6f  3  cmp  r8, rax
0x9a72  2  je  0x9a82
0x9a74  3  cmp  word ptr [rdx], cx
0x9a77  2  je  0x9a82
0x9a79  4  add  rdx, 2
0x9a7d  3  cmp  rdx, rax
0x9a80  2  jne  0x9a74
0x9a82  3  sub  rdx, r8
0x9a85  3  sar  rdx, 1
0x9a88  3  cmp  rdx, r11
0x9a8b  2  jne  0x9b01
0x9a8d  3  mov  rax, r10
0x9a90  4  lea  r9, [r8 + rdx*2]
0x9a94  3  sub  rax, r11
0x9a97  3  xorps  xmm1, xmm1
0x9a9a  4  and  rax, 0xfffffffffffffff0
0x9a9e  3  add  rax, rdx
0x9aa1  4  lea  rdx, [r8 + rax*2]
0x9aa5  2  jmp  0x9abc
0x9aa7  4  movdqa  xmm0, xmm1
0x9aab  5  pcmpeqw  xmm0, xmmword ptr [r9]
0x9ab0  4  pmovmskb  eax, xmm0
0x9ab4  2  test  eax, eax
0x9ab6  2  jne  0x9ac1
0x9ab8  4  add  r9, 0x10
0x9abc  3  cmp  r9, rdx
0x9abf  2  jne  0x9aa7
0x9ac1  4  lea  rax, [r8 + r10*2]
0x9ac5  2  jmp  0x9ad5
0x9ac7  4  cmp  word ptr [r9], cx
0x9acb  6  je  0x9a08
0x9ad1  4  add  r9, 2
0x9ad5  3  cmp  r9, rax
0x9ad8  2  jne  0x9ac7
0x9ada  5  jmp  0x9a08
0x9adf  4  lea  rax, [rcx + rdx*2]
0x9ae3  3  mov  rdx, r8
0x9ae6  3  cmp  r8, rax
0x9ae9  2  je  0x9afb
0x9aeb  2  xor  ecx, ecx
0x9aed  3  cmp  word ptr [rdx], cx
0x9af0  2  je  0x9afb
0x9af2  4  add  rdx, 2
0x9af6  3  cmp  rdx, rax
0x9af9  2  jne  0x9aed
0x9afb  3  sub  rdx, r8
0x9afe  3  sar  rdx, 1
0x9b01  3  mov  rax, rdx
0x9b04  1  ret  
0x9b05  1  int3  
0x9b06  1  int3  
0x9b07  2  push  rbx
0x9b09  4  sub  rsp, 0x20
0x9b0d  7  mov  rax, qword ptr [rip + 0x18944]
0x9b14  3  mov  rbx, rdx
0x9b17  3  cmp  qword ptr [rdx], rax
0x9b1a  2  je  0x9b32
0x9b1c  6  mov  eax, dword ptr [rcx + 0x3a8]
0x9b22  6  test  dword ptr [rip + 0x17de8], eax
0x9b28  2  jne  0x9b32
0x9b2a  5  call  0xe0f7
0x9b2f  3  mov  qword ptr [rbx], rax
0x9b32  4  add  rsp, 0x20
0x9b36  1  pop  rbx
0x9b37  1  ret  
0x9b38  1  int3  
0x9b39  1  int3  
0x9b3a  1  int3  
0x9b3b  2  push  rbx
0x9b3d  4  sub  rsp, 0x20
0x9b41  7  lea  rax, [rip + 0x18910]
0x9b48  3  mov  rbx, rdx
0x9b4b  4  mov  rax, qword ptr [rax + r8*8]
0x9b4f  3  cmp  qword ptr [rdx], rax
0x9b52  2  je  0x9b6a
0x9b54  6  mov  eax, dword ptr [rcx + 0x3a8]
0x9b5a  6  test  dword ptr [rip + 0x17db0], eax
0x9b60  2  jne  0x9b6a
0x9b62  5  call  0xe0f7
0x9b67  3  mov  qword ptr [rbx], rax
0x9b6a  4  add  rsp, 0x20
0x9b6e  1  pop  rbx
0x9b6f  1  ret  
0x9b70  1  int3  
0x9b71  1  int3  
0x9b72  1  int3  
0x9b73  2  push  rbx
0x9b75  4  sub  rsp, 0x20
0x9b79  7  mov  rax, qword ptr [rip + 0x188f0]
0x9b80  3  mov  rbx, rdx
0x9b83  3  cmp  qword ptr [rdx], rax
0x9b86  2  je  0x9b9e
0x9b88  6  mov  eax, dword ptr [rcx + 0x3a8]
0x9b8e  6  test  dword ptr [rip + 0x17d7c], eax
0x9b94  2  jne  0x9b9e
0x9b96  5  call  0xcaf7
0x9b9b  3  mov  qword ptr [rbx], rax
0x9b9e  4  add  rsp, 0x20
0x9ba2  1  pop  rbx
0x9ba3  1  ret  
0x9ba4  1  int3  
0x9ba5  1  int3  
0x9ba6  1  int3  
0x9ba7  2  push  rbx
0x9ba9  4  sub  rsp, 0x20
0x9bad  7  lea  rax, [rip + 0x188bc]
0x9bb4  3  mov  rbx, rdx
0x9bb7  4  mov  rax, qword ptr [rax + r8*8]
0x9bbb  3  cmp  qword ptr [rdx], rax
0x9bbe  2  je  0x9bd6
0x9bc0  6  mov  eax, dword ptr [rcx + 0x3a8]
0x9bc6  6  test  dword ptr [rip + 0x17d44], eax
0x9bcc  2  jne  0x9bd6
0x9bce  5  call  0xcaf7
0x9bd3  3  mov  qword ptr [rbx], rax
0x9bd6  4  add  rsp, 0x20
0x9bda  1  pop  rbx
0x9bdb  1  ret  
0x9bdc  1  int3  
0x9bdd  1  int3  
0x9bde  1  int3  
0x9bdf  5  mov  qword ptr [rsp + 8], rbx
0x9be4  5  mov  qword ptr [rsp + 0x18], rbp
0x9be9  5  mov  qword ptr [rsp + 0x20], rsi
0x9bee  1  push  rdi
0x9bef  2  push  r12
0x9bf1  2  push  r13
0x9bf3  2  push  r14
0x9bf5  2  push  r15
0x9bf7  4  sub  rsp, 0x50
0x9bfb  7  mov  eax, dword ptr [rsp + 0xa8]
0x9c02  3  xor  r11d, r11d
0x9c05  2  test  eax, eax
0x9c07  3  mov  byte ptr [rdx], r11b
0x9c0a  3  mov  edi, r11d
0x9c0d  3  mov  r10, r9
0x9c10  3  cmovns  edi, eax
0x9c13  3  mov  rbx, rdx
0x9c16  3  mov  r14, rcx
0x9c19  3  lea  eax, [rdi + 0xb]
0x9c1c  3  movsxd  r9, eax
0x9c1f  3  cmp  r8, r9
0x9c22  2  ja  0x9c57
0x9c24  8  mov  rcx, qword ptr [rsp + 0xc8]
0x9c2c  4  lea  ebx, [r11 + 0x22]
0x9c30  5  mov  qword ptr [rsp + 0x28], rcx
0x9c35  3  xor  r9d, r9d
0x9c38  3  xor  r8d, r8d
0x9c3b  5  mov  qword ptr [rsp + 0x20], r11
0x9c40  2  xor  edx, edx
0x9c42  4  mov  byte ptr [rcx + 0x30], 1
0x9c46  3  mov  dword ptr [rcx + 0x2c], ebx
0x9c49  2  xor  ecx, ecx
0x9c4b  5  call  0x8867
0x9c50  2  mov  eax, ebx
0x9c52  5  jmp  0x9f58
0x9c57  3  mov  rax, qword ptr [rcx]
0x9c5a  5  mov  ecx, 0x7ff
0x9c5f  4  shr  rax, 0x34
0x9c63  3  and  rax, rcx
0x9c66  3  cmp  rax, rcx
0x9c69  6  jne  0x9cf0
0x9c6f  8  mov  rax, qword ptr [rsp + 0xc8]
0x9c77  3  mov  r9, r10
0x9c7a  5  mov  qword ptr [rsp + 0x48], rax
0x9c7f  3  mov  rcx, r14
0x9c82  7  mov  eax, dword ptr [rsp + 0xc0]
0x9c89  4  mov  dword ptr [rsp + 0x40], eax
0x9c8d  7  mov  eax, dword ptr [rsp + 0xb8]
0x9c94  4  mov  dword ptr [rsp + 0x38], eax
0x9c98  8  mov  rax, qword ptr [rsp + 0xa0]
0x9ca0  5  mov  byte ptr [rsp + 0x30], r11b
0x9ca5  4  mov  dword ptr [rsp + 0x28], edi
0x9ca9  5  mov  qword ptr [rsp + 0x20], rax
0x9cae  5  call  0x9f77
0x9cb3  2  test  eax, eax
0x9cb5  2  je  0x9cbf
0x9cb7  3  mov  byte ptr [rbx], 0
0x9cba  5  jmp  0x9f58
0x9cbf  5  mov  edx, 0x65
0x9cc4  3  mov  rcx, rbx
0x9cc7  5  call  0x15157
0x9ccc  3  test  rax, rax
0x9ccf  6  je  0x9f56
0x9cd5  7  mov  cl, byte ptr [rsp + 0xb0]
0x9cdc  3  xor  cl, 1
0x9cdf  3  shl  cl, 5
0x9ce2  3  add  cl, 0x50
0x9ce5  2  mov  byte ptr [rax], cl
0x9ce7  4  mov  byte ptr [rax + 3], 0
0x9ceb  5  jmp  0x9f56
0x9cf0  5  mov  eax, 0x2d
0x9cf5  3  cmp  qword ptr [r14], r11
0x9cf8  2  jge  0x9cff
0x9cfa  2  mov  byte ptr [rdx], al
0x9cfc  3  inc  rbx
0x9cff  7  mov  al, byte ptr [rsp + 0xb0]
0x9d06  4  lea  r12, [rbx + 1]
0x9d0a  2  xor  al, 1
0x9d0c  6  mov  r15d, 0x3ff
0x9d12  4  movzx  r13d, al
0x9d16  6  mov  r8d, 0x30
0x9d1c  3  mov  ebp, r13d
0x9d1f  10  movabs  rax, 0x7ff0000000000000
0x9d29  3  shl  ebp, 5
0x9d2c  10  movabs  r9, 0xfffffffffffff
0x9d36  3  add  ebp, 7
0x9d39  3  test  qword ptr [r14], rax
0x9d3c  2  jne  0x9d56
0x9d3e  3  mov  byte ptr [rbx], r8b
0x9d41  3  mov  rax, qword ptr [r14]
0x9d44  3  and  rax, r9
0x9d47  3  neg  rax
0x9d4a  3  sbb  r15, r15
0x9d4d  7  and  r15d, 0x3fe
0x9d54  2  jmp  0x9d59
0x9d56  3  mov  byte ptr [rbx], 0x31
0x9d59  5  lea  rsi, [r12 + 1]
0x9d5e  2  test  edi, edi
0x9d60  2  jne  0x9d67
0x9d62  3  mov  al, r11b
0x9d65  2  jmp  0x9d9e
0x9d67  8  mov  rbx, qword ptr [rsp + 0xc8]
0x9d6f  4  cmp  byte ptr [rbx + 0x28], r11b
0x9d73  2  jne  0x9d8e
0x9d75  3  mov  rcx, rbx
0x9d78  5  call  0x6c63
0x9d7d  3  xor  r11d, r11d
0x9d80  10  movabs  r9, 0xfffffffffffff
0x9d8a  4  lea  r8d, [r11 + 0x30]
0x9d8e  4  mov  rax, qword ptr [rbx + 0x18]
0x9d92  7  mov  rcx, qword ptr [rax + 0xf8]
0x9d99  3  mov  rax, qword ptr [rcx]
0x9d9c  2  mov  al, byte ptr [rax]
0x9d9e  4  mov  byte ptr [r12], al
0x9da2  3  test  qword ptr [r14], r9
0x9da5  6  jbe  0x9e35
0x9dab  4  movzx  edx, r8w
0x9daf  10  movabs  r10, 0xf000000000000
0x9db9  3  movzx  ecx, dx
0x9dbc  2  test  edi, edi
0x9dbe  2  jle  0x9dec
0x9dc0  3  mov  rax, qword ptr [r14]
0x9dc3  3  and  rax, r10
0x9dc6  3  and  rax, r9
0x9dc9  3  shr  rax, cl
0x9dcc  4  add  ax, r8w
0x9dd0  4  cmp  ax, 0x39
0x9dd4  2  jbe  0x9dd9
0x9dd6  3  add  ax, bp
0x9dd9  2  mov  byte ptr [rsi], al
0x9ddb  2  dec  edi
0x9ddd  3  inc  rsi
0x9de0  4  shr  r10, 4
0x9de4  4  add  dx, -4
0x9de8  2  jns  0x9db9
0x9dea  2  jmp  0x9e35
0x9dec  8  mov  r9d, dword ptr [rsp + 0xc0]
0x9df4  4  movzx  r8d, cx
0x9df8  3  mov  rcx, r14
0x9dfb  3  mov  rdx, r10
0x9dfe  5  call  0xa5db
0x9e03  3  xor  r11d, r11d
0x9e06  2  test  al, al
0x9e08  2  je  0x9e56
0x9e0a  4  lea  rcx, [rsi - 1]
0x9e0e  2  mov  dl, byte ptr [rcx]
0x9e10  3  lea  eax, [rdx - 0x46]
0x9e13  2  test  al, 0xdf
0x9e15  2  jne  0x9e1f
0x9e17  3  mov  byte ptr [rcx], 0x30
0x9e1a  3  dec  rcx
0x9e1d  2  jmp  0x9e0e
0x9e1f  3  cmp  rcx, r12
0x9e22  2  je  0x9e32
0x9e24  3  cmp  dl, 0x39
0x9e27  2  jne  0x9e2c
0x9e29  3  add  dl, bpl
0x9e2c  2  inc  dl
0x9e2e  2  mov  byte ptr [rcx], dl
0x9e30  2  jmp  0x9e35
0x9e32  3  inc  byte ptr [rcx - 1]
0x9e35  2  test  edi, edi
0x9e37  2  jle  0x9e56
0x9e39  3  mov  r8d, edi
0x9e3c  3  mov  rcx, rsi
0x9e3f  2  mov  ebx, edi
0x9e41  5  mov  edi, 0x30
0x9e46  3  mov  dl, dil
0x9e49  5  call  0x1f03
0x9e4e  3  add  rsi, rbx
0x9e51  3  xor  r11d, r11d
0x9e54  2  jmp  0x9e5b
0x9e56  5  mov  edi, 0x30
0x9e5b  4  cmp  byte ptr [r12], r11b
0x9e5f  4  cmove  rsi, r12
0x9e63  4  shl  r13b, 5
0x9e67  4  add  r13b, 0x50
0x9e6b  3  mov  byte ptr [rsi], r13b
0x9e6e  4  lea  r9, [rsi + 2]
0x9e72  3  mov  rax, qword ptr [r14]
0x9e75  4  shr  rax, 0x34
0x9e79  5  and  eax, 0x7ff
0x9e7e  2  mov  ecx, eax
0x9e80  3  sub  rcx, r15
0x9e83  3  mov  rdx, rcx
0x9e86  2  jns  0x9e8e
0x9e88  3  mov  rcx, r15
0x9e8b  3  sub  rcx, rax
0x9e8e  3  test  rdx, rdx
0x9e91  5  mov  eax, 0x2b
0x9e96  3  mov  r8, r9
0x9e99  3  lea  edx, [rax + 2]
0x9e9c  3  cmovs  eax, edx
0x9e9f  3  mov  byte ptr [rsi + 1], al
0x9ea2  3  mov  byte ptr [r9], dil
0x9ea5  7  cmp  rcx, 0x3e8
0x9eac  2  jl  0x9ee2
0x9eae  10  movabs  rax, 0x20c49ba5e353f7cf
0x9eb8  4  lea  r8, [r9 + 1]
0x9ebc  3  imul  rcx
0x9ebf  4  sar  rdx, 7
0x9ec3  3  mov  rax, rdx
0x9ec6  4  shr  rax, 0x3f
0x9eca  3  add  rdx, rax
0x9ecd  3  lea  eax, [rdi + rdx]
0x9ed0  3  mov  byte ptr [r9], al
0x9ed3  7  imul  rax, rdx, -0x3e8
0x9eda  3  add  rcx, rax
0x9edd  3  cmp  r8, r9
0x9ee0  2  jne  0x9ee8
0x9ee2  4  cmp  rcx, 0x64
0x9ee6  2  jl  0x9f1b
0x9ee8  10  movabs  rax, 0xa3d70a3d70a3d70b
0x9ef2  3  imul  rcx
0x9ef5  3  add  rdx, rcx
0x9ef8  4  sar  rdx, 6
0x9efc  3  mov  rax, rdx
0x9eff  4  shr  rax, 0x3f
0x9f03  3  add  rdx, rax
0x9f06  3  lea  eax, [rdi + rdx]
0x9f09  3  mov  byte ptr [r8], al
0x9f0c  3  inc  r8
0x9f0f  4  imul  rax, rdx, -0x64
0x9f13  3  add  rcx, rax
0x9f16  3  cmp  r8, r9
0x9f19  2  jne  0x9f21
0x9f1b  4  cmp  rcx, 0xa
0x9f1f  2  jl  0x9f4c
0x9f21  10  movabs  rax, 0x6666666666666667
0x9f2b  3  imul  rcx
0x9f2e  4  sar  rdx, 2
0x9f32  3  mov  rax, rdx
0x9f35  4  shr  rax, 0x3f
0x9f39  3  add  rdx, rax
0x9f3c  3  lea  eax, [rdi + rdx]
0x9f3f  3  mov  byte ptr [r8], al
0x9f42  3  inc  r8
0x9f45  4  imul  rax, rdx, -0xa
0x9f49  3  add  rcx, rax
0x9f4c  3  add  cl, dil
0x9f4f  3  mov  byte ptr [r8], cl
0x9f52  4  mov  byte ptr [r8 + 1], r11b
0x9f56  2  xor  eax, eax
0x9f58  5  lea  r11, [rsp + 0x50]
0x9f5d  4  mov  rbx, qword ptr [r11 + 0x30]
0x9f61  4  mov  rbp, qword ptr [r11 + 0x40]
0x9f65  4  mov  rsi, qword ptr [r11 + 0x48]
0x9f69  3  mov  rsp, r11
0x9f6c  2  pop  r15
0x9f6e  2  pop  r14
0x9f70  2  pop  r13
0x9f72  2  pop  r12
0x9f74  1  pop  rdi
0x9f75  1  ret  
0x9f76  1  int3  
0x9f77  3  mov  r11, rsp
0x9f7a  4  mov  qword ptr [r11 + 8], rbx
0x9f7e  4  mov  qword ptr [r11 + 0x10], rbp
0x9f82  4  mov  qword ptr [r11 + 0x18], rsi
0x9f86  4  mov  qword ptr [r11 + 0x20], rdi
0x9f8a  2  push  r14
0x9f8c  4  sub  rsp, 0x50
0x9f90  8  mov  rax, qword ptr [rsp + 0x80]
0x9f98  3  mov  rsi, r8
0x9f9b  7  mov  ebp, dword ptr [rsp + 0x88]
0x9fa2  3  mov  rdi, rdx
0x9fa5  3  mov  rcx, qword ptr [rcx]
0x9fa8  6  mov  r8d, 1
0x9fae  4  mov  qword ptr [r11 - 0x30], rax
0x9fb2  4  mov  qword ptr [r11 - 0x38], r9
0x9fb6  4  lea  r9, [r11 - 0x18]
0x9fba  3  lea  edx, [rbp + 1]
0x9fbd  5  call  0xfd2f
0x9fc2  8  mov  r14, qword ptr [rsp + 0xa8]
0x9fca  4  lea  r8d, [rbp + 1]
0x9fce  3  xor  r9d, r9d
0x9fd1  5  mov  qword ptr [rsp + 0x30], r14
0x9fd6  5  cmp  dword ptr [rsp + 0x40], 0x2d
0x9fdb  3  mov  r10d, eax
0x9fde  7  mov  eax, dword ptr [rsp + 0xa0]
0x9fe5  3  mov  rdx, rsi
0x9fe8  4  sete  r9b
0x9fec  4  mov  dword ptr [rsp + 0x28], eax
0x9ff0  2  xor  ecx, ecx
0x9ff2  5  mov  dword ptr [rsp + 0x20], r10d
0x9ff7  2  test  ebp, ebp
0x9ff9  3  setg  cl
0x9ffc  3  sub  rdx, rcx
0x9fff  3  sub  rdx, r9
0xa002  4  cmp  rsi, -1
0xa006  4  cmove  rdx, rsi
0xa00a  3  add  rcx, r9
0xa00d  3  add  rcx, rdi
0xa010  5  lea  r9, [rsp + 0x40]
0xa015  5  call  0xf77f
0xa01a  2  test  eax, eax
0xa01c  2  je  0xa023
0xa01e  3  mov  byte ptr [rdi], 0
0xa021  2  jmp  0xa058
0xa023  8  mov  r9b, byte ptr [rsp + 0x90]
0xa02b  5  lea  rax, [rsp + 0x40]
0xa030  5  mov  qword ptr [rsp + 0x38], r14
0xa035  3  mov  r8d, ebp
0xa038  5  mov  byte ptr [rsp + 0x30], 0
0xa03d  3  mov  rdx, rsi
0xa040  5  mov  qword ptr [rsp + 0x28], rax
0xa045  3  mov  rcx, rdi
0xa048  7  mov  eax, dword ptr [rsp + 0x98]
0xa04f  4  mov  dword ptr [rsp + 0x20], eax
0xa053  5  call  0xa073
0xa058  5  mov  rbx, qword ptr [rsp + 0x60]
0xa05d  5  mov  rbp, qword ptr [rsp + 0x68]
0xa062  5  mov  rsi, qword ptr [rsp + 0x70]
0xa067  5  mov  rdi, qword ptr [rsp + 0x78]
0xa06c  4  add  rsp, 0x50
0xa070  2  pop  r14
0xa072  1  ret  
0xa073  3  mov  r11, rsp
0xa076  4  mov  qword ptr [r11 + 8], rbx
0xa07a  4  mov  qword ptr [r11 + 0x10], rbp
0xa07e  4  mov  qword ptr [r11 + 0x18], rsi
0xa082  4  mov  qword ptr [r11 + 0x20], rdi
0xa086  2  push  r13
0xa088  2  push  r14
0xa08a  2  push  r15
0xa08c  4  sub  rsp, 0x30
0xa090  2  xor  eax, eax
0xa092  3  movsxd  rbp, r8d
0xa095  3  test  r8d, r8d
0xa098  3  mov  r13b, r9b
0xa09b  3  mov  r15, rdx
0xa09e  3  mov  rdi, rcx
0xa0a1  3  cmovg  eax, ebp
0xa0a4  3  add  eax, 9
0xa0a7  2  cdqe  
0xa0a9  3  cmp  rdx, rax
0xa0ac  2  ja  0xa0fb
0xa0ae  8  mov  rcx, qword ptr [rsp + 0x88]
0xa0b6  5  mov  ebx, 0x22
0xa0bb  4  mov  qword ptr [r11 - 0x20], rcx
0xa0bf  3  xor  r9d, r9d
0xa0c2  5  and  qword ptr [r11 - 0x28], 0
0xa0c7  3  xor  r8d, r8d
0xa0ca  2  xor  edx, edx
0xa0cc  4  mov  byte ptr [rcx + 0x30], 1
0xa0d0  3  mov  dword ptr [rcx + 0x2c], ebx
0xa0d3  2  xor  ecx, ecx
0xa0d5  5  call  0x8867
0xa0da  2  mov  eax, ebx
0xa0dc  5  mov  rbx, qword ptr [rsp + 0x50]
0xa0e1  5  mov  rbp, qword ptr [rsp + 0x58]
0xa0e6  5  mov  rsi, qword ptr [rsp + 0x60]
0xa0eb  5  mov  rdi, qword ptr [rsp + 0x68]
0xa0f0  4  add  rsp, 0x30
0xa0f4  2  pop  r15
0xa0f6  2  pop  r14
0xa0f8  2  pop  r13
0xa0fa  1  ret  
0xa0fb  8  cmp  byte ptr [rsp + 0x80], 0
0xa103  5  mov  rsi, qword ptr [rsp + 0x78]
0xa108  2  je  0xa134
0xa10a  2  xor  edx, edx
0xa10c  3  cmp  dword ptr [rsi], 0x2d
0xa10f  3  sete  dl
0xa112  3  add  rdx, rdi
0xa115  3  test  r8d, r8d
0xa118  2  jle  0xa134
0xa11a  4  or  r8, 0xffffffffffffffff
0xa11e  3  inc  r8
0xa121  5  cmp  byte ptr [rdx + r8], 0
0xa126  2  jne  0xa11e
0xa128  3  inc  r8
0xa12b  4  lea  rcx, [rdx + 1]
0xa12f  5  call  0x2dd3
0xa134  3  cmp  dword ptr [rsi], 0x2d
0xa137  3  mov  rbx, rdi
0xa13a  2  jne  0xa143
0xa13c  3  mov  byte ptr [rdi], 0x2d
0xa13f  4  lea  rbx, [rdi + 1]
0xa143  2  test  ebp, ebp
0xa145  2  jle  0xa178
0xa147  3  mov  al, byte ptr [rbx + 1]
0xa14a  8  mov  r14, qword ptr [rsp + 0x88]
0xa152  2  mov  byte ptr [rbx], al
0xa154  3  inc  rbx
0xa157  5  cmp  byte ptr [r14 + 0x28], 0
0xa15c  2  jne  0xa166
0xa15e  3  mov  rcx, r14
0xa161  5  call  0x6c63
0xa166  4  mov  rax, qword ptr [r14 + 0x18]
0xa16a  7  mov  rcx, qword ptr [rax + 0xf8]
0xa171  3  mov  rax, qword ptr [rcx]
0xa174  2  mov  cl, byte ptr [rax]
0xa176  2  mov  byte ptr [rbx], cl
0xa178  8  movzx  ecx, byte ptr [rsp + 0x80]
0xa180  7  lea  r8, [rip + 0xddb5]
0xa187  4  xor  rcx, 1
0xa18b  3  add  rbx, rbp
0xa18e  3  add  rbx, rcx
0xa191  3  sub  rdi, rbx
0xa194  3  mov  rcx, rbx
0xa197  4  cmp  r15, -1
0xa19b  4  lea  rdx, [r15 + rdi]
0xa19f  4  cmove  rdx, r15
0xa1a3  5  call  0x8427
0xa1a8  2  test  eax, eax
0xa1aa  6  jne  0xa23e
0xa1b0  4  lea  rcx, [rbx + 2]
0xa1b4  3  test  r13b, r13b
0xa1b7  2  je  0xa1bc
0xa1b9  3  mov  byte ptr [rbx], 0x45
0xa1bc  4  mov  rax, qword ptr [rsi + 8]
0xa1c0  3  cmp  byte ptr [rax], 0x30
0xa1c3  2  je  0xa21c
0xa1c5  4  mov  r8d, dword ptr [rsi + 4]
0xa1c9  4  sub  r8d, 1
0xa1cd  2  jns  0xa1d6
0xa1cf  3  neg  r8d
0xa1d2  4  mov  byte ptr [rbx + 1], 0x2d
0xa1d6  4  cmp  r8d, 0x64
0xa1da  2  jl  0xa1f7
0xa1dc  5  mov  eax, 0x51eb851f
0xa1e1  3  imul  r8d
0xa1e4  3  sar  edx, 5
0xa1e7  2  mov  eax, edx
0xa1e9  3  shr  eax, 0x1f
0xa1ec  2  add  edx, eax
0xa1ee  3  add  byte ptr [rbx + 2], dl
0xa1f1  3  imul  eax, edx, -0x64
0xa1f4  3  add  r8d, eax
0xa1f7  4  cmp  r8d, 0xa
0xa1fb  2  jl  0xa218
0xa1fd  5  mov  eax, 0x66666667
0xa202  3  imul  r8d
0xa205  3  sar  edx, 2
0xa208  2  mov  eax, edx
0xa20a  3  shr  eax, 0x1f
0xa20d  2  add  edx, eax
0xa20f  3  add  byte ptr [rbx + 3], dl
0xa212  3  imul  eax, edx, -0xa
0xa215  3  add  r8d, eax
0xa218  4  add  byte ptr [rbx + 4], r8b
0xa21c  5  cmp  dword ptr [rsp + 0x70], 2
0xa221  2  jne  0xa237
0xa223  3  cmp  byte ptr [rcx], 0x30
0xa226  2  jne  0xa237
0xa228  4  lea  rdx, [rcx + 1]
0xa22c  6  mov  r8d, 3
0xa232  5  call  0x2dd3
0xa237  2  xor  eax, eax
0xa239  5  jmp  0xa0dc
0xa23e  6  and  qword ptr [rsp + 0x20], 0
0xa244  3  xor  r9d, r9d
0xa247  3  xor  r8d, r8d
0xa24a  2  xor  edx, edx
0xa24c  2  xor  ecx, ecx
0xa24e  5  call  0x8953
0xa253  1  int3  
0xa254  1  int3  
0xa255  1  int3  
0xa256  1  int3  
0xa257  3  mov  r11, rsp
0xa25a  4  mov  qword ptr [r11 + 8], rbx
0xa25e  4  mov  qword ptr [r11 + 0x10], rbp
0xa262  4  mov  qword ptr [r11 + 0x18], rsi
0xa266  1  push  rdi
0xa267  4  sub  rsp, 0x50
0xa26b  8  mov  rax, qword ptr [rsp + 0x80]
0xa273  3  mov  rdi, r8
0xa276  7  mov  esi, dword ptr [rsp + 0x88]
0xa27d  3  mov  rbx, rdx
0xa280  3  mov  rcx, qword ptr [rcx]
0xa283  3  xorps  xmm0, xmm0
0xa286  4  mov  qword ptr [r11 - 0x30], rax
0xa28a  3  xor  r8d, r8d
0xa28d  4  mov  qword ptr [r11 - 0x38], r9
0xa291  2  mov  edx, esi
0xa293  4  lea  r9, [r11 - 0x18]
0xa297  5  movups  xmmword ptr [rsp + 0x40], xmm0
0xa29c  5  call  0xfd2f
0xa2a1  5  mov  r8d, dword ptr [rsp + 0x44]
0xa2a6  3  xor  r9d, r9d
0xa2a9  5  cmp  dword ptr [rsp + 0x40], 0x2d
0xa2ae  3  mov  r10d, eax
0xa2b1  7  mov  eax, dword ptr [rsp + 0x90]
0xa2b8  3  mov  rdx, rdi
0xa2bb  8  mov  rbp, qword ptr [rsp + 0x98]
0xa2c3  4  sete  r9b
0xa2c7  3  sub  rdx, r9
0xa2ca  5  mov  qword ptr [rsp + 0x30], rbp
0xa2cf  3  add  r8d, esi
0xa2d2  4  mov  dword ptr [rsp + 0x28], eax
0xa2d6  4  cmp  rdi, -1
0xa2da  5  mov  dword ptr [rsp + 0x20], r10d
0xa2df  4  lea  rcx, [r9 + rbx]
0xa2e3  4  cmove  rdx, rdi
0xa2e7  5  lea  r9, [rsp + 0x40]
0xa2ec  5  call  0xf77f
0xa2f1  2  test  eax, eax
0xa2f3  2  je  0xa2fa
0xa2f5  3  mov  byte ptr [rbx], 0
0xa2f8  2  jmp  0xa317
0xa2fa  5  mov  qword ptr [rsp + 0x28], rbp
0xa2ff  5  lea  r9, [rsp + 0x40]
0xa304  3  mov  r8d, esi
0xa307  5  mov  byte ptr [rsp + 0x20], 0
0xa30c  3  mov  rdx, rdi
0xa30f  3  mov  rcx, rbx
0xa312  5  call  0xa32f
0xa317  5  mov  rbx, qword ptr [rsp + 0x60]
0xa31c  5  mov  rbp, qword ptr [rsp + 0x68]
0xa321  5  mov  rsi, qword ptr [rsp + 0x70]
0xa326  4  add  rsp, 0x50
0xa32a  1  pop  rdi
0xa32b  1  ret  
0xa32c  1  int3  
0xa32d  1  int3  
0xa32e  1  int3  
0xa32f  5  mov  qword ptr [rsp + 8], rbx
0xa334  5  mov  qword ptr [rsp + 0x10], rbp
0xa339  5  mov  qword ptr [rsp + 0x18], rsi
0xa33e  1  push  rdi
0xa33f  2  push  r14
0xa341  2  push  r15
0xa343  4  sub  rsp, 0x20
0xa347  5  cmp  byte ptr [rsp + 0x60], 0
0xa34c  3  mov  rbx, rcx
0xa34f  4  movsxd  rcx, dword ptr [r9 + 4]
0xa353  3  mov  r14, r9
0xa356  3  mov  ebp, r8d
0xa359  2  je  0xa376
0xa35b  3  lea  eax, [rcx - 1]
0xa35e  3  cmp  eax, r8d
0xa361  2  jne  0xa376
0xa363  2  xor  eax, eax
0xa365  4  cmp  dword ptr [r9], 0x2d
0xa369  3  sete  al
0xa36c  3  add  rax, rbx
0xa36f  7  mov  word ptr [rcx + rax - 1], 0x30
0xa376  4  cmp  dword ptr [r9], 0x2d
0xa37a  2  jne  0xa382
0xa37c  3  mov  byte ptr [rbx], 0x2d
0xa37f  3  inc  rbx
0xa382  4  movsxd  rax, dword ptr [r9 + 4]
0xa386  4  or  rdi, 0xffffffffffffffff
0xa38a  2  test  eax, eax
0xa38c  2  jg  0xa3d7
0xa38e  2  jne  0xa39d
0xa390  4  mov  rax, qword ptr [r9 + 8]
0xa394  3  cmp  byte ptr [rax], 0x30
0xa397  2  jne  0xa39d
0xa399  2  mov  al, 1
0xa39b  2  jmp  0xa39f
0xa39d  2  xor  al, al
0xa39f  5  cmp  byte ptr [rsp + 0x60], 0
0xa3a4  2  je  0xa3b0
0xa3a6  2  test  al, al
0xa3a8  2  je  0xa3b0
0xa3aa  4  lea  rsi, [rbx + 1]
0xa3ae  2  jmp  0xa3cf
0xa3b0  4  lea  rsi, [rbx + 1]
0xa3b4  3  mov  r8, rdi
0xa3b7  3  inc  r8
0xa3ba  5  cmp  byte ptr [rbx + r8], 0
0xa3bf  2  jne  0xa3b7
0xa3c1  3  inc  r8
0xa3c4  3  mov  rdx, rbx
0xa3c7  3  mov  rcx, rsi
0xa3ca  5  call  0x2dd3
0xa3cf  3  mov  byte ptr [rbx], 0x30
0xa3d2  3  mov  rbx, rsi
0xa3d5  2  jmp  0xa3da
0xa3d7  3  add  rbx, rax
0xa3da  2  test  ebp, ebp
0xa3dc  6  jle  0xa46a
0xa3e2  4  lea  rsi, [rbx + 1]
0xa3e6  3  mov  r8, rdi
0xa3e9  3  inc  r8
0xa3ec  5  cmp  byte ptr [rbx + r8], 0
0xa3f1  2  jne  0xa3e9
0xa3f3  3  inc  r8
0xa3f6  3  mov  rdx, rbx
0xa3f9  3  mov  rcx, rsi
0xa3fc  5  call  0x2dd3
0xa401  5  mov  r15, qword ptr [rsp + 0x68]
0xa406  5  cmp  byte ptr [r15 + 0x28], 0
0xa40b  2  jne  0xa415
0xa40d  3  mov  rcx, r15
0xa410  5  call  0x6c63
0xa415  4  mov  rax, qword ptr [r15 + 0x18]
0xa419  7  mov  rcx, qword ptr [rax + 0xf8]
0xa420  3  mov  rax, qword ptr [rcx]
0xa423  2  mov  cl, byte ptr [rax]
0xa425  2  mov  byte ptr [rbx], cl
0xa427  4  mov  eax, dword ptr [r14 + 4]
0xa42b  2  test  eax, eax
0xa42d  2  jns  0xa46a
0xa42f  2  neg  eax
0xa431  5  cmp  byte ptr [rsp + 0x60], 0
0xa436  2  jne  0xa43c
0xa438  2  cmp  eax, ebp
0xa43a  2  jge  0xa43e
0xa43c  2  mov  ebp, eax
0xa43e  3  movsxd  rbx, ebp
0xa441  3  inc  rdi
0xa444  4  cmp  byte ptr [rsi + rdi], 0
0xa448  2  jne  0xa441
0xa44a  4  lea  r8, [rdi + 1]
0xa44e  3  mov  rdx, rsi
0xa451  4  lea  rcx, [rbx + rsi]
0xa455  5  call  0x2dd3
0xa45a  3  mov  r8, rbx
0xa45d  5  mov  edx, 0x30
0xa462  3  mov  rcx, rsi
0xa465  5  call  0x1f03
0xa46a  5  mov  rbx, qword ptr [rsp + 0x40]
0xa46f  2  xor  eax, eax
0xa471  5  mov  rbp, qword ptr [rsp + 0x48]
0xa476  5  mov  rsi, qword ptr [rsp + 0x50]
0xa47b  4  add  rsp, 0x20
0xa47f  2  pop  r15
0xa481  2  pop  r14
0xa483  1  pop  rdi
0xa484  1  ret  
0xa485  1  int3  
0xa486  1  int3  
0xa487  3  mov  r11, rsp
0xa48a  4  mov  qword ptr [r11 + 8], rbx
0xa48e  4  mov  qword ptr [r11 + 0x10], rbp
0xa492  4  mov  qword ptr [r11 + 0x18], rdi
0xa496  4  mov  qword ptr [r11 + 0x20], r14
0xa49a  2  push  r15
0xa49c  4  sub  rsp, 0x50
0xa4a0  8  mov  rax, qword ptr [rsp + 0x80]
0xa4a8  3  mov  rbp, r8
0xa4ab  3  mov  rcx, qword ptr [rcx]
0xa4ae  3  mov  rdi, rdx
0xa4b1  7  mov  edx, dword ptr [rsp + 0x88]
0xa4b8  3  xorps  xmm0, xmm0
0xa4bb  4  mov  qword ptr [r11 - 0x30], rax
0xa4bf  3  xor  r8d, r8d
0xa4c2  4  mov  qword ptr [r11 - 0x38], r9
0xa4c6  4  lea  r9, [r11 - 0x18]
0xa4ca  5  movups  xmmword ptr [rsp + 0x40], xmm0
0xa4cf  5  call  0xfd2f
0xa4d4  5  mov  r15d, dword ptr [rsp + 0x44]
0xa4d9  3  xor  r8d, r8d
0xa4dc  5  cmp  dword ptr [rsp + 0x40], 0x2d
0xa4e1  3  mov  r9d, eax
0xa4e4  7  mov  eax, dword ptr [rsp + 0xa0]
0xa4eb  3  mov  rdx, rbp
0xa4ee  8  mov  r14, qword ptr [rsp + 0xa8]
0xa4f6  4  sete  r8b
0xa4fa  3  sub  rdx, r8
0xa4fd  5  mov  qword ptr [rsp + 0x30], r14
0xa502  4  mov  dword ptr [rsp + 0x28], eax
0xa506  3  dec  r15d
0xa509  5  mov  dword ptr [rsp + 0x20], r9d
0xa50e  4  cmp  rbp, -1
0xa512  4  lea  rbx, [r8 + rdi]
0xa516  8  mov  r8d, dword ptr [rsp + 0x88]
0xa51e  4  cmove  rdx, rbp
0xa522  5  lea  r9, [rsp + 0x40]
0xa527  3  mov  rcx, rbx
0xa52a  5  call  0xf77f
0xa52f  2  test  eax, eax
0xa531  2  je  0xa53b
0xa533  3  mov  byte ptr [rdi], 0
0xa536  5  jmp  0xa5be
0xa53b  4  mov  eax, dword ptr [rsp + 0x44]
0xa53f  2  dec  eax
0xa541  3  cmp  eax, -4
0xa544  2  jl  0xa584
0xa546  7  cmp  eax, dword ptr [rsp + 0x88]
0xa54d  2  jge  0xa584
0xa54f  3  cmp  r15d, eax
0xa552  2  jge  0xa560
0xa554  2  mov  al, byte ptr [rbx]
0xa556  3  inc  rbx
0xa559  2  test  al, al
0xa55b  2  jne  0xa554
0xa55d  3  mov  byte ptr [rbx - 2], al
0xa560  8  mov  r8d, dword ptr [rsp + 0x88]
0xa568  5  lea  r9, [rsp + 0x40]
0xa56d  5  mov  qword ptr [rsp + 0x28], r14
0xa572  3  mov  rdx, rbp
0xa575  3  mov  rcx, rdi
0xa578  5  mov  byte ptr [rsp + 0x20], 1
0xa57d  5  call  0xa32f
0xa582  2  jmp  0xa5be
0xa584  8  mov  r9b, byte ptr [rsp + 0x90]
0xa58c  5  lea  rax, [rsp + 0x40]
0xa591  8  mov  r8d, dword ptr [rsp + 0x88]
0xa599  3  mov  rdx, rbp
0xa59c  5  mov  qword ptr [rsp + 0x38], r14
0xa5a1  3  mov  rcx, rdi
0xa5a4  5  mov  byte ptr [rsp + 0x30], 1
0xa5a9  5  mov  qword ptr [rsp + 0x28], rax
0xa5ae  7  mov  eax, dword ptr [rsp + 0x98]
0xa5b5  4  mov  dword ptr [rsp + 0x20], eax
0xa5b9  5  call  0xa073
0xa5be  5  mov  rbx, qword ptr [rsp + 0x60]
0xa5c3  5  mov  rbp, qword ptr [rsp + 0x68]
0xa5c8  5  mov  rdi, qword ptr [rsp + 0x70]
0xa5cd  5  mov  r14, qword ptr [rsp + 0x78]
0xa5d2  4  add  rsp, 0x50
0xa5d6  2  pop  r15
0xa5d8  1  ret  
0xa5d9  1  int3  
0xa5da  1  int3  
0xa5db  3  mov  rax, rsp
0xa5de  4  mov  qword ptr [rax + 8], rbx
0xa5e2  4  mov  qword ptr [rax + 0x10], rbp
0xa5e6  4  mov  qword ptr [rax + 0x18], rsi
0xa5ea  4  mov  qword ptr [rax + 0x20], rdi
0xa5ee  2  push  r12
0xa5f0  2  push  r14
0xa5f2  2  push  r15
0xa5f4  4  sub  rsp, 0x20
0xa5f8  3  mov  rbx, qword ptr [rcx]
0xa5fb  10  movabs  r12, 0xfffffffffffff
0xa605  3  and  rbx, rdx
0xa608  4  movsx  r14d, r8w
0xa60c  3  and  rbx, r12
0xa60f  3  mov  rdi, rcx
0xa612  3  mov  ecx, r14d
0xa615  3  xor  r15d, r15d
0xa618  3  shr  rbx, cl
0xa61b  3  mov  rbp, rdx
0xa61e  3  test  r9d, r9d
0xa621  2  jne  0xa62f
0xa623  4  cmp  bx, 8
0xa627  3  setae  al
0xa62a  5  jmp  0xa6d2
0xa62f  5  call  0x11047
0xa634  2  test  eax, eax
0xa636  2  jne  0xa6aa
0xa638  3  mov  r8, qword ptr [rdi]
0xa63b  3  mov  ecx, r14d
0xa63e  3  mov  rax, r8
0xa641  3  and  rax, rbp
0xa644  3  and  rax, r12
0xa647  3  shr  rax, cl
0xa64a  4  cmp  ax, 8
0xa64e  2  jbe  0xa657
0xa650  5  mov  edx, 1
0xa655  2  jmp  0xa6a6
0xa657  2  jae  0xa65e
0xa659  3  mov  dl, r15b
0xa65c  2  jmp  0xa6a6
0xa65e  5  mov  edx, 1
0xa663  2  mov  eax, edx
0xa665  3  shl  rax, cl
0xa668  3  sub  rax, rdx
0xa66b  3  and  rax, r8
0xa66e  3  test  r12, rax
0xa671  2  jne  0xa6a6
0xa673  4  cmp  r14d, 0x30
0xa677  2  je  0xa692
0xa679  4  shr  r8, 4
0xa67d  10  movabs  rax, 0xffffffffffff
0xa687  3  and  r8, rbp
0xa68a  3  and  r8, rax
0xa68d  3  shr  r8, cl
0xa690  2  jmp  0xa6a3
0xa692  10  movabs  rax, 0x7ff0000000000000
0xa69c  3  test  rax, r8
0xa69f  4  setne  r8b
0xa6a3  3  and  dl, r8b
0xa6a6  2  mov  al, dl
0xa6a8  2  jmp  0xa6d2
0xa6aa  5  cmp  eax, 0x200
0xa6af  2  jne  0xa6bd
0xa6b1  3  test  bx, bx
0xa6b4  2  je  0xa659
0xa6b6  3  cmp  qword ptr [rdi], r15
0xa6b9  2  jl  0xa659
0xa6bb  2  jmp  0xa650
0xa6bd  5  cmp  eax, 0x100
0xa6c2  2  jne  0xa6d0
0xa6c4  3  test  bx, bx
0xa6c7  2  je  0xa659
0xa6c9  3  cmp  qword ptr [rdi], r15
0xa6cc  2  jge  0xa659
0xa6ce  2  jmp  0xa650
0xa6d0  2  xor  al, al
0xa6d2  5  mov  rbx, qword ptr [rsp + 0x40]
0xa6d7  5  mov  rbp, qword ptr [rsp + 0x48]
0xa6dc  5  mov  rsi, qword ptr [rsp + 0x50]
0xa6e1  5  mov  rdi, qword ptr [rsp + 0x58]
0xa6e6  4  add  rsp, 0x20
0xa6ea  2  pop  r15
0xa6ec  2  pop  r14
0xa6ee  2  pop  r12
0xa6f0  1  ret  
0xa6f1  1  int3  
0xa6f2  1  int3  
0xa6f3  5  mov  qword ptr [rsp + 8], rbx
0xa6f8  5  mov  qword ptr [rsp + 0x10], rsi
0xa6fd  1  push  rdi
0xa6fe  4  sub  rsp, 0x50
0xa702  3  mov  r11, r8
0xa705  3  mov  r10, rdx
0xa708  3  mov  rdi, rcx
0xa70b  3  test  rdx, rdx
0xa70e  2  jne  0xa743
0xa710  8  mov  rcx, qword ptr [rsp + 0xa8]
0xa718  3  lea  ebx, [rdx + 0x16]
0xa71b  5  mov  qword ptr [rsp + 0x28], rcx
0xa720  4  mov  byte ptr [rcx + 0x30], 1
0xa724  3  mov  dword ptr [rcx + 0x2c], ebx
0xa727  6  and  qword ptr [rsp + 0x20], 0
0xa72d  3  xor  r9d, r9d
0xa730  3  xor  r8d, r8d
0xa733  2  xor  edx, edx
0xa735  2  xor  ecx, ecx
0xa737  5  call  0x8867
0xa73c  2  mov  eax, ebx
0xa73e  5  jmp  0xa9b2
0xa743  3  test  r11, r11
0xa746  2  jne  0xa763
0xa748  8  mov  rax, qword ptr [rsp + 0xa8]
0xa750  5  mov  ebx, 0x16
0xa755  5  mov  qword ptr [rsp + 0x28], rax
0xa75a  4  mov  byte ptr [rax + 0x30], 1
0xa75e  3  mov  dword ptr [rax + 0x2c], ebx
0xa761  2  jmp  0xa727
0xa763  3  test  r9, r9
0xa766  2  je  0xa748
0xa768  8  mov  r8, qword ptr [rsp + 0x80]
0xa770  3  test  r8, r8
0xa773  2  je  0xa748
0xa775  7  mov  ecx, dword ptr [rsp + 0x88]
0xa77c  3  cmp  ecx, 0x41
0xa77f  2  je  0xa78e
0xa781  3  lea  eax, [rcx - 0x45]
0xa784  3  cmp  eax, 2
0xa787  2  jbe  0xa78e
0xa789  3  xor  sil, sil
0xa78c  2  jmp  0xa791
0xa78e  3  mov  sil, 1
0xa791  8  mov  rbx, qword ptr [rsp + 0x98]
0xa799  3  test  bl, 8
0xa79c  6  jne  0xa888
0xa7a2  3  mov  rdx, qword ptr [rdi]
0xa7a5  3  mov  rax, rdx
0xa7a8  4  shr  rax, 0x34
0xa7ac  5  and  eax, 0x7ff
0xa7b1  6  cmp  rax, 0x7ff
0xa7b7  6  jne  0xa888
0xa7bd  10  movabs  rcx, 0xfffffffffffff
0xa7c7  3  mov  rax, rdx
0xa7ca  6  mov  r8d, 0xc
0xa7d0  3  and  rax, rcx
0xa7d3  2  jne  0xa7d9
0xa7d5  2  xor  ecx, ecx
0xa7d7  2  jmp  0xa806
0xa7d9  10  movabs  rcx, 0x8000000000000
0xa7e3  3  test  rdx, rdx
0xa7e6  2  jns  0xa7f2
0xa7e8  3  cmp  rax, rcx
0xa7eb  2  jne  0xa7f2
0xa7ed  3  mov  rcx, r8
0xa7f0  2  jmp  0xa806
0xa7f2  3  mov  rax, rdx
0xa7f5  3  and  rax, rcx
0xa7f8  3  neg  rax
0xa7fb  3  sbb  rcx, rcx
0xa7fe  4  and  rcx, 0xfffffffffffffffc
0xa802  4  add  rcx, 8
0xa806  4  shr  rdx, 0x3f
0xa80a  4  lea  rax, [rdx + 4]
0xa80e  3  cmp  r11, rax
0xa811  2  jae  0xa819
0xa813  4  mov  byte ptr [r10], 0
0xa817  2  jmp  0xa880
0xa819  4  or  r8, 0xffffffffffffffff
0xa81d  2  test  dl, dl
0xa81f  2  je  0xa834
0xa821  4  mov  byte ptr [r10], 0x2d
0xa825  3  inc  r10
0xa828  4  mov  byte ptr [r10], 0
0xa82c  3  cmp  r11, r8
0xa82f  2  je  0xa834
0xa831  3  dec  r11
0xa834  4  movzx  edx, sil
0xa838  7  lea  rbx, [rip + 0xd631]
0xa83f  3  xor  edx, 1
0xa842  2  add  edx, edx
0xa844  2  mov  eax, edx
0xa846  3  add  rax, rcx
0xa849  4  mov  r9, qword ptr [rbx + rax*8]
0xa84d  3  inc  r8
0xa850  5  cmp  byte ptr [r9 + r8], 0
0xa855  2  jne  0xa84d
0xa857  2  xor  eax, eax
0xa859  3  cmp  r11, r8
0xa85c  3  setbe  al
0xa85f  4  lea  r8d, [rdx + rax]
0xa863  3  mov  rdx, r11
0xa866  3  add  r8, rcx
0xa869  3  mov  rcx, r10
0xa86c  4  mov  r8, qword ptr [rbx + r8*8]
0xa870  5  call  0x8427
0xa875  2  test  eax, eax
0xa877  6  jne  0xa9c2
0xa87d  3  xor  r8d, r8d
0xa880  3  mov  eax, r8d
0xa883  5  jmp  0xa9b2
0xa888  3  mov  rdx, rbx
0xa88b  3  and  bl, 0x20
0xa88e  4  shr  rdx, 4
0xa892  3  and  edx, 1
0xa895  3  or  edx, 2
0xa898  2  neg  bl
0xa89a  2  sbb  ebx, ebx
0xa89c  7  and  ebx, dword ptr [rsp + 0xa0]
0xa8a3  3  sub  ecx, 0x41
0xa8a6  6  je  0xa97a
0xa8ac  3  sub  ecx, 4
0xa8af  6  je  0xa940
0xa8b5  3  sub  ecx, 1
0xa8b8  2  je  0xa90f
0xa8ba  3  sub  ecx, 1
0xa8bd  2  je  0xa8d2
0xa8bf  3  sub  ecx, 0x1a
0xa8c2  6  je  0xa97a
0xa8c8  3  sub  ecx, 4
0xa8cb  2  je  0xa940
0xa8cd  3  cmp  ecx, 1
0xa8d0  2  je  0xa90f
0xa8d2  8  mov  rax, qword ptr [rsp + 0xa8]
0xa8da  3  mov  rcx, rdi
0xa8dd  5  mov  qword ptr [rsp + 0x48], rax
0xa8e2  7  mov  eax, dword ptr [rsp + 0x90]
0xa8e9  4  mov  dword ptr [rsp + 0x40], ebx
0xa8ed  4  mov  dword ptr [rsp + 0x38], edx
0xa8f1  3  mov  rdx, r10
0xa8f4  5  mov  byte ptr [rsp + 0x30], sil
0xa8f9  4  mov  dword ptr [rsp + 0x28], eax
0xa8fd  5  mov  qword ptr [rsp + 0x20], r8
0xa902  3  mov  r8, r11
0xa905  5  call  0xa487
0xa90a  5  jmp  0xa9b2
0xa90f  8  mov  rax, qword ptr [rsp + 0xa8]
0xa917  3  mov  rdx, r10
0xa91a  5  mov  qword ptr [rsp + 0x38], rax
0xa91f  3  mov  rcx, rdi
0xa922  7  mov  eax, dword ptr [rsp + 0x90]
0xa929  4  mov  dword ptr [rsp + 0x30], ebx
0xa92d  4  mov  dword ptr [rsp + 0x28], eax
0xa931  5  mov  qword ptr [rsp + 0x20], r8
0xa936  3  mov  r8, r11
0xa939  5  call  0xa257
0xa93e  2  jmp  0xa9b2
0xa940  8  mov  rax, qword ptr [rsp + 0xa8]
0xa948  3  mov  rcx, rdi
0xa94b  5  mov  qword ptr [rsp + 0x48], rax
0xa950  7  mov  eax, dword ptr [rsp + 0x90]
0xa957  4  mov  dword ptr [rsp + 0x40], ebx
0xa95b  4  mov  dword ptr [rsp + 0x38], edx
0xa95f  3  mov  rdx, r10
0xa962  5  mov  byte ptr [rsp + 0x30], sil
0xa967  4  mov  dword ptr [rsp + 0x28], eax
0xa96b  5  mov  qword ptr [rsp + 0x20], r8
0xa970  3  mov  r8, r11
0xa973  5  call  0x9f77
0xa978  2  jmp  0xa9b2
0xa97a  8  mov  rax, qword ptr [rsp + 0xa8]
0xa982  3  mov  rcx, rdi
0xa985  5  mov  qword ptr [rsp + 0x48], rax
0xa98a  7  mov  eax, dword ptr [rsp + 0x90]
0xa991  4  mov  dword ptr [rsp + 0x40], ebx
0xa995  4  mov  dword ptr [rsp + 0x38], edx
0xa999  3  mov  rdx, r10
0xa99c  5  mov  byte ptr [rsp + 0x30], sil
0xa9a1  4  mov  dword ptr [rsp + 0x28], eax
0xa9a5  5  mov  qword ptr [rsp + 0x20], r8
0xa9aa  3  mov  r8, r11
0xa9ad  5  call  0x9bdf
0xa9b2  5  mov  rbx, qword ptr [rsp + 0x60]
0xa9b7  5  mov  rsi, qword ptr [rsp + 0x68]
0xa9bc  4  add  rsp, 0x50
0xa9c0  1  pop  rdi
0xa9c1  1  ret  
0xa9c2  6  and  qword ptr [rsp + 0x20], 0
0xa9c8  3  xor  r9d, r9d
0xa9cb  3  xor  r8d, r8d
0xa9ce  2  xor  edx, edx
0xa9d0  2  xor  ecx, ecx
0xa9d2  5  call  0x8953
0xa9d7  1  int3  
0xa9d8  1  int3  
0xa9d9  1  int3  
0xa9da  1  int3  
0xa9db  5  mov  qword ptr [rsp + 8], rbx
0xa9e0  5  mov  qword ptr [rsp + 0x18], rbp
0xa9e5  6  mov  word ptr [rsp + 0x20], r9w
0xa9eb  1  push  rsi
0xa9ec  1  push  rdi
0xa9ed  2  push  r14
0xa9ef  4  sub  rsp, 0x40
0xa9f3  2  xor  ebx, ebx
0xa9f5  3  mov  rbp, r8
0xa9f8  3  mov  r14, rdx
0xa9fb  3  mov  rsi, rcx
0xa9fe  3  test  rdx, rdx
0xaa01  2  jne  0xaa18
0xaa03  3  test  r8, r8
0xaa06  2  je  0xaa18
0xaa08  3  test  rcx, rcx
0xaa0b  6  je  0xab35
0xaa11  2  mov  dword ptr [rcx], ebx
0xaa13  5  jmp  0xab35
0xaa18  3  test  rsi, rsi
0xaa1b  2  je  0xaa20
0xaa1d  3  or  dword ptr [rcx], 0xffffffff
0xaa20  8  mov  rdi, qword ptr [rsp + 0x80]
0xaa28  7  cmp  rbp, 0x7fffffff
0xaa2f  2  jbe  0xaa3b
0xaa31  5  mov  esi, 0x16
0xaa36  5  jmp  0xab64
0xaa3b  3  cmp  byte ptr [rdi + 0x28], bl
0xaa3e  2  jne  0xaa4e
0xaa40  3  mov  rcx, rdi
0xaa43  5  call  0x6c63
0xaa48  6  movzx  r9d, word ptr [rsp + 0x78]
0xaa4e  4  mov  rax, qword ptr [rdi + 0x18]
0xaa52  3  mov  ecx, dword ptr [rax + 0xc]
0xaa55  6  cmp  ecx, 0xfde9
0xaa5b  2  jne  0xaa92
0xaa5d  4  movzx  edx, r9w
0xaa61  5  lea  r8, [rsp + 0x68]
0xaa66  3  mov  r9, rdi
0xaa69  5  mov  qword ptr [rsp + 0x68], rbx
0xaa6e  3  mov  rcx, r14
0xaa71  5  call  0x1105b
0xaa76  3  test  rsi, rsi
0xaa79  2  je  0xaa7d
0xaa7b  2  mov  dword ptr [rsi], eax
0xaa7d  3  cmp  eax, 4
0xaa80  6  jle  0xab35
0xaa86  3  cmp  byte ptr [rdi + 0x30], bl
0xaa89  2  je  0xaa8e
0xaa8b  3  mov  ebx, dword ptr [rdi + 0x2c]
0xaa8e  2  mov  eax, ebx
0xaa90  2  jmp  0xaac9
0xaa92  7  cmp  qword ptr [rax + 0x138], rbx
0xaa99  2  jne  0xaaf6
0xaa9b  5  mov  eax, 0xff
0xaaa0  4  cmp  r9w, ax
0xaaa4  2  jbe  0xaadc
0xaaa6  3  test  r14, r14
0xaaa9  2  je  0xaabd
0xaaab  3  test  rbp, rbp
0xaaae  2  je  0xaabd
0xaab0  3  mov  r8, rbp
0xaab3  2  xor  edx, edx
0xaab5  3  mov  rcx, r14
0xaab8  5  call  0x1f03
0xaabd  5  mov  eax, 0x2a
0xaac2  3  mov  dword ptr [rdi + 0x2c], eax
0xaac5  4  mov  byte ptr [rdi + 0x30], 1
0xaac9  5  mov  rbx, qword ptr [rsp + 0x60]
0xaace  5  mov  rbp, qword ptr [rsp + 0x70]
0xaad3  4  add  rsp, 0x40
0xaad7  2  pop  r14
0xaad9  1  pop  rdi
0xaada  1  pop  rsi
0xaadb  1  ret  
0xaadc  3  test  r14, r14
0xaadf  2  je  0xaae9
0xaae1  3  test  rbp, rbp
0xaae4  2  je  0xab5f
0xaae6  3  mov  byte ptr [r14], r9b
0xaae9  3  test  rsi, rsi
0xaaec  2  je  0xab35
0xaaee  6  mov  dword ptr [rsi], 1
0xaaf4  2  jmp  0xab35
0xaaf6  5  lea  rax, [rsp + 0x68]
0xaafb  4  mov  dword ptr [rsp + 0x68], ebx
0xaaff  5  mov  qword ptr [rsp + 0x38], rax
0xab04  5  lea  r8, [rsp + 0x78]
0xab09  5  mov  qword ptr [rsp + 0x30], rbx
0xab0e  6  mov  r9d, 1
0xab14  4  mov  dword ptr [rsp + 0x28], ebp
0xab18  2  xor  edx, edx
0xab1a  5  mov  qword ptr [rsp + 0x20], r14
0xab1f  5  call  0xceeb
0xab24  2  test  eax, eax
0xab26  2  je  0xab39
0xab28  4  cmp  dword ptr [rsp + 0x68], ebx
0xab2c  2  jne  0xaabd
0xab2e  3  test  rsi, rsi
0xab31  2  je  0xab35
0xab33  2  mov  dword ptr [rsi], eax
0xab35  2  xor  eax, eax
0xab37  2  jmp  0xaac9
0xab39  6  call  qword ptr [rip + 0xb541]
0xab3f  3  cmp  eax, 0x7a
0xab42  6  jne  0xaabd
0xab48  3  test  r14, r14
0xab4b  2  je  0xab5f
0xab4d  3  test  rbp, rbp
0xab50  2  je  0xab5f
0xab52  3  mov  r8, rbp
0xab55  2  xor  edx, edx
0xab57  3  mov  rcx, r14
0xab5a  5  call  0x1f03
0xab5f  5  mov  esi, 0x22
0xab64  3  mov  dword ptr [rdi + 0x2c], esi
0xab67  3  xor  r9d, r9d
0xab6a  5  mov  qword ptr [rsp + 0x28], rdi
0xab6f  3  xor  r8d, r8d
0xab72  2  xor  edx, edx
0xab74  4  mov  byte ptr [rdi + 0x30], 1
0xab78  2  xor  ecx, ecx
0xab7a  5  mov  qword ptr [rsp + 0x20], rbx
0xab7f  5  call  0x8867
0xab84  2  mov  eax, esi
0xab86  5  jmp  0xaac9
0xab8b  3  mov  rax, rsp
0xab8e  4  mov  qword ptr [rax + 8], rbx
0xab92  4  mov  qword ptr [rax + 0x10], rbp
0xab96  4  mov  qword ptr [rax + 0x18], rsi
0xab9a  4  mov  qword ptr [rax + 0x20], rdi
0xab9e  2  push  r14
0xaba0  4  sub  rsp, 0x30
0xaba4  3  xor  r14d, r14d
0xaba7  3  mov  rbx, r9
0xabaa  3  mov  rbp, r8
0xabad  3  mov  rsi, rdx
0xabb0  3  mov  rdi, rcx
0xabb3  3  test  rdx, rdx
0xabb6  6  je  0xacdf
0xabbc  3  test  r8, r8
0xabbf  6  je  0xacdf
0xabc5  3  cmp  byte ptr [rdx], r14b
0xabc8  2  jne  0xabdc
0xabca  3  test  rcx, rcx
0xabcd  6  je  0xace6
0xabd3  4  mov  word ptr [rcx], r14w
0xabd7  5  jmp  0xace6
0xabdc  4  cmp  byte ptr [r9 + 0x28], r14b
0xabe0  2  jne  0xabea
0xabe2  3  mov  rcx, rbx
0xabe5  5  call  0x6c63
0xabea  4  mov  rdx, qword ptr [rbx + 0x18]
0xabee  4  mov  r10d, dword ptr [rdx + 0xc]
0xabf2  7  cmp  r10d, 0xfde9
0xabf9  2  jne  0xac22
0xabfb  7  lea  r9, [rip + 0x17836]
0xac02  5  mov  qword ptr [rsp + 0x20], rbx
0xac07  3  mov  r8, rbp
0xac0a  3  mov  rdx, rsi
0xac0d  3  mov  rcx, rdi
0xac10  5  call  0x110ff
0xac15  3  or  ecx, 0xffffffff
0xac18  2  test  eax, eax
0xac1a  3  cmovs  eax, ecx
0xac1d  5  jmp  0xace8
0xac22  7  cmp  qword ptr [rdx + 0x138], r14
0xac29  2  jne  0xac3f
0xac2b  3  test  rdi, rdi
0xac2e  6  je  0xacd8
0xac34  3  movzx  eax, byte ptr [rsi]
0xac37  3  mov  word ptr [rdi], ax
0xac3a  5  jmp  0xacd8
0xac3f  3  movzx  ecx, byte ptr [rsi]
0xac42  3  mov  rax, qword ptr [rdx]
0xac45  5  cmp  word ptr [rax + rcx*2], r14w
0xac4a  2  jge  0xacad
0xac4c  4  mov  r9d, dword ptr [rdx + 8]
0xac50  4  cmp  r9d, 1
0xac54  2  jle  0xac81
0xac56  3  cmp  ebp, r9d
0xac59  2  jl  0xac81
0xac5b  3  mov  eax, r14d
0xac5e  3  test  rdi, rdi
0xac61  3  mov  r8, rsi
0xac64  5  mov  edx, 9
0xac69  3  setne  al
0xac6c  3  mov  ecx, r10d
0xac6f  4  mov  dword ptr [rsp + 0x28], eax
0xac73  5  mov  qword ptr [rsp + 0x20], rdi
0xac78  5  call  0xce5b
0xac7d  2  test  eax, eax
0xac7f  2  jne  0xac94
0xac81  4  mov  rax, qword ptr [rbx + 0x18]
0xac85  4  movsxd  rcx, dword ptr [rax + 8]
0xac89  3  cmp  rbp, rcx
0xac8c  2  jb  0xac9d
0xac8e  4  cmp  byte ptr [rsi + 1], r14b
0xac92  2  je  0xac9d
0xac94  4  mov  rax, qword ptr [rbx + 0x18]
0xac98  3  mov  eax, dword ptr [rax + 8]
0xac9b  2  jmp  0xace8
0xac9d  4  mov  byte ptr [rbx + 0x30], 1
0xaca1  3  or  eax, 0xffffffff
0xaca4  7  mov  dword ptr [rbx + 0x2c], 0x2a
0xacab  2  jmp  0xace8
0xacad  3  mov  eax, r14d
0xacb0  6  mov  r9d, 1
0xacb6  3  test  rdi, rdi
0xacb9  3  mov  r8, rsi
0xacbc  3  mov  ecx, r10d
0xacbf  3  setne  al
0xacc2  4  mov  dword ptr [rsp + 0x28], eax
0xacc6  4  lea  edx, [r9 + 8]
0xacca  5  mov  qword ptr [rsp + 0x20], rdi
0xaccf  5  call  0xce5b
0xacd4  2  test  eax, eax
0xacd6  2  je  0xac9d
0xacd8  5  mov  eax, 1
0xacdd  2  jmp  0xace8
0xacdf  7  mov  qword ptr [rip + 0x17752], r14
0xace6  2  xor  eax, eax
0xace8  5  mov  rbx, qword ptr [rsp + 0x40]
0xaced  5  mov  rbp, qword ptr [rsp + 0x48]
0xacf2  5  mov  rsi, qword ptr [rsp + 0x50]
0xacf7  5  mov  rdi, qword ptr [rsp + 0x58]
0xacfc  4  add  rsp, 0x30
0xad00  2  pop  r14
0xad02  1  ret  
0xad03  4  sub  rsp, 0x28
0xad07  3  test  rcx, rcx
0xad0a  2  jne  0xad21
0xad0c  5  call  0x8a6f
0xad11  6  mov  dword ptr [rax], 0x16
0xad17  5  call  0x8933
0xad1c  3  or  eax, 0xffffffff
0xad1f  2  jmp  0xad25
0xad21  3  mov  eax, dword ptr [rcx + 0x18]
0xad24  1  nop  
0xad25  4  add  rsp, 0x28
0xad29  1  ret  
0xad2a  1  int3  
0xad2b  7  mov  rcx, qword ptr [rip + 0x16306]
0xad32  2  xor  eax, eax
0xad34  4  or  rcx, 1
0xad38  7  cmp  qword ptr [rip + 0x17701], rcx
0xad3f  3  sete  al
0xad42  1  ret  
0xad43  4  sub  dword ptr [rdx + 0x10], 1
0xad47  6  js  0x1145b
0xad4d  3  mov  rax, qword ptr [rdx]
0xad50  2  mov  byte ptr [rax], cl
0xad52  3  inc  qword ptr [rdx]
0xad55  3  movzx  eax, cl
0xad58  1  ret  
0xad59  1  int3  
0xad5a  1  int3  
0xad5b  2  push  rbx
0xad5d  4  sub  rsp, 0x20
0xad61  3  mov  rbx, rcx
0xad64  5  mov  ecx, 2
0xad69  5  call  0x4e0b
0xad6e  3  cmp  rbx, rax
0xad71  2  je  0xad9c
0xad73  5  mov  ecx, 1
0xad78  5  call  0x4e0b
0xad7d  3  cmp  rbx, rax
0xad80  2  jne  0xad98
0xad82  3  mov  rcx, rbx
0xad85  5  call  0xad03
0xad8a  2  mov  ecx, eax
0xad8c  5  call  0x11527
0xad91  2  test  eax, eax
0xad93  3  setne  al
0xad96  2  jmp  0xad9e
0xad98  2  xor  al, al
0xad9a  2  jmp  0xad9e
0xad9c  2  mov  al, 1
0xad9e  4  add  rsp, 0x20
0xada2  1  pop  rbx
0xada3  1  ret  
0xada4  1  int3  
0xada5  1  int3  
0xada6  1  int3  
0xada7  5  mov  qword ptr [rsp + 8], rbx
0xadac  1  push  rdi
0xadad  4  sub  rsp, 0x20
0xadb1  3  mov  rbx, rcx
0xadb4  5  call  0xad5b
0xadb9  2  test  al, al
0xadbb  6  je  0xae61
0xadc1  5  mov  ecx, 1
0xadc6  5  call  0x4e0b
0xadcb  3  cmp  rbx, rax
0xadce  2  jne  0xadd9
0xadd0  7  lea  rdi, [rip + 0x17671]
0xadd7  2  jmp  0xadef
0xadd9  5  mov  ecx, 2
0xadde  5  call  0x4e0b
0xade3  3  cmp  rbx, rax
0xade6  2  jne  0xae61
0xade8  7  lea  rdi, [rip + 0x17661]
0xadef  6  inc  dword ptr [rip + 0x16ebb]
0xadf5  3  mov  eax, dword ptr [rbx + 0x14]
0xadf8  1  nop  
0xadf9  5  test  eax, 0x4c0
0xadfe  2  jne  0xae61
0xae00  8  lock or  dword ptr [rbx + 0x14], 0x282
0xae08  4  cmp  qword ptr [rdi], 0
0xae0c  2  jne  0xae22
0xae0e  5  mov  ecx, 0x1000
0xae13  5  call  0x977f
0xae18  2  xor  ecx, ecx
0xae1a  3  mov  qword ptr [rdi], rax
0xae1d  5  call  0x8b07
0xae22  3  mov  rcx, qword ptr [rdi]
0xae25  3  test  rcx, rcx
0xae28  2  jne  0xae47
0xae2a  4  lea  rcx, [rbx + 0x1c]
0xae2e  7  mov  dword ptr [rbx + 0x10], 2
0xae35  4  mov  qword ptr [rbx + 8], rcx
0xae39  3  mov  qword ptr [rbx], rcx
0xae3c  7  mov  dword ptr [rbx + 0x20], 2
0xae43  2  mov  al, 1
0xae45  2  jmp  0xae63
0xae47  4  mov  qword ptr [rbx + 8], rcx
0xae4b  3  mov  rax, qword ptr [rdi]
0xae4e  3  mov  qword ptr [rbx], rax
0xae51  7  mov  dword ptr [rbx + 0x10], 0x1000
0xae58  7  mov  dword ptr [rbx + 0x20], 0x1000
0xae5f  2  jmp  0xae43
0xae61  2  xor  al, al
0xae63  5  mov  rbx, qword ptr [rsp + 0x30]
0xae68  4  add  rsp, 0x20
0xae6c  1  pop  rdi
0xae6d  1  ret  
0xae6e  1  int3  
0xae6f  2  test  cl, cl
0xae71  2  je  0xaeab
0xae73  1  push  rbx
0xae74  4  sub  rsp, 0x20
0xae78  3  mov  eax, dword ptr [rdx + 0x14]
0xae7b  3  mov  rbx, rdx
0xae7e  3  shr  eax, 9
0xae81  1  nop  
0xae82  2  test  al, 1
0xae84  2  je  0xaea6
0xae86  3  mov  rdx, r8
0xae89  3  mov  rcx, rbx
0xae8c  5  call  0x935f
0xae91  8  lock and  dword ptr [rbx + 0x14], 0xfffffd7f
0xae99  4  and  dword ptr [rbx + 0x20], 0
0xae9d  5  and  qword ptr [rbx + 8], 0
0xaea2  4  and  qword ptr [rbx], 0
0xaea6  4  add  rsp, 0x20
0xaeaa  1  pop  rbx
0xaeab  1  ret  
0xaeac  1  int3  
0xaead  1  int3  
0xaeae  1  int3  
0xaeaf  5  mov  qword ptr [rsp + 8], rbx
0xaeb4  5  mov  qword ptr [rsp + 0x20], r9
0xaeb9  1  push  rdi
0xaeba  4  sub  rsp, 0x20
0xaebe  3  mov  rbx, r9
0xaec1  3  mov  rdi, r8
0xaec4  2  mov  ecx, dword ptr [rdx]
0xaec6  5  call  0xd56b
0xaecb  1  nop  
0xaecc  3  mov  rax, qword ptr [rdi]
0xaecf  3  mov  rcx, qword ptr [rax]
0xaed2  7  mov  rax, qword ptr [rcx + 0x88]
0xaed9  3  lock inc  dword ptr [rax]
0xaedc  2  mov  ecx, dword ptr [rbx]
0xaede  5  call  0xd5bf
0xaee3  5  mov  rbx, qword ptr [rsp + 0x30]
0xaee8  4  add  rsp, 0x20
0xaeec  1  pop  rdi
0xaeed  1  ret  
0xaeee  1  int3  
0xaeef  5  mov  qword ptr [rsp + 8], rbx
0xaef4  5  mov  qword ptr [rsp + 0x20], r9
0xaef9  1  push  rdi
0xaefa  4  sub  rsp, 0x20
0xaefe  3  mov  rbx, r9
0xaf01  3  mov  rdi, r8
0xaf04  2  mov  ecx, dword ptr [rdx]
0xaf06  5  call  0xd56b
0xaf0b  1  nop  
0xaf0c  3  mov  rcx, qword ptr [rdi]
0xaf0f  2  xor  edx, edx
0xaf11  3  mov  rcx, qword ptr [rcx]
0xaf14  5  call  0xb1bf
0xaf19  1  nop  
0xaf1a  2  mov  ecx, dword ptr [rbx]
0xaf1c  5  call  0xd5bf
0xaf21  5  mov  rbx, qword ptr [rsp + 0x30]
0xaf26  4  add  rsp, 0x20
0xaf2a  1  pop  rdi
0xaf2b  1  ret  
0xaf2c  1  int3  
0xaf2d  1  int3  
0xaf2e  1  int3  
0xaf2f  5  mov  qword ptr [rsp + 8], rbx
0xaf34  5  mov  qword ptr [rsp + 0x20], r9
0xaf39  1  push  rdi
0xaf3a  4  sub  rsp, 0x20
0xaf3e  3  mov  rbx, r9
0xaf41  3  mov  rdi, r8
0xaf44  2  mov  ecx, dword ptr [rdx]
0xaf46  5  call  0xd56b
0xaf4b  1  nop  
0xaf4c  4  mov  rax, qword ptr [rdi + 8]
0xaf50  3  mov  rdx, qword ptr [rax]
0xaf53  3  mov  rcx, qword ptr [rdi]
0xaf56  3  mov  rdx, qword ptr [rdx]
0xaf59  3  mov  rcx, qword ptr [rcx]
0xaf5c  5  call  0xb1bf
0xaf61  1  nop  
0xaf62  2  mov  ecx, dword ptr [rbx]
0xaf64  5  call  0xd5bf
0xaf69  5  mov  rbx, qword ptr [rsp + 0x30]
0xaf6e  4  add  rsp, 0x20
0xaf72  1  pop  rdi
0xaf73  1  ret  
0xaf74  1  int3  
0xaf75  1  int3  
0xaf76  1  int3  
0xaf77  5  mov  qword ptr [rsp + 8], rbx
0xaf7c  5  mov  qword ptr [rsp + 0x20], r9
0xaf81  1  push  rdi
0xaf82  4  sub  rsp, 0x20
0xaf86  3  mov  rbx, r9
0xaf89  3  mov  rdi, r8
0xaf8c  2  mov  ecx, dword ptr [rdx]
0xaf8e  5  call  0xd56b
0xaf93  1  nop  
0xaf94  3  mov  rax, qword ptr [rdi]
0xaf97  3  mov  rcx, qword ptr [rax]
0xaf9a  7  mov  rcx, qword ptr [rcx + 0x88]
0xafa1  3  test  rcx, rcx
0xafa4  2  je  0xafc4
0xafa6  3  or  eax, 0xffffffff
0xafa9  4  lock xadd  dword ptr [rcx], eax
0xafad  3  cmp  eax, 1
0xafb0  2  jne  0xafc4
0xafb2  7  lea  rax, [rip + 0x16377]
0xafb9  3  cmp  rcx, rax
0xafbc  2  je  0xafc4
0xafbe  5  call  0x8b07
0xafc3  1  nop  
0xafc4  2  mov  ecx, dword ptr [rbx]
0xafc6  5  call  0xd5bf
0xafcb  5  mov  rbx, qword ptr [rsp + 0x30]
0xafd0  4  add  rsp, 0x20
0xafd4  1  pop  rdi
0xafd5  1  ret  
0xafd6  1  int3  
0xafd7  2  push  rbp
0xafd9  3  mov  rbp, rsp
0xafdc  4  sub  rsp, 0x50
0xafe0  4  mov  qword ptr [rbp - 0x28], rcx
0xafe4  4  lea  rax, [rbp - 0x28]
0xafe8  4  mov  qword ptr [rbp - 0x18], rax
0xafec  4  lea  r9, [rbp + 0x20]
0xaff0  5  mov  edx, 1
0xaff5  4  lea  r8, [rbp - 0x18]
0xaff9  5  mov  eax, 5
0xaffe  3  mov  dword ptr [rbp + 0x20], eax
0xb001  3  mov  dword ptr [rbp + 0x28], eax
0xb004  4  lea  rax, [rbp - 0x28]
0xb008  4  mov  qword ptr [rbp - 0x10], rax
0xb00c  4  lea  rax, [rbp - 0x20]
0xb010  4  mov  qword ptr [rbp - 8], rax
0xb014  5  mov  eax, 4
0xb019  3  mov  dword ptr [rbp - 0x30], eax
0xb01c  3  mov  dword ptr [rbp - 0x2c], eax
0xb01f  7  lea  rax, [rip + 0x17432]
0xb026  4  mov  qword ptr [rbp - 0x20], rax
0xb02a  3  mov  dword ptr [rcx + 0x28], edx
0xb02d  7  lea  rcx, [rip + 0xc43c]
0xb034  4  mov  rax, qword ptr [rbp - 0x28]
0xb038  3  mov  qword ptr [rax], rcx
0xb03b  7  lea  rcx, [rip + 0x162ee]
0xb042  4  mov  rax, qword ptr [rbp - 0x28]
0xb046  6  mov  dword ptr [rax + 0x3a8], edx
0xb04c  4  mov  rax, qword ptr [rbp - 0x28]
0xb050  7  mov  qword ptr [rax + 0x88], rcx
0xb057  3  lea  ecx, [rdx + 0x42]
0xb05a  4  mov  rax, qword ptr [rbp - 0x28]
0xb05e  4  lea  rdx, [rbp + 0x28]
0xb062  7  mov  word ptr [rax + 0xbc], cx
0xb069  4  mov  rax, qword ptr [rbp - 0x28]
0xb06d  7  mov  word ptr [rax + 0x1c2], cx
0xb074  4  lea  rcx, [rbp + 0x18]
0xb078  4  mov  rax, qword ptr [rbp - 0x28]
0xb07c  8  and  qword ptr [rax + 0x3a0], 0
0xb084  5  call  0xaeaf
0xb089  4  lea  r9, [rbp - 0x30]
0xb08d  4  lea  r8, [rbp - 0x10]
0xb091  4  lea  rdx, [rbp - 0x2c]
0xb095  4  lea  rcx, [rbp + 0x18]
0xb099  5  call  0xaf2f
0xb09e  4  add  rsp, 0x50
0xb0a2  1  pop  rbp
0xb0a3  1  ret  
0xb0a4  1  int3  
0xb0a5  1  int3  
0xb0a6  1  int3  
0xb0a7  3  test  rcx, rcx
0xb0aa  2  je  0xb0c6
0xb0ac  1  push  rbx
0xb0ad  4  sub  rsp, 0x20
0xb0b1  3  mov  rbx, rcx
0xb0b4  5  call  0xb0c7
0xb0b9  3  mov  rcx, rbx
0xb0bc  5  call  0x8b07
0xb0c1  4  add  rsp, 0x20
0xb0c5  1  pop  rbx
0xb0c6  1  ret  
0xb0c7  2  push  rbp
0xb0c9  3  mov  rbp, rsp
0xb0cc  4  sub  rsp, 0x40
0xb0d0  4  lea  rax, [rbp - 0x18]
0xb0d4  4  mov  qword ptr [rbp - 0x18], rcx
0xb0d8  4  mov  qword ptr [rbp - 0x10], rax
0xb0dc  7  lea  rdx, [rip + 0xc38d]
0xb0e3  5  mov  eax, 5
0xb0e8  3  mov  dword ptr [rbp + 0x20], eax
0xb0eb  3  mov  dword ptr [rbp + 0x28], eax
0xb0ee  4  lea  rax, [rbp - 0x18]
0xb0f2  4  mov  qword ptr [rbp - 8], rax
0xb0f6  5  mov  eax, 4
0xb0fb  3  mov  dword ptr [rbp - 0x20], eax
0xb0fe  3  mov  dword ptr [rbp - 0x1c], eax
0xb101  3  mov  rax, qword ptr [rcx]
0xb104  3  cmp  rax, rdx
0xb107  2  je  0xb115
0xb109  3  mov  rcx, rax
0xb10c  5  call  0x8b07
0xb111  4  mov  rcx, qword ptr [rbp - 0x18]
0xb115  4  mov  rcx, qword ptr [rcx + 0x70]
0xb119  5  call  0x8b07
0xb11e  4  mov  rcx, qword ptr [rbp - 0x18]
0xb122  4  mov  rcx, qword ptr [rcx + 0x58]
0xb126  5  call  0x8b07
0xb12b  4  mov  rcx, qword ptr [rbp - 0x18]
0xb12f  4  mov  rcx, qword ptr [rcx + 0x60]
0xb133  5  call  0x8b07
0xb138  4  mov  rcx, qword ptr [rbp - 0x18]
0xb13c  4  mov  rcx, qword ptr [rcx + 0x68]
0xb140  5  call  0x8b07
0xb145  4  mov  rcx, qword ptr [rbp - 0x18]
0xb149  4  mov  rcx, qword ptr [rcx + 0x48]
0xb14d  5  call  0x8b07
0xb152  4  mov  rcx, qword ptr [rbp - 0x18]
0xb156  4  mov  rcx, qword ptr [rcx + 0x50]
0xb15a  5  call  0x8b07
0xb15f  4  mov  rcx, qword ptr [rbp - 0x18]
0xb163  4  mov  rcx, qword ptr [rcx + 0x78]
0xb167  5  call  0x8b07
0xb16c  4  mov  rcx, qword ptr [rbp - 0x18]
0xb170  7  mov  rcx, qword ptr [rcx + 0x80]
0xb177  5  call  0x8b07
0xb17c  4  mov  rcx, qword ptr [rbp - 0x18]
0xb180  7  mov  rcx, qword ptr [rcx + 0x3c0]
0xb187  5  call  0x8b07
0xb18c  4  lea  r9, [rbp + 0x20]
0xb190  4  lea  r8, [rbp - 0x10]
0xb194  4  lea  rdx, [rbp + 0x28]
0xb198  4  lea  rcx, [rbp + 0x18]
0xb19c  5  call  0xaf77
0xb1a1  4  lea  r9, [rbp - 0x20]
0xb1a5  4  lea  r8, [rbp - 8]
0xb1a9  4  lea  rdx, [rbp - 0x1c]
0xb1ad  4  lea  rcx, [rbp + 0x18]
0xb1b1  5  call  0xaeef
0xb1b6  4  add  rsp, 0x40
0xb1ba  1  pop  rbp
0xb1bb  1  ret  
0xb1bc  1  int3  
0xb1bd  1  int3  
0xb1be  1  int3  
0xb1bf  5  mov  qword ptr [rsp + 8], rbx
0xb1c4  1  push  rdi
0xb1c5  4  sub  rsp, 0x20
0xb1c9  3  mov  rdi, rcx
0xb1cc  3  mov  rbx, rdx
0xb1cf  7  mov  rcx, qword ptr [rcx + 0x90]
0xb1d6  3  test  rcx, rcx
0xb1d9  2  je  0xb207
0xb1db  5  call  0xe04f
0xb1e0  7  mov  rcx, qword ptr [rdi + 0x90]
0xb1e7  7  cmp  rcx, qword ptr [rip + 0x1726a]
0xb1ee  2  je  0xb207
0xb1f0  7  lea  rax, [rip + 0x15fc9]
0xb1f7  3  cmp  rcx, rax
0xb1fa  2  je  0xb207
0xb1fc  4  cmp  dword ptr [rcx + 0x10], 0
0xb200  2  jne  0xb207
0xb202  5  call  0xde4f
0xb207  7  mov  qword ptr [rdi + 0x90], rbx
0xb20e  3  test  rbx, rbx
0xb211  2  je  0xb21b
0xb213  3  mov  rcx, rbx
0xb216  5  call  0xddc3
0xb21b  5  mov  rbx, qword ptr [rsp + 0x30]
0xb220  4  add  rsp, 0x20
0xb224  1  pop  rdi
0xb225  1  ret  
0xb226  1  int3  
0xb227  5  mov  qword ptr [rsp + 8], rbx
0xb22c  5  mov  qword ptr [rsp + 0x10], rsi
0xb231  1  push  rdi
0xb232  4  sub  rsp, 0x20
0xb236  6  call  qword ptr [rip + 0xae44]
0xb23c  6  mov  ecx, dword ptr [rip + 0x15f76]
0xb242  2  xor  esi, esi
0xb244  2  mov  ebx, eax
0xb246  3  cmp  ecx, -1
0xb249  2  je  0xb268
0xb24b  5  call  0x8e97
0xb250  3  mov  rdi, rax
0xb253  3  test  rax, rax
0xb256  2  je  0xb262
0xb258  4  cmp  rax, -1
0xb25c  4  cmove  rdi, rsi
0xb260  2  jmp  0xb2d4
0xb262  6  mov  ecx, dword ptr [rip + 0x15f50]
0xb268  4  or  rdx, 0xffffffffffffffff
0xb26c  5  call  0x8e9f
0xb271  2  test  eax, eax
0xb273  2  jne  0xb27a
0xb275  3  mov  rdi, rsi
0xb278  2  jmp  0xb2d4
0xb27a  5  mov  edx, 0x3c8
0xb27f  5  mov  ecx, 1
0xb284  5  call  0x8a8f
0xb289  6  mov  ecx, dword ptr [rip + 0x15f29]
0xb28f  3  mov  rdi, rax
0xb292  3  test  rax, rax
0xb295  2  jne  0xb2a7
0xb297  2  xor  edx, edx
0xb299  5  call  0x8e9f
0xb29e  2  xor  ecx, ecx
0xb2a0  5  call  0x8b07
0xb2a5  2  jmp  0xb275
0xb2a7  3  mov  rdx, rdi
0xb2aa  5  call  0x8e9f
0xb2af  2  test  eax, eax
0xb2b1  2  jne  0xb2c5
0xb2b3  6  mov  ecx, dword ptr [rip + 0x15eff]
0xb2b9  2  xor  edx, edx
0xb2bb  5  call  0x8e9f
0xb2c0  3  mov  rcx, rdi
0xb2c3  2  jmp  0xb2a0
0xb2c5  3  mov  rcx, rdi
0xb2c8  5  call  0xafd7
0xb2cd  2  xor  ecx, ecx
0xb2cf  5  call  0x8b07
0xb2d4  2  mov  ecx, ebx
0xb2d6  6  call  qword ptr [rip + 0xadac]
0xb2dc  3  test  rdi, rdi
0xb2df  2  je  0xb2f4
0xb2e1  5  mov  rbx, qword ptr [rsp + 0x30]
0xb2e6  3  mov  rax, rdi
0xb2e9  5  mov  rsi, qword ptr [rsp + 0x38]
0xb2ee  4  add  rsp, 0x20
0xb2f2  1  pop  rdi
0xb2f3  1  ret  
0xb2f4  5  call  0x8487
0xb2f9  1  int3  
0xb2fa  1  int3  
0xb2fb  2  push  rbx
0xb2fd  4  sub  rsp, 0x20
0xb301  6  mov  ecx, dword ptr [rip + 0x15eb1]
0xb307  3  cmp  ecx, -1
0xb30a  2  je  0xb327
0xb30c  5  call  0x8e97
0xb311  3  mov  rbx, rax
0xb314  3  test  rax, rax
0xb317  2  je  0xb321
0xb319  4  cmp  rax, -1
0xb31d  2  je  0xb397
0xb31f  2  jmp  0xb38e
0xb321  6  mov  ecx, dword ptr [rip + 0x15e91]
0xb327  4  or  rdx, 0xffffffffffffffff
0xb32b  5  call  0x8e9f
0xb330  2  test  eax, eax
0xb332  2  je  0xb397
0xb334  5  mov  edx, 0x3c8
0xb339  5  mov  ecx, 1
0xb33e  5  call  0x8a8f
0xb343  6  mov  ecx, dword ptr [rip + 0x15e6f]
0xb349  3  mov  rbx, rax
0xb34c  3  test  rax, rax
0xb34f  2  jne  0xb361
0xb351  2  xor  edx, edx
0xb353  5  call  0x8e9f
0xb358  2  xor  ecx, ecx
0xb35a  5  call  0x8b07
0xb35f  2  jmp  0xb397
0xb361  3  mov  rdx, rbx
0xb364  5  call  0x8e9f
0xb369  2  test  eax, eax
0xb36b  2  jne  0xb37f
0xb36d  6  mov  ecx, dword ptr [rip + 0x15e45]
0xb373  2  xor  edx, edx
0xb375  5  call  0x8e9f
0xb37a  3  mov  rcx, rbx
0xb37d  2  jmp  0xb35a
0xb37f  3  mov  rcx, rbx
0xb382  5  call  0xafd7
0xb387  2  xor  ecx, ecx
0xb389  5  call  0x8b07
0xb38e  3  mov  rax, rbx
0xb391  4  add  rsp, 0x20
0xb395  1  pop  rbx
0xb396  1  ret  
0xb397  5  call  0x8487
0xb39c  1  int3  
0xb39d  1  int3  
0xb39e  1  int3  
0xb39f  5  mov  qword ptr [rsp + 8], rbx
0xb3a4  5  mov  qword ptr [rsp + 0x10], rsi
0xb3a9  1  push  rdi
0xb3aa  4  sub  rsp, 0x20
0xb3ae  6  call  qword ptr [rip + 0xaccc]
0xb3b4  6  mov  ecx, dword ptr [rip + 0x15dfe]
0xb3ba  2  xor  esi, esi
0xb3bc  2  mov  ebx, eax
0xb3be  3  cmp  ecx, -1
0xb3c1  2  je  0xb3e0
0xb3c3  5  call  0x8e97
0xb3c8  3  mov  rdi, rax
0xb3cb  3  test  rax, rax
0xb3ce  2  je  0xb3da
0xb3d0  4  cmp  rax, -1
0xb3d4  4  cmove  rdi, rsi
0xb3d8  2  jmp  0xb44c
0xb3da  6  mov  ecx, dword ptr [rip + 0x15dd8]
0xb3e0  4  or  rdx, 0xffffffffffffffff
0xb3e4  5  call  0x8e9f
0xb3e9  2  test  eax, eax
0xb3eb  2  jne  0xb3f2
0xb3ed  3  mov  rdi, rsi
0xb3f0  2  jmp  0xb44c
0xb3f2  5  mov  edx, 0x3c8
0xb3f7  5  mov  ecx, 1
0xb3fc  5  call  0x8a8f
0xb401  6  mov  ecx, dword ptr [rip + 0x15db1]
0xb407  3  mov  rdi, rax
0xb40a  3  test  rax, rax
0xb40d  2  jne  0xb41f
0xb40f  2  xor  edx, edx
0xb411  5  call  0x8e9f
0xb416  2  xor  ecx, ecx
0xb418  5  call  0x8b07
0xb41d  2  jmp  0xb3ed
0xb41f  3  mov  rdx, rdi
0xb422  5  call  0x8e9f
0xb427  2  test  eax, eax
0xb429  2  jne  0xb43d
0xb42b  6  mov  ecx, dword ptr [rip + 0x15d87]
0xb431  2  xor  edx, edx
0xb433  5  call  0x8e9f
0xb438  3  mov  rcx, rdi
0xb43b  2  jmp  0xb418
0xb43d  3  mov  rcx, rdi
0xb440  5  call  0xafd7
0xb445  2  xor  ecx, ecx
0xb447  5  call  0x8b07
0xb44c  2  mov  ecx, ebx
0xb44e  6  call  qword ptr [rip + 0xac34]
0xb454  5  mov  rbx, qword ptr [rsp + 0x30]
0xb459  3  mov  rax, rdi
0xb45c  5  mov  rsi, qword ptr [rsp + 0x38]
0xb461  4  add  rsp, 0x20
0xb465  1  pop  rdi
0xb466  1  ret  
0xb467  5  mov  qword ptr [rsp + 8], rbx
0xb46c  5  mov  qword ptr [rsp + 0x10], rsi
0xb471  1  push  rdi
0xb472  4  sub  rsp, 0x20
0xb476  6  mov  ecx, dword ptr [rip + 0x15d3c]
0xb47c  2  xor  ebx, ebx
0xb47e  3  mov  rsi, rdx
0xb481  3  cmp  ecx, -1
0xb484  2  je  0xb4a1
0xb486  5  call  0x8e97
0xb48b  3  mov  rdi, rax
0xb48e  3  test  rax, rax
0xb491  2  je  0xb49b
0xb493  4  cmp  rax, -1
0xb497  2  je  0xb512
0xb499  2  jmp  0xb508
0xb49b  6  mov  ecx, dword ptr [rip + 0x15d17]
0xb4a1  4  or  rdx, 0xffffffffffffffff
0xb4a5  5  call  0x8e9f
0xb4aa  2  test  eax, eax
0xb4ac  2  je  0xb512
0xb4ae  5  mov  edx, 0x3c8
0xb4b3  5  mov  ecx, 1
0xb4b8  5  call  0x8a8f
0xb4bd  6  mov  ecx, dword ptr [rip + 0x15cf5]
0xb4c3  3  mov  rdi, rax
0xb4c6  3  test  rax, rax
0xb4c9  2  jne  0xb4db
0xb4cb  2  xor  edx, edx
0xb4cd  5  call  0x8e9f
0xb4d2  2  xor  ecx, ecx
0xb4d4  5  call  0x8b07
0xb4d9  2  jmp  0xb512
0xb4db  3  mov  rdx, rdi
0xb4de  5  call  0x8e9f
0xb4e3  2  test  eax, eax
0xb4e5  2  jne  0xb4f9
0xb4e7  6  mov  ecx, dword ptr [rip + 0x15ccb]
0xb4ed  2  xor  edx, edx
0xb4ef  5  call  0x8e9f
0xb4f4  3  mov  rcx, rdi
0xb4f7  2  jmp  0xb4d4
0xb4f9  3  mov  rcx, rdi
0xb4fc  5  call  0xafd7
0xb501  2  xor  ecx, ecx
0xb503  5  call  0x8b07
0xb508  7  imul  rbx, rsi, 0x3c8
0xb50f  3  add  rbx, rdi
0xb512  5  mov  rsi, qword ptr [rsp + 0x38]
0xb517  3  mov  rax, rbx
0xb51a  5  mov  rbx, qword ptr [rsp + 0x30]
0xb51f  4  add  rsp, 0x20
0xb523  1  pop  rdi
0xb524  1  ret  
0xb525  1  int3  
0xb526  1  int3  
0xb527  4  sub  rsp, 0x28
0xb52b  7  lea  rcx, [rip - 0x48b]
0xb532  5  call  0x8e87
0xb537  6  mov  dword ptr [rip + 0x15c7b], eax
0xb53d  3  cmp  eax, -1
0xb540  2  jne  0xb546
0xb542  2  xor  al, al
0xb544  2  jmp  0xb55b
0xb546  5  call  0xb39f
0xb54b  3  test  rax, rax
0xb54e  2  jne  0xb559
0xb550  2  xor  ecx, ecx
0xb552  5  call  0xb563
0xb557  2  jmp  0xb542
0xb559  2  mov  al, 1
0xb55b  4  add  rsp, 0x28
0xb55f  1  ret  
0xb560  1  int3  
0xb561  1  int3  
0xb562  1  int3  
0xb563  4  sub  rsp, 0x28
0xb567  6  mov  ecx, dword ptr [rip + 0x15c4b]
0xb56d  3  cmp  ecx, -1
0xb570  2  je  0xb57e
0xb572  5  call  0x8e8f
0xb577  7  or  dword ptr [rip + 0x15c3a], 0xffffffff
0xb57e  2  mov  al, 1
0xb580  4  add  rsp, 0x28
0xb584  1  ret  
0xb585  1  int3  
0xb586  1  int3  
0xb587  3  cmp  rcx, rdx
0xb58a  2  jae  0xb590
0xb58c  3  or  eax, 0xffffffff
0xb58f  1  ret  
0xb590  2  xor  eax, eax
0xb592  3  cmp  rcx, rdx
0xb595  3  seta  al
0xb598  1  ret  
0xb599  1  int3  
0xb59a  1  int3  
0xb59b  3  mov  rax, rsp
0xb59e  4  mov  qword ptr [rax + 8], rbx
0xb5a2  4  mov  qword ptr [rax + 0x10], rbp
0xb5a6  4  mov  qword ptr [rax + 0x18], rsi
0xb5aa  4  mov  qword ptr [rax + 0x20], rdi
0xb5ae  2  push  r14
0xb5b0  4  sub  rsp, 0x30
0xb5b4  3  xor  r14d, r14d
0xb5b7  3  mov  ebp, r9d
0xb5ba  3  mov  rbx, rdx
0xb5bd  3  mov  rdi, rcx
0xb5c0  3  test  rcx, rcx
0xb5c3  2  jne  0xb5e9
0xb5c5  4  cmp  byte ptr [rdx + 0x28], r14b
0xb5c9  2  je  0xb5d8
0xb5cb  4  mov  rcx, qword ptr [rdx + 0x10]
0xb5cf  5  call  0x8b07
0xb5d4  4  mov  byte ptr [rbx + 0x28], r14b
0xb5d8  4  mov  qword ptr [rbx + 0x10], r14
0xb5dc  4  mov  qword ptr [rbx + 0x18], r14
0xb5e0  4  mov  qword ptr [rbx + 0x20], r14
0xb5e4  5  jmp  0xb6f7
0xb5e9  3  cmp  byte ptr [rcx], r14b
0xb5ec  2  jne  0xb643
0xb5ee  4  cmp  qword ptr [rdx + 0x18], r14
0xb5f2  2  jne  0xb639
0xb5f4  4  cmp  byte ptr [rdx + 0x28], r14b
0xb5f8  2  je  0xb607
0xb5fa  4  mov  rcx, qword ptr [rdx + 0x10]
0xb5fe  5  call  0x8b07
0xb603  4  mov  byte ptr [rbx + 0x28], r14b
0xb607  5  mov  ecx, 2
0xb60c  5  call  0x977f
0xb611  4  mov  qword ptr [rbx + 0x10], rax
0xb615  3  mov  rdx, r14
0xb618  3  neg  rax
0xb61b  2  sbb  eax, eax
0xb61d  2  not  eax
0xb61f  3  and  eax, 0xc
0xb622  3  sete  dl
0xb625  2  test  eax, eax
0xb627  3  sete  cl
0xb62a  3  mov  byte ptr [rbx + 0x28], cl
0xb62d  4  mov  qword ptr [rbx + 0x18], rdx
0xb631  2  test  eax, eax
0xb633  6  jne  0xb6f9
0xb639  4  mov  rax, qword ptr [rbx + 0x10]
0xb63d  4  mov  word ptr [rax], r14w
0xb641  2  jmp  0xb5e0
0xb643  4  or  r9d, 0xffffffff
0xb647  5  mov  dword ptr [rsp + 0x28], r14d
0xb64c  3  mov  r8, rdi
0xb64f  5  mov  qword ptr [rsp + 0x20], r14
0xb654  2  mov  ecx, ebp
0xb656  4  lea  edx, [r9 + 0xa]
0xb65a  5  call  0xce5b
0xb65f  3  movsxd  rsi, eax
0xb662  2  test  eax, eax
0xb664  2  jne  0xb67c
0xb666  6  call  qword ptr [rip + 0xaa14]
0xb66c  2  mov  ecx, eax
0xb66e  5  call  0x89e3
0xb673  5  call  0x8a6f
0xb678  2  mov  eax, dword ptr [rax]
0xb67a  2  jmp  0xb6f9
0xb67c  4  mov  rdx, qword ptr [rbx + 0x18]
0xb680  3  cmp  rsi, rdx
0xb683  2  jbe  0xb6c6
0xb685  4  cmp  byte ptr [rbx + 0x28], r14b
0xb689  2  je  0xb698
0xb68b  4  mov  rcx, qword ptr [rbx + 0x10]
0xb68f  5  call  0x8b07
0xb694  4  mov  byte ptr [rbx + 0x28], r14b
0xb698  4  lea  rcx, [rsi + rsi]
0xb69c  5  call  0x977f
0xb6a1  4  mov  qword ptr [rbx + 0x10], rax
0xb6a5  3  mov  rdx, r14
0xb6a8  3  neg  rax
0xb6ab  2  sbb  eax, eax
0xb6ad  2  not  eax
0xb6af  3  and  eax, 0xc
0xb6b2  4  cmove  rdx, rsi
0xb6b6  2  test  eax, eax
0xb6b8  3  sete  cl
0xb6bb  3  mov  byte ptr [rbx + 0x28], cl
0xb6be  4  mov  qword ptr [rbx + 0x18], rdx
0xb6c2  2  test  eax, eax
0xb6c4  2  jne  0xb6f9
0xb6c6  4  mov  rax, qword ptr [rbx + 0x10]
0xb6ca  4  or  r9d, 0xffffffff
0xb6ce  4  mov  dword ptr [rsp + 0x28], edx
0xb6d2  3  mov  r8, rdi
0xb6d5  2  mov  ecx, ebp
0xb6d7  5  mov  qword ptr [rsp + 0x20], rax
0xb6dc  4  lea  edx, [r9 + 0xa]
0xb6e0  5  call  0xce5b
0xb6e5  2  cdqe  
0xb6e7  3  test  rax, rax
0xb6ea  6  je  0xb666
0xb6f0  3  dec  rax
0xb6f3  4  mov  qword ptr [rbx + 0x20], rax
0xb6f7  2  xor  eax, eax
0xb6f9  5  mov  rbx, qword ptr [rsp + 0x40]
0xb6fe  5  mov  rbp, qword ptr [rsp + 0x48]
0xb703  5  mov  rsi, qword ptr [rsp + 0x50]
0xb708  5  mov  rdi, qword ptr [rsp + 0x58]
0xb70d  4  add  rsp, 0x30
0xb711  2  pop  r14
0xb713  1  ret  
0xb714  1  int3  
0xb715  1  int3  
0xb716  1  int3  
0xb717  3  mov  rax, rsp
0xb71a  4  mov  qword ptr [rax + 8], rbx
0xb71e  4  mov  qword ptr [rax + 0x10], rbp
0xb722  4  mov  qword ptr [rax + 0x18], rsi
0xb726  4  mov  qword ptr [rax + 0x20], rdi
0xb72a  2  push  r14
0xb72c  4  sub  rsp, 0x40
0xb730  3  xor  r14d, r14d
0xb733  3  mov  ebp, r9d
0xb736  3  mov  rbx, rdx
0xb739  3  mov  rdi, rcx
0xb73c  3  test  rcx, rcx
0xb73f  2  jne  0xb765
0xb741  4  cmp  byte ptr [rdx + 0x28], r14b
0xb745  2  je  0xb754
0xb747  4  mov  rcx, qword ptr [rdx + 0x10]
0xb74b  5  call  0x8b07
0xb750  4  mov  byte ptr [rbx + 0x28], r14b
0xb754  4  mov  qword ptr [rbx + 0x10], r14
0xb758  4  mov  qword ptr [rbx + 0x18], r14
0xb75c  4  mov  qword ptr [rbx + 0x20], r14
0xb760  5  jmp  0xb885
0xb765  4  cmp  word ptr [rcx], r14w
0xb769  2  jne  0xb7bf
0xb76b  4  cmp  qword ptr [rdx + 0x18], r14
0xb76f  2  jne  0xb7b6
0xb771  4  cmp  byte ptr [rdx + 0x28], r14b
0xb775  2  je  0xb784
0xb777  4  mov  rcx, qword ptr [rdx + 0x10]
0xb77b  5  call  0x8b07
0xb780  4  mov  byte ptr [rbx + 0x28], r14b
0xb784  5  mov  ecx, 1
0xb789  5  call  0x977f
0xb78e  4  mov  qword ptr [rbx + 0x10], rax
0xb792  3  mov  rdx, r14
0xb795  3  neg  rax
0xb798  2  sbb  eax, eax
0xb79a  2  not  eax
0xb79c  3  and  eax, 0xc
0xb79f  3  sete  dl
0xb7a2  2  test  eax, eax
0xb7a4  3  sete  cl
0xb7a7  3  mov  byte ptr [rbx + 0x28], cl
0xb7aa  4  mov  qword ptr [rbx + 0x18], rdx
0xb7ae  2  test  eax, eax
0xb7b0  6  jne  0xb887
0xb7b6  4  mov  rax, qword ptr [rbx + 0x10]
0xb7ba  3  mov  byte ptr [rax], r14b
0xb7bd  2  jmp  0xb75c
0xb7bf  5  mov  qword ptr [rsp + 0x38], r14
0xb7c4  4  or  r9d, 0xffffffff
0xb7c8  5  mov  qword ptr [rsp + 0x30], r14
0xb7cd  3  mov  r8, rdi
0xb7d0  5  mov  dword ptr [rsp + 0x28], r14d
0xb7d5  2  xor  edx, edx
0xb7d7  2  mov  ecx, ebp
0xb7d9  5  mov  qword ptr [rsp + 0x20], r14
0xb7de  5  call  0xceeb
0xb7e3  3  movsxd  rsi, eax
0xb7e6  2  test  eax, eax
0xb7e8  2  jne  0xb803
0xb7ea  6  call  qword ptr [rip + 0xa890]
0xb7f0  2  mov  ecx, eax
0xb7f2  5  call  0x89e3
0xb7f7  5  call  0x8a6f
0xb7fc  2  mov  eax, dword ptr [rax]
0xb7fe  5  jmp  0xb887
0xb803  4  mov  rdx, qword ptr [rbx + 0x18]
0xb807  3  cmp  rsi, rdx
0xb80a  2  jbe  0xb84c
0xb80c  4  cmp  byte ptr [rbx + 0x28], r14b
0xb810  2  je  0xb81f
0xb812  4  mov  rcx, qword ptr [rbx + 0x10]
0xb816  5  call  0x8b07
0xb81b  4  mov  byte ptr [rbx + 0x28], r14b
0xb81f  3  mov  rcx, rsi
0xb822  5  call  0x977f
0xb827  4  mov  qword ptr [rbx + 0x10], rax
0xb82b  3  mov  rdx, r14
0xb82e  3  neg  rax
0xb831  2  sbb  eax, eax
0xb833  2  not  eax
0xb835  3  and  eax, 0xc
0xb838  4  cmove  rdx, rsi
0xb83c  2  test  eax, eax
0xb83e  3  sete  cl
0xb841  3  mov  byte ptr [rbx + 0x28], cl
0xb844  4  mov  qword ptr [rbx + 0x18], rdx
0xb848  2  test  eax, eax
0xb84a  2  jne  0xb887
0xb84c  4  mov  rax, qword ptr [rbx + 0x10]
0xb850  4  or  r9d, 0xffffffff
0xb854  5  mov  qword ptr [rsp + 0x38], r14
0xb859  3  mov  r8, rdi
0xb85c  5  mov  qword ptr [rsp + 0x30], r14
0xb861  2  mov  ecx, ebp
0xb863  4  mov  dword ptr [rsp + 0x28], edx
0xb867  2  xor  edx, edx
0xb869  5  mov  qword ptr [rsp + 0x20], rax
0xb86e  5  call  0xceeb
0xb873  2  cdqe  
0xb875  3  test  rax, rax
0xb878  6  je  0xb7ea
0xb87e  3  dec  rax
0xb881  4  mov  qword ptr [rbx + 0x20], rax
0xb885  2  xor  eax, eax
0xb887  5  mov  rbx, qword ptr [rsp + 0x50]
0xb88c  5  mov  rbp, qword ptr [rsp + 0x58]
0xb891  5  mov  rsi, qword ptr [rsp + 0x60]
0xb896  5  mov  rdi, qword ptr [rsp + 0x68]
0xb89b  4  add  rsp, 0x40
0xb89f  2  pop  r14
0xb8a1  1  ret  
0xb8a2  1  int3  
0xb8a3  5  mov  qword ptr [rsp + 8], rbx
0xb8a8  1  push  rbp
0xb8a9  1  push  rsi
0xb8aa  1  push  rdi
0xb8ab  2  push  r12
0xb8ad  2  push  r13
0xb8af  2  push  r14
0xb8b1  2  push  r15
0xb8b3  3  mov  rbp, rsp
0xb8b6  4  sub  rsp, 0x50
0xb8ba  3  xor  r15d, r15d
0xb8bd  3  mov  r13, rdx
0xb8c0  3  mov  rbx, rcx
0xb8c3  3  test  rdx, rdx
0xb8c6  2  jne  0xb8df
0xb8c8  5  call  0x8a6f
0xb8cd  4  lea  ebx, [r13 + 0x16]
0xb8d1  2  mov  dword ptr [rax], ebx
0xb8d3  5  call  0x8933
0xb8d8  2  mov  eax, ebx
0xb8da  5  jmp  0xbab6
0xb8df  3  xorps  xmm0, xmm0
0xb8e2  3  mov  qword ptr [rdx], r15
0xb8e5  3  mov  rax, qword ptr [rcx]
0xb8e8  5  movdqu  xmmword ptr [rbp - 0x20], xmm0
0xb8ed  4  mov  qword ptr [rbp - 0x10], r15
0xb8f1  3  test  rax, rax
0xb8f4  6  je  0xb997
0xb8fa  4  lea  rdx, [rbp + 0x48]
0xb8fe  6  mov  word ptr [rbp + 0x48], 0x3f2a
0xb904  3  mov  rcx, rax
0xb907  4  mov  byte ptr [rbp + 0x4a], r15b
0xb90b  5  call  0x11b33
0xb910  3  mov  rcx, qword ptr [rbx]
0xb913  3  test  rax, rax
0xb916  2  jne  0xb954
0xb918  4  lea  r9, [rbp - 0x20]
0xb91c  3  xor  r8d, r8d
0xb91f  2  xor  edx, edx
0xb921  5  call  0xbae7
0xb926  2  mov  esi, eax
0xb928  2  test  eax, eax
0xb92a  2  je  0xb966
0xb92c  4  mov  rdi, qword ptr [rbp - 0x20]
0xb930  3  mov  rbx, rdi
0xb933  4  cmp  rdi, qword ptr [rbp - 0x18]
0xb937  6  je  0xba1a
0xb93d  3  mov  rcx, qword ptr [rbx]
0xb940  5  call  0x8b07
0xb945  4  add  rbx, 8
0xb949  4  cmp  rbx, qword ptr [rbp - 0x18]
0xb94d  2  jne  0xb93d
0xb94f  5  jmp  0xba1a
0xb954  4  lea  r8, [rbp - 0x20]
0xb958  3  mov  rdx, rax
0xb95b  5  call  0xbc6b
0xb960  2  mov  esi, eax
0xb962  2  test  eax, eax
0xb964  2  jne  0xb96f
0xb966  4  add  rbx, 8
0xb96a  3  mov  rax, qword ptr [rbx]
0xb96d  2  jmp  0xb8f1
0xb96f  4  mov  rdi, qword ptr [rbp - 0x20]
0xb973  3  mov  rbx, rdi
0xb976  4  cmp  rdi, qword ptr [rbp - 0x18]
0xb97a  6  je  0xba1a
0xb980  3  mov  rcx, qword ptr [rbx]
0xb983  5  call  0x8b07
0xb988  4  add  rbx, 8
0xb98c  4  cmp  rbx, qword ptr [rbp - 0x18]
0xb990  2  jne  0xb980
0xb992  5  jmp  0xba1a
0xb997  4  mov  rdi, qword ptr [rbp - 0x20]
0xb99b  4  or  r12, 0xffffffffffffffff
0xb99f  4  mov  rsi, qword ptr [rbp - 0x18]
0xb9a3  3  mov  rdx, r15
0xb9a6  3  mov  r14, rsi
0xb9a9  4  mov  qword ptr [rbp + 0x50], rdx
0xb9ad  3  sub  r14, rdi
0xb9b0  3  mov  rax, rdi
0xb9b3  4  sar  r14, 3
0xb9b7  3  inc  r14
0xb9ba  3  cmp  rdi, rsi
0xb9bd  2  je  0xb9e1
0xb9bf  3  mov  r8, qword ptr [rax]
0xb9c2  3  mov  rcx, r12
0xb9c5  3  inc  rcx
0xb9c8  4  cmp  byte ptr [r8 + rcx], r15b
0xb9cc  2  jne  0xb9c5
0xb9ce  3  inc  rdx
0xb9d1  4  add  rax, 8
0xb9d5  3  add  rdx, rcx
0xb9d8  3  cmp  rax, rsi
0xb9db  2  jne  0xb9bf
0xb9dd  4  mov  qword ptr [rbp + 0x50], rdx
0xb9e1  6  mov  r8d, 1
0xb9e7  3  mov  rcx, r14
0xb9ea  5  call  0x734f
0xb9ef  3  mov  rbx, rax
0xb9f2  3  test  rax, rax
0xb9f5  2  jne  0xba29
0xb9f7  2  xor  ecx, ecx
0xb9f9  5  call  0x8b07
0xb9fe  3  mov  rbx, rdi
0xba01  3  cmp  rdi, rsi
0xba04  2  je  0xba17
0xba06  3  mov  rcx, qword ptr [rbx]
0xba09  5  call  0x8b07
0xba0e  4  add  rbx, 8
0xba12  3  cmp  rbx, rsi
0xba15  2  jne  0xba06
0xba17  3  mov  esi, r12d
0xba1a  3  mov  rcx, rdi
0xba1d  5  call  0x8b07
0xba22  2  mov  eax, esi
0xba24  5  jmp  0xbab6
0xba29  4  lea  rcx, [rax + r14*8]
0xba2d  3  mov  r14, rdi
0xba30  4  mov  qword ptr [rbp + 0x58], rcx
0xba34  3  mov  r12, rcx
0xba37  3  cmp  rdi, rsi
0xba3a  2  je  0xba88
0xba3c  3  sub  rax, rdi
0xba3f  4  mov  qword ptr [rbp + 0x48], rax
0xba43  3  mov  r8, qword ptr [r14]
0xba46  4  or  r15, 0xffffffffffffffff
0xba4a  3  inc  r15
0xba4d  5  cmp  byte ptr [r8 + r15], 0
0xba52  2  jne  0xba4a
0xba54  3  mov  rdx, rcx
0xba57  3  inc  r15
0xba5a  3  sub  rdx, r12
0xba5d  3  mov  r9, r15
0xba60  4  add  rdx, qword ptr [rbp + 0x50]
0xba64  3  mov  rcx, r12
0xba67  5  call  0x119a3
0xba6c  2  test  eax, eax
0xba6e  2  jne  0xbace
0xba70  4  mov  rax, qword ptr [rbp + 0x48]
0xba74  4  mov  rcx, qword ptr [rbp + 0x58]
0xba78  4  mov  qword ptr [rax + r14], r12
0xba7c  3  add  r12, r15
0xba7f  4  add  r14, 8
0xba83  3  cmp  r14, rsi
0xba86  2  jne  0xba43
0xba88  2  xor  ecx, ecx
0xba8a  4  mov  qword ptr [r13], rbx
0xba8e  5  call  0x8b07
0xba93  3  mov  rbx, rdi
0xba96  3  cmp  rdi, rsi
0xba99  2  je  0xbaac
0xba9b  3  mov  rcx, qword ptr [rbx]
0xba9e  5  call  0x8b07
0xbaa3  4  add  rbx, 8
0xbaa7  3  cmp  rbx, rsi
0xbaaa  2  jne  0xba9b
0xbaac  3  mov  rcx, rdi
0xbaaf  5  call  0x8b07
0xbab4  2  xor  eax, eax
0xbab6  8  mov  rbx, qword ptr [rsp + 0x90]
0xbabe  4  add  rsp, 0x50
0xbac2  2  pop  r15
0xbac4  2  pop  r14
0xbac6  2  pop  r13
0xbac8  2  pop  r12
0xbaca  1  pop  rdi
0xbacb  1  pop  rsi
0xbacc  1  pop  rbp
0xbacd  1  ret  
0xbace  6  and  qword ptr [rsp + 0x20], 0
0xbad4  3  xor  r9d, r9d
0xbad7  3  xor  r8d, r8d
0xbada  2  xor  edx, edx
0xbadc  2  xor  ecx, ecx
0xbade  5  call  0x8953
0xbae3  1  int3  
0xbae4  1  int3  
0xbae5  1  int3  
0xbae6  1  int3  
0xbae7  5  mov  qword ptr [rsp + 8], rbx
0xbaec  5  mov  qword ptr [rsp + 0x10], rbp
0xbaf1  5  mov  qword ptr [rsp + 0x18], rsi
0xbaf6  1  push  rdi
0xbaf7  2  push  r12
0xbaf9  2  push  r13
0xbafb  2  push  r14
0xbafd  2  push  r15
0xbaff  4  sub  rsp, 0x30
0xbb03  4  or  rbp, 0xffffffffffffffff
0xbb07  3  mov  rsi, r9
0xbb0a  2  xor  edi, edi
0xbb0c  3  mov  r14, r8
0xbb0f  3  mov  r13, rdx
0xbb12  3  mov  r12, rcx
0xbb15  3  inc  rbp
0xbb18  4  cmp  byte ptr [rcx + rbp], dil
0xbb1c  2  jne  0xbb15
0xbb1e  5  mov  edx, 1
0xbb23  3  mov  rax, r14
0xbb26  3  add  rbp, rdx
0xbb29  3  not  rax
0xbb2c  3  cmp  rbp, rax
0xbb2f  2  jbe  0xbb51
0xbb31  3  lea  eax, [rdx + 0xb]
0xbb34  5  mov  rbx, qword ptr [rsp + 0x60]
0xbb39  5  mov  rbp, qword ptr [rsp + 0x68]
0xbb3e  5  mov  rsi, qword ptr [rsp + 0x70]
0xbb43  4  add  rsp, 0x30
0xbb47  2  pop  r15
0xbb49  2  pop  r14
0xbb4b  2  pop  r13
0xbb4d  2  pop  r12
0xbb4f  1  pop  rdi
0xbb50  1  ret  
0xbb51  4  lea  r15, [r8 + 1]
0xbb55  3  add  r15, rbp
0xbb58  3  mov  rcx, r15
0xbb5b  5  call  0x8a8f
0xbb60  3  mov  rbx, rax
0xbb63  3  test  r14, r14
0xbb66  2  je  0xbb81
0xbb68  3  mov  r9, r14
0xbb6b  3  mov  r8, r13
0xbb6e  3  mov  rdx, r15
0xbb71  3  mov  rcx, rax
0xbb74  5  call  0x119a3
0xbb79  2  test  eax, eax
0xbb7b  6  jne  0xbc56
0xbb81  3  sub  r15, r14
0xbb84  4  lea  rcx, [rbx + r14]
0xbb88  3  mov  rdx, r15
0xbb8b  3  mov  r9, rbp
0xbb8e  3  mov  r8, r12
0xbb91  5  call  0x119a3
0xbb96  2  test  eax, eax
0xbb98  6  jne  0xbc56
0xbb9e  4  mov  r14, qword ptr [rsi + 0x10]
0xbba2  4  lea  r15d, [rax + 8]
0xbba6  4  cmp  qword ptr [rsi + 8], r14
0xbbaa  6  jne  0xbc3d
0xbbb0  3  cmp  qword ptr [rsi], rdi
0xbbb3  2  jne  0xbbe0
0xbbb5  3  mov  edx, r15d
0xbbb8  3  lea  ecx, [rax + 4]
0xbbbb  5  call  0x8a8f
0xbbc0  2  xor  ecx, ecx
0xbbc2  3  mov  qword ptr [rsi], rax
0xbbc5  5  call  0x8b07
0xbbca  3  mov  rax, qword ptr [rsi]
0xbbcd  3  test  rax, rax
0xbbd0  2  je  0xbc14
0xbbd2  4  mov  qword ptr [rsi + 8], rax
0xbbd6  4  add  rax, 0x20
0xbbda  4  mov  qword ptr [rsi + 0x10], rax
0xbbde  2  jmp  0xbc3d
0xbbe0  3  sub  r14, qword ptr [rsi]
0xbbe3  10  movabs  rax, 0x7fffffffffffffff
0xbbed  4  sar  r14, 3
0xbbf1  3  cmp  r14, rax
0xbbf4  2  ja  0xbc14
0xbbf6  3  mov  rcx, qword ptr [rsi]
0xbbf9  4  lea  rbp, [r14 + r14]
0xbbfd  3  mov  rdx, rbp
0xbc00  3  mov  r8, r15
0xbc03  5  call  0xe1cf
0xbc08  3  test  rax, rax
0xbc0b  2  jne  0xbc23
0xbc0d  2  xor  ecx, ecx
0xbc0f  5  call  0x8b07
0xbc14  3  mov  rcx, rbx
0xbc17  5  mov  edi, 0xc
0xbc1c  5  call  0x8b07
0xbc21  2  jmp  0xbc48
0xbc23  4  lea  rcx, [rax + r14*8]
0xbc27  3  mov  qword ptr [rsi], rax
0xbc2a  4  mov  qword ptr [rsi + 8], rcx
0xbc2e  4  lea  rcx, [rax + rbp*8]
0xbc32  4  mov  qword ptr [rsi + 0x10], rcx
0xbc36  2  xor  ecx, ecx
0xbc38  5  call  0x8b07
0xbc3d  4  mov  rcx, qword ptr [rsi + 8]
0xbc41  3  mov  qword ptr [rcx], rbx
0xbc44  4  add  qword ptr [rsi + 8], r15
0xbc48  2  xor  ecx, ecx
0xbc4a  5  call  0x8b07
0xbc4f  2  mov  eax, edi
0xbc51  5  jmp  0xbb34
0xbc56  3  xor  r9d, r9d
0xbc59  5  mov  qword ptr [rsp + 0x20], rdi
0xbc5e  3  xor  r8d, r8d
0xbc61  2  xor  edx, edx
0xbc63  2  xor  ecx, ecx
0xbc65  5  call  0x8953
0xbc6a  1  int3  
0xbc6b  2  push  rbp
0xbc6d  1  push  rbx
0xbc6e  1  push  rsi
0xbc6f  1  push  rdi
0xbc70  2  push  r12
0xbc72  2  push  r13
0xbc74  2  push  r14
0xbc76  8  lea  rbp, [rsp - 0x240]
0xbc7e  7  sub  rsp, 0x340
0xbc85  7  mov  rax, qword ptr [rip + 0x153ac]
0xbc8c  3  xor  rax, rsp
0xbc8f  7  mov  qword ptr [rbp + 0x230], rax
0xbc96  3  mov  r12, r8
0xbc99  3  mov  rdi, rcx
0xbc9c  10  movabs  rbx, 0x200000000801
0xbca6  3  cmp  rdx, rcx
0xbca9  2  je  0xbccd
0xbcab  2  mov  al, byte ptr [rdx]
0xbcad  2  sub  al, 0x2f
0xbcaf  2  cmp  al, 0x2d
0xbcb1  2  ja  0xbcbd
0xbcb3  4  movsx  rax, al
0xbcb7  4  bt  rbx, rax
0xbcbb  2  jb  0xbccd
0xbcbd  3  mov  rcx, rdi
0xbcc0  5  call  0x11efb
0xbcc5  3  mov  rdx, rax
0xbcc8  3  cmp  rax, rdi
0xbccb  2  jne  0xbcab
0xbccd  3  mov  r8b, byte ptr [rdx]
0xbcd0  4  cmp  r8b, 0x3a
0xbcd4  2  jne  0xbcf4
0xbcd6  4  lea  rax, [rdi + 1]
0xbcda  3  cmp  rdx, rax
0xbcdd  2  je  0xbcf4
0xbcdf  3  mov  r9, r12
0xbce2  3  xor  r8d, r8d
0xbce5  2  xor  edx, edx
0xbce7  3  mov  rcx, rdi
0xbcea  5  call  0xbae7
0xbcef  5  jmp  0xbf97
0xbcf4  4  sub  r8b, 0x2f
0xbcf8  3  xor  r14d, r14d
0xbcfb  4  cmp  r8b, 0x2d
0xbcff  2  ja  0xbd0d
0xbd01  4  movsx  rax, r8b
0xbd05  4  bt  rbx, rax
0xbd09  2  mov  al, 1
0xbd0b  2  jb  0xbd10
0xbd0d  3  mov  al, r14b
0xbd10  3  sub  rdx, rdi
0xbd13  5  mov  qword ptr [rsp + 0x40], r14
0xbd18  3  inc  rdx
0xbd1b  5  mov  qword ptr [rsp + 0x48], r14
0xbd20  2  neg  al
0xbd22  5  mov  qword ptr [rsp + 0x50], r14
0xbd27  5  lea  rcx, [rsp + 0x70]
0xbd2c  5  mov  qword ptr [rsp + 0x58], r14
0xbd31  3  sbb  r13, r13
0xbd34  5  mov  qword ptr [rsp + 0x60], r14
0xbd39  3  and  r13, rdx
0xbd3c  5  mov  byte ptr [rsp + 0x68], r14b
0xbd41  2  xor  edx, edx
0xbd43  5  mov  qword ptr [rsp + 0x38], r13
0xbd48  5  call  0xbfbb
0xbd4d  5  mov  rax, qword ptr [rsp + 0x78]
0xbd52  5  mov  ecx, 0xfde9
0xbd57  3  cmp  dword ptr [rax + 0xc], ecx
0xbd5a  2  jne  0xbd73
0xbd5c  4  cmp  byte ptr [rbp - 0x78], r14b
0xbd60  2  je  0xbd6e
0xbd62  5  mov  rax, qword ptr [rsp + 0x70]
0xbd67  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbd6e  3  mov  r9d, ecx
0xbd71  2  jmp  0xbdab
0xbd73  5  call  0x8d57
0xbd78  2  test  eax, eax
0xbd7a  2  jne  0xbd96
0xbd7c  4  cmp  byte ptr [rbp - 0x78], r14b
0xbd80  2  je  0xbd8e
0xbd82  5  mov  rax, qword ptr [rsp + 0x70]
0xbd87  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbd8e  6  mov  r9d, 1
0xbd94  2  jmp  0xbdab
0xbd96  4  cmp  byte ptr [rbp - 0x78], r14b
0xbd9a  2  je  0xbda8
0xbd9c  5  mov  rax, qword ptr [rsp + 0x70]
0xbda1  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbda8  3  mov  r9d, r14d
0xbdab  5  lea  r8, [rsp + 0x30]
0xbdb0  3  mov  rcx, rdi
0xbdb3  5  lea  rdx, [rsp + 0x40]
0xbdb8  5  call  0xb59b
0xbdbd  5  mov  rcx, qword ptr [rsp + 0x50]
0xbdc2  4  lea  r8, [rbp - 0x20]
0xbdc6  2  test  eax, eax
0xbdc8  5  mov  dword ptr [rsp + 0x28], r14d
0xbdcd  5  mov  qword ptr [rsp + 0x20], r14
0xbdd2  4  cmovne  rcx, r14
0xbdd6  3  xor  r9d, r9d
0xbdd9  2  xor  edx, edx
0xbddb  6  call  qword ptr [rip + 0xa3b7]
0xbde1  3  mov  rbx, rax
0xbde4  4  cmp  rax, -1
0xbde8  2  jne  0xbe14
0xbdea  3  mov  r9, r12
0xbded  3  xor  r8d, r8d
0xbdf0  2  xor  edx, edx
0xbdf2  3  mov  rcx, rdi
0xbdf5  5  call  0xbae7
0xbdfa  2  mov  ebx, eax
0xbdfc  5  cmp  byte ptr [rsp + 0x68], r14b
0xbe01  2  je  0xbe0d
0xbe03  5  mov  rcx, qword ptr [rsp + 0x50]
0xbe08  5  call  0x8b07
0xbe0d  2  mov  eax, ebx
0xbe0f  5  jmp  0xbf97
0xbe14  5  mov  rsi, qword ptr [r12 + 8]
0xbe19  4  sub  rsi, qword ptr [r12]
0xbe1d  4  sar  rsi, 3
0xbe21  2  xor  edx, edx
0xbe23  4  mov  qword ptr [rbp - 0x50], r14
0xbe27  4  lea  rcx, [rbp - 0x70]
0xbe2b  4  mov  qword ptr [rbp - 0x48], r14
0xbe2f  4  mov  qword ptr [rbp - 0x40], r14
0xbe33  4  mov  qword ptr [rbp - 0x38], r14
0xbe37  4  mov  qword ptr [rbp - 0x30], r14
0xbe3b  4  mov  byte ptr [rbp - 0x28], r14b
0xbe3f  5  call  0xbfbb
0xbe44  4  mov  rax, qword ptr [rbp - 0x68]
0xbe48  5  mov  ecx, 0xfde9
0xbe4d  3  cmp  dword ptr [rax + 0xc], ecx
0xbe50  2  jne  0xbe68
0xbe52  4  cmp  byte ptr [rbp - 0x58], r14b
0xbe56  2  je  0xbe63
0xbe58  4  mov  rax, qword ptr [rbp - 0x70]
0xbe5c  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbe63  3  mov  r9d, ecx
0xbe66  2  jmp  0xbe9e
0xbe68  5  call  0x8d57
0xbe6d  2  test  eax, eax
0xbe6f  2  jne  0xbe8a
0xbe71  4  cmp  byte ptr [rbp - 0x58], r14b
0xbe75  2  je  0xbe82
0xbe77  4  mov  rax, qword ptr [rbp - 0x70]
0xbe7b  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbe82  6  mov  r9d, 1
0xbe88  2  jmp  0xbe9e
0xbe8a  4  cmp  byte ptr [rbp - 0x58], r14b
0xbe8e  2  je  0xbe9b
0xbe90  4  mov  rax, qword ptr [rbp - 0x70]
0xbe94  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xbe9b  3  mov  r9d, r14d
0xbe9e  5  lea  r8, [rsp + 0x30]
0xbea3  4  lea  rdx, [rbp - 0x50]
0xbea7  4  lea  rcx, [rbp + 0xc]
0xbeab  5  call  0xb717
0xbeb0  4  mov  r14, qword ptr [rbp - 0x40]
0xbeb4  2  xor  edx, edx
0xbeb6  2  test  eax, eax
0xbeb8  3  mov  rcx, r14
0xbebb  4  cmovne  rcx, rdx
0xbebf  3  cmp  byte ptr [rcx], 0x2e
0xbec2  2  jne  0xbee3
0xbec4  3  mov  al, byte ptr [rcx + 1]
0xbec7  2  test  al, al
0xbec9  2  jne  0xbeda
0xbecb  3  cmp  byte ptr [rbp - 0x28], dl
0xbece  2  je  0xbf0a
0xbed0  3  mov  rcx, r14
0xbed3  5  call  0x8b07
0xbed8  2  jmp  0xbf0a
0xbeda  2  cmp  al, 0x2e
0xbedc  2  jne  0xbee3
0xbede  3  cmp  byte ptr [rcx + 2], dl
0xbee1  2  je  0xbecb
0xbee3  3  mov  r9, r12
0xbee6  3  mov  r8, r13
0xbee9  3  mov  rdx, rdi
0xbeec  5  call  0xbae7
0xbef1  3  mov  r13d, eax
0xbef4  2  test  eax, eax
0xbef6  2  jne  0xbf6c
0xbef8  3  cmp  byte ptr [rbp - 0x28], al
0xbefb  2  je  0xbf05
0xbefd  3  mov  rcx, r14
0xbf00  5  call  0x8b07
0xbf05  5  mov  r13, qword ptr [rsp + 0x38]
0xbf0a  4  lea  rdx, [rbp - 0x20]
0xbf0e  3  mov  rcx, rbx
0xbf11  6  call  qword ptr [rip + 0xa289]
0xbf17  3  xor  r14d, r14d
0xbf1a  2  test  eax, eax
0xbf1c  6  jne  0xbe21
0xbf22  4  mov  rax, qword ptr [r12]
0xbf26  5  mov  rdx, qword ptr [r12 + 8]
0xbf2b  3  sub  rdx, rax
0xbf2e  4  sar  rdx, 3
0xbf32  3  cmp  rsi, rdx
0xbf35  2  je  0xbf4e
0xbf37  3  sub  rdx, rsi
0xbf3a  4  lea  rcx, [rax + rsi*8]
0xbf3e  7  lea  r9, [rip - 0x9be]
0xbf45  4  lea  r8d, [r14 + 8]
0xbf49  5  call  0x11593
0xbf4e  3  mov  rcx, rbx
0xbf51  6  call  qword ptr [rip + 0xa239]
0xbf57  5  cmp  byte ptr [rsp + 0x68], r14b
0xbf5c  2  je  0xbf68
0xbf5e  5  mov  rcx, qword ptr [rsp + 0x50]
0xbf63  5  call  0x8b07
0xbf68  2  xor  eax, eax
0xbf6a  2  jmp  0xbf97
0xbf6c  4  cmp  byte ptr [rbp - 0x28], 0
0xbf70  2  je  0xbf7a
0xbf72  3  mov  rcx, r14
0xbf75  5  call  0x8b07
0xbf7a  3  mov  rcx, rbx
0xbf7d  6  call  qword ptr [rip + 0xa20d]
0xbf83  5  cmp  byte ptr [rsp + 0x68], 0
0xbf88  2  je  0xbf94
0xbf8a  5  mov  rcx, qword ptr [rsp + 0x50]
0xbf8f  5  call  0x8b07
0xbf94  3  mov  eax, r13d
0xbf97  7  mov  rcx, qword ptr [rbp + 0x230]
0xbf9e  3  xor  rcx, rsp
0xbfa1  5  call  0x14c73
0xbfa6  7  add  rsp, 0x340
0xbfad  2  pop  r14
0xbfaf  2  pop  r13
0xbfb1  2  pop  r12
0xbfb3  1  pop  rdi
0xbfb4  1  pop  rsi
0xbfb5  1  pop  rbx
0xbfb6  1  pop  rbp
0xbfb7  1  ret  
0xbfb8  1  int3  
0xbfb9  1  int3  
0xbfba  1  int3  
0xbfbb  5  mov  qword ptr [rsp + 8], rbx
0xbfc0  5  mov  qword ptr [rsp + 0x10], rsi
0xbfc5  1  push  rdi
0xbfc6  4  sub  rsp, 0x20
0xbfca  4  mov  byte ptr [rcx + 0x18], 0
0xbfce  3  mov  rdi, rcx
0xbfd1  4  lea  rsi, [rcx + 8]
0xbfd5  3  test  rdx, rdx
0xbfd8  2  je  0xbfdf
0xbfda  3  movups  xmm0, xmmword ptr [rdx]
0xbfdd  2  jmp  0xbfef
0xbfdf  7  cmp  dword ptr [rip + 0x15e4a], 0
0xbfe6  2  jne  0xbff5
0xbfe8  7  movups  xmm0, xmmword ptr [rip + 0x15329]
0xbfef  4  movdqu  xmmword ptr [rsi], xmm0
0xbff3  2  jmp  0xc043
0xbff5  5  call  0xb227
0xbffa  3  mov  qword ptr [rdi], rax
0xbffd  3  mov  rdx, rsi
0xc000  7  mov  rcx, qword ptr [rax + 0x90]
0xc007  3  mov  qword ptr [rsi], rcx
0xc00a  7  mov  rcx, qword ptr [rax + 0x88]
0xc011  4  mov  qword ptr [rdi + 0x10], rcx
0xc015  3  mov  rcx, rax
0xc018  5  call  0x9b07
0xc01d  3  mov  rcx, qword ptr [rdi]
0xc020  4  lea  rdx, [rdi + 0x10]
0xc024  5  call  0x9b73
0xc029  3  mov  rcx, qword ptr [rdi]
0xc02c  6  mov  eax, dword ptr [rcx + 0x3a8]
0xc032  2  test  al, 2
0xc034  2  jne  0xc043
0xc036  3  or  eax, 2
0xc039  6  mov  dword ptr [rcx + 0x3a8], eax
0xc03f  4  mov  byte ptr [rdi + 0x18], 1
0xc043  5  mov  rbx, qword ptr [rsp + 0x30]
0xc048  3  mov  rax, rdi
0xc04b  5  mov  rsi, qword ptr [rsp + 0x38]
0xc050  4  add  rsp, 0x20
0xc054  1  pop  rdi
0xc055  1  ret  
0xc056  1  int3  
0xc057  5  jmp  0xb8a3
0xc05c  1  int3  
0xc05d  1  int3  
0xc05e  1  int3  
0xc05f  5  mov  qword ptr [rsp + 8], rbx
0xc064  5  mov  qword ptr [rsp + 0x10], rbp
0xc069  5  mov  qword ptr [rsp + 0x18], rsi
0xc06e  1  push  rdi
0xc06f  4  sub  rsp, 0x40
0xc073  2  xor  ebp, ebp
0xc075  3  mov  esi, r9d
0xc078  3  mov  rbx, rdx
0xc07b  3  mov  rdi, rcx
0xc07e  3  test  rcx, rcx
0xc081  2  jne  0xc09e
0xc083  4  cmp  byte ptr [rdx + 0x28], bpl
0xc087  2  je  0xc08d
0xc089  4  mov  byte ptr [rdx + 0x28], bpl
0xc08d  4  mov  qword ptr [rdx + 0x10], rbp
0xc091  4  mov  qword ptr [rdx + 0x18], rbp
0xc095  4  mov  qword ptr [rdx + 0x20], rbp
0xc099  5  jmp  0xc161
0xc09e  3  cmp  word ptr [rcx], bp
0xc0a1  2  jne  0xc0d7
0xc0a3  4  cmp  qword ptr [rdx + 0x18], rbp
0xc0a7  2  jne  0xc0ce
0xc0a9  4  cmp  byte ptr [rdx + 0x28], bpl
0xc0ad  2  je  0xc0b3
0xc0af  4  mov  byte ptr [rdx + 0x28], bpl
0xc0b3  5  call  0x8a6f
0xc0b8  5  mov  ecx, 0x22
0xc0bd  2  mov  dword ptr [rax], ecx
0xc0bf  2  mov  eax, ecx
0xc0c1  4  mov  byte ptr [rbx + 0x28], bpl
0xc0c5  4  mov  qword ptr [rbx + 0x18], rbp
0xc0c9  5  jmp  0xc163
0xc0ce  4  mov  rax, qword ptr [rdx + 0x10]
0xc0d2  3  mov  byte ptr [rax], bpl
0xc0d5  2  jmp  0xc095
0xc0d7  5  mov  qword ptr [rsp + 0x38], rbp
0xc0dc  4  or  r9d, 0xffffffff
0xc0e0  5  mov  qword ptr [rsp + 0x30], rbp
0xc0e5  3  mov  r8, rdi
0xc0e8  4  mov  dword ptr [rsp + 0x28], ebp
0xc0ec  2  xor  edx, edx
0xc0ee  2  mov  ecx, esi
0xc0f0  5  mov  qword ptr [rsp + 0x20], rbp
0xc0f5  5  call  0xceeb
0xc0fa  3  movsxd  rdx, eax
0xc0fd  2  test  eax, eax
0xc0ff  2  jne  0xc117
0xc101  6  call  qword ptr [rip + 0x9f79]
0xc107  2  mov  ecx, eax
0xc109  5  call  0x89e3
0xc10e  5  call  0x8a6f
0xc113  2  mov  eax, dword ptr [rax]
0xc115  2  jmp  0xc163
0xc117  4  mov  rcx, qword ptr [rbx + 0x18]
0xc11b  3  cmp  rdx, rcx
0xc11e  2  jbe  0xc12c
0xc120  4  cmp  byte ptr [rbx + 0x28], bpl
0xc124  2  je  0xc0b3
0xc126  4  mov  byte ptr [rbx + 0x28], bpl
0xc12a  2  jmp  0xc0b3
0xc12c  4  mov  rax, qword ptr [rbx + 0x10]
0xc130  4  or  r9d, 0xffffffff
0xc134  5  mov  qword ptr [rsp + 0x38], rbp
0xc139  3  mov  r8, rdi
0xc13c  5  mov  qword ptr [rsp + 0x30], rbp
0xc141  2  xor  edx, edx
0xc143  4  mov  dword ptr [rsp + 0x28], ecx
0xc147  2  mov  ecx, esi
0xc149  5  mov  qword ptr [rsp + 0x20], rax
0xc14e  5  call  0xceeb
0xc153  2  cdqe  
0xc155  3  test  rax, rax
0xc158  2  je  0xc101
0xc15a  3  dec  rax
0xc15d  4  mov  qword ptr [rbx + 0x20], rax
0xc161  2  xor  eax, eax
0xc163  5  mov  rbx, qword ptr [rsp + 0x50]
0xc168  5  mov  rbp, qword ptr [rsp + 0x58]
0xc16d  5  mov  rsi, qword ptr [rsp + 0x60]
0xc172  4  add  rsp, 0x40
0xc176  1  pop  rdi
0xc177  1  ret  
0xc178  1  int3  
0xc179  1  int3  
0xc17a  1  int3  
0xc17b  5  mov  qword ptr [rsp + 0x10], rbx
0xc180  5  mov  qword ptr [rsp + 0x18], rdi
0xc185  1  push  rbp
0xc186  8  lea  rbp, [rsp - 0x1a0]
0xc18e  7  sub  rsp, 0x2a0
0xc195  7  mov  rax, qword ptr [rip + 0x14e9c]
0xc19c  3  xor  rax, rsp
0xc19f  7  mov  qword ptr [rbp + 0x190], rax
0xc1a6  3  mov  edi, r8d
0xc1a9  3  mov  rbx, rdx
0xc1ac  6  mov  r8d, 0x105
0xc1b2  4  lea  rdx, [rbp - 0x80]
0xc1b6  6  call  qword ptr [rip + 0x9f54]
0xc1bc  2  test  eax, eax
0xc1be  2  jne  0xc1d4
0xc1c0  6  call  qword ptr [rip + 0x9eba]
0xc1c6  2  mov  ecx, eax
0xc1c8  5  call  0x89e3
0xc1cd  2  xor  eax, eax
0xc1cf  5  jmp  0xc278
0xc1d4  6  and  qword ptr [rsp + 0x68], 0
0xc1da  5  lea  rcx, [rsp + 0x28]
0xc1df  3  mov  rax, rdi
0xc1e2  5  mov  qword ptr [rsp + 0x48], rbx
0xc1e7  2  xor  edx, edx
0xc1e9  5  mov  qword ptr [rsp + 0x50], rax
0xc1ee  5  mov  qword ptr [rsp + 0x60], rax
0xc1f3  5  mov  qword ptr [rsp + 0x58], rbx
0xc1f8  5  mov  byte ptr [rsp + 0x70], 0
0xc1fd  5  call  0xbfbb
0xc202  5  mov  rax, qword ptr [rsp + 0x30]
0xc207  6  mov  r9d, 0xfde9
0xc20d  4  cmp  dword ptr [rax + 0xc], r9d
0xc211  2  jne  0xc228
0xc213  5  cmp  byte ptr [rsp + 0x40], 0
0xc218  2  je  0xc261
0xc21a  5  mov  rax, qword ptr [rsp + 0x28]
0xc21f  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xc226  2  jmp  0xc261
0xc228  5  call  0x8d57
0xc22d  2  test  eax, eax
0xc22f  2  jne  0xc24b
0xc231  4  cmp  byte ptr [rsp + 0x40], al
0xc235  2  je  0xc243
0xc237  5  mov  rax, qword ptr [rsp + 0x28]
0xc23c  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xc243  6  mov  r9d, 1
0xc249  2  jmp  0xc261
0xc24b  5  cmp  byte ptr [rsp + 0x40], 0
0xc250  2  je  0xc25e
0xc252  5  mov  rax, qword ptr [rsp + 0x28]
0xc257  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xc25e  3  xor  r9d, r9d
0xc261  5  lea  r8, [rsp + 0x20]
0xc266  5  lea  rdx, [rsp + 0x48]
0xc26b  4  lea  rcx, [rbp - 0x80]
0xc26f  5  call  0xc05f
0xc274  4  mov  eax, dword ptr [rsp + 0x68]
0xc278  7  mov  rcx, qword ptr [rbp + 0x190]
0xc27f  3  xor  rcx, rsp
0xc282  5  call  0x14c73
0xc287  8  lea  r11, [rsp + 0x2a0]
0xc28f  4  mov  rbx, qword ptr [r11 + 0x18]
0xc293  4  mov  rdi, qword ptr [r11 + 0x20]
0xc297  3  mov  rsp, r11
0xc29a  1  pop  rbp
0xc29b  1  ret  
0xc29c  1  int3  
0xc29d  1  int3  
0xc29e  1  int3  
0xc29f  5  mov  qword ptr [rsp + 8], rbx
0xc2a4  5  mov  qword ptr [rsp + 0x20], r9
0xc2a9  1  push  rdi
0xc2aa  4  sub  rsp, 0x40
0xc2ae  3  mov  rdi, r9
0xc2b1  3  mov  rbx, r8
0xc2b4  2  mov  ecx, dword ptr [rdx]
0xc2b6  5  call  0xd56b
0xc2bb  1  nop  
0xc2bc  3  mov  rax, qword ptr [rbx]
0xc2bf  3  mov  rcx, qword ptr [rax]
0xc2c2  7  mov  rax, qword ptr [rcx + 0x88]
0xc2c9  4  add  rax, 0x18
0xc2cd  5  mov  qword ptr [rsp + 0x58], rax
0xc2d2  7  mov  rcx, qword ptr [rip + 0x16187]
0xc2d9  5  mov  qword ptr [rsp + 0x20], rcx
0xc2de  3  test  rcx, rcx
0xc2e1  2  je  0xc352
0xc2e3  3  test  rax, rax
0xc2e6  2  je  0xc345
0xc2e8  6  mov  r8d, 2
0xc2ee  3  mov  r9d, r8d
0xc2f1  4  lea  edx, [r8 + 0x7e]
0xc2f5  3  movups  xmm0, xmmword ptr [rax]
0xc2f8  3  movups  xmmword ptr [rcx], xmm0
0xc2fb  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc2ff  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc303  4  movups  xmm0, xmmword ptr [rax + 0x20]
0xc307  4  movups  xmmword ptr [rcx + 0x20], xmm0
0xc30b  4  movups  xmm1, xmmword ptr [rax + 0x30]
0xc30f  4  movups  xmmword ptr [rcx + 0x30], xmm1
0xc313  4  movups  xmm0, xmmword ptr [rax + 0x40]
0xc317  4  movups  xmmword ptr [rcx + 0x40], xmm0
0xc31b  4  movups  xmm1, xmmword ptr [rax + 0x50]
0xc31f  4  movups  xmmword ptr [rcx + 0x50], xmm1
0xc323  4  movups  xmm0, xmmword ptr [rax + 0x60]
0xc327  4  movups  xmmword ptr [rcx + 0x60], xmm0
0xc32b  3  add  rcx, rdx
0xc32e  4  movups  xmm1, xmmword ptr [rax + 0x70]
0xc332  4  movups  xmmword ptr [rcx - 0x10], xmm1
0xc336  3  add  rax, rdx
0xc339  4  sub  r9, 1
0xc33d  2  jne  0xc2f5
0xc33f  2  mov  al, byte ptr [rax]
0xc341  2  mov  byte ptr [rcx], al
0xc343  2  jmp  0xc36c
0xc345  2  xor  edx, edx
0xc347  6  mov  r8d, 0x101
0xc34d  5  call  0x1f03
0xc352  5  call  0x8a6f
0xc357  6  mov  dword ptr [rax], 0x16
0xc35d  5  call  0x8933
0xc362  6  mov  r8d, 2
0xc368  4  lea  edx, [r8 + 0x7e]
0xc36c  3  mov  rax, qword ptr [rbx]
0xc36f  3  mov  rcx, qword ptr [rax]
0xc372  7  mov  rax, qword ptr [rcx + 0x88]
0xc379  6  add  rax, 0x119
0xc37f  5  mov  qword ptr [rsp + 0x28], rax
0xc384  7  mov  rcx, qword ptr [rip + 0x160dd]
0xc38b  5  mov  qword ptr [rsp + 0x30], rcx
0xc390  3  test  rcx, rcx
0xc393  2  je  0xc3f3
0xc395  3  test  rax, rax
0xc398  2  je  0xc3e6
0xc39a  3  movups  xmm0, xmmword ptr [rax]
0xc39d  3  movups  xmmword ptr [rcx], xmm0
0xc3a0  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc3a4  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc3a8  4  movups  xmm0, xmmword ptr [rax + 0x20]
0xc3ac  4  movups  xmmword ptr [rcx + 0x20], xmm0
0xc3b0  4  movups  xmm1, xmmword ptr [rax + 0x30]
0xc3b4  4  movups  xmmword ptr [rcx + 0x30], xmm1
0xc3b8  4  movups  xmm0, xmmword ptr [rax + 0x40]
0xc3bc  4  movups  xmmword ptr [rcx + 0x40], xmm0
0xc3c0  4  movups  xmm1, xmmword ptr [rax + 0x50]
0xc3c4  4  movups  xmmword ptr [rcx + 0x50], xmm1
0xc3c8  4  movups  xmm0, xmmword ptr [rax + 0x60]
0xc3cc  4  movups  xmmword ptr [rcx + 0x60], xmm0
0xc3d0  3  add  rcx, rdx
0xc3d3  4  movups  xmm1, xmmword ptr [rax + 0x70]
0xc3d7  4  movups  xmmword ptr [rcx - 0x10], xmm1
0xc3db  3  add  rax, rdx
0xc3de  4  sub  r8, 1
0xc3e2  2  jne  0xc39a
0xc3e4  2  jmp  0xc403
0xc3e6  2  xor  edx, edx
0xc3e8  6  mov  r8d, 0x100
0xc3ee  5  call  0x1f03
0xc3f3  5  call  0x8a6f
0xc3f8  6  mov  dword ptr [rax], 0x16
0xc3fe  5  call  0x8933
0xc403  4  mov  rax, qword ptr [rbx + 8]
0xc407  3  mov  rcx, qword ptr [rax]
0xc40a  3  mov  rdx, qword ptr [rcx]
0xc40d  3  or  eax, 0xffffffff
0xc410  4  lock xadd  dword ptr [rdx], eax
0xc414  3  cmp  eax, 1
0xc417  2  jne  0xc434
0xc419  4  mov  rax, qword ptr [rbx + 8]
0xc41d  3  mov  rcx, qword ptr [rax]
0xc420  7  lea  rax, [rip + 0x14f09]
0xc427  3  cmp  qword ptr [rcx], rax
0xc42a  2  je  0xc434
0xc42c  3  mov  rcx, qword ptr [rcx]
0xc42f  5  call  0x8b07
0xc434  3  mov  rax, qword ptr [rbx]
0xc437  3  mov  rdx, qword ptr [rax]
0xc43a  4  mov  rax, qword ptr [rbx + 8]
0xc43e  3  mov  rcx, qword ptr [rax]
0xc441  7  mov  rax, qword ptr [rdx + 0x88]
0xc448  3  mov  qword ptr [rcx], rax
0xc44b  3  mov  rax, qword ptr [rbx]
0xc44e  3  mov  rcx, qword ptr [rax]
0xc451  7  mov  rax, qword ptr [rcx + 0x88]
0xc458  3  lock inc  dword ptr [rax]
0xc45b  2  mov  ecx, dword ptr [rdi]
0xc45d  5  call  0xd5bf
0xc462  5  mov  rbx, qword ptr [rsp + 0x50]
0xc467  4  add  rsp, 0x40
0xc46b  1  pop  rdi
0xc46c  1  ret  
0xc46d  1  int3  
0xc46e  1  int3  
0xc46f  2  push  rbx
0xc471  4  sub  rsp, 0x40
0xc475  2  mov  ebx, ecx
0xc477  2  xor  edx, edx
0xc479  5  lea  rcx, [rsp + 0x20]
0xc47e  5  call  0xbfbb
0xc483  7  and  dword ptr [rip + 0x15fee], 0
0xc48a  3  cmp  ebx, -2
0xc48d  2  jne  0xc4a1
0xc48f  10  mov  dword ptr [rip + 0x15fdf], 1
0xc499  6  call  qword ptr [rip + 0x9d19]
0xc49f  2  jmp  0xc4b6
0xc4a1  3  cmp  ebx, -3
0xc4a4  2  jne  0xc4ba
0xc4a6  10  mov  dword ptr [rip + 0x15fc8], 1
0xc4b0  6  call  qword ptr [rip + 0x9cfa]
0xc4b6  2  mov  ebx, eax
0xc4b8  2  jmp  0xc4d1
0xc4ba  3  cmp  ebx, -4
0xc4bd  2  jne  0xc4d1
0xc4bf  5  mov  rax, qword ptr [rsp + 0x28]
0xc4c4  10  mov  dword ptr [rip + 0x15faa], 1
0xc4ce  3  mov  ebx, dword ptr [rax + 0xc]
0xc4d1  5  cmp  byte ptr [rsp + 0x38], 0
0xc4d6  2  je  0xc4e4
0xc4d8  5  mov  rcx, qword ptr [rsp + 0x20]
0xc4dd  7  and  dword ptr [rcx + 0x3a8], 0xfffffffd
0xc4e4  2  mov  eax, ebx
0xc4e6  4  add  rsp, 0x40
0xc4ea  1  pop  rbx
0xc4eb  1  ret  
0xc4ec  1  int3  
0xc4ed  1  int3  
0xc4ee  1  int3  
0xc4ef  5  mov  qword ptr [rsp + 8], rbx
0xc4f4  1  push  rdi
0xc4f5  4  sub  rsp, 0x20
0xc4f9  3  mov  rbx, rcx
0xc4fc  2  xor  edx, edx
0xc4fe  4  add  rcx, 0x18
0xc502  6  mov  r8d, 0x101
0xc508  5  call  0x1f03
0xc50d  2  xor  edx, edx
0xc50f  4  lea  rdi, [rbx + 0xc]
0xc513  3  movzx  eax, dx
0xc516  7  lea  r9, [rip + 0x14e13]
0xc51d  4  mov  qword ptr [rbx + 4], rdx
0xc521  3  mov  r8, rbx
0xc524  7  mov  qword ptr [rbx + 0x220], rdx
0xc52b  3  lea  ecx, [rdx + 6]
0xc52e  3  rep stosw  word ptr [rdi], ax
0xc531  7  lea  rax, [rip + 0x14e10]
0xc538  2  mov  edi, edx
0xc53a  3  sub  r8, rax
0xc53d  4  lea  rcx, [rdi + r9]
0xc541  3  inc  rdi
0xc544  3  mov  al, byte ptr [rcx + 0x18]
0xc547  5  mov  byte ptr [r8 + rcx + 0x30], al
0xc54c  7  cmp  rdi, 0x101
0xc553  2  jl  0xc53d
0xc555  7  lea  rax, [rip + 0x14eed]
0xc55c  3  sub  rbx, rax
0xc55f  4  lea  rcx, [rdx + r9]
0xc563  3  inc  rdx
0xc566  6  mov  al, byte ptr [rcx + 0x119]
0xc56c  7  mov  byte ptr [rbx + rcx + 0x232], al
0xc573  7  cmp  rdx, 0x100
0xc57a  2  jl  0xc55f
0xc57c  5  mov  rbx, qword ptr [rsp + 0x30]
0xc581  4  add  rsp, 0x20
0xc585  1  pop  rdi
0xc586  1  ret  
0xc587  5  mov  qword ptr [rsp + 0x10], rbx
0xc58c  5  mov  qword ptr [rsp + 0x18], rdi
0xc591  1  push  rbp
0xc592  8  lea  rbp, [rsp - 0x680]
0xc59a  7  sub  rsp, 0x780
0xc5a1  7  mov  rax, qword ptr [rip + 0x14a90]
0xc5a8  3  xor  rax, rsp
0xc5ab  7  mov  qword ptr [rbp + 0x670], rax
0xc5b2  3  mov  rdi, rcx
0xc5b5  3  mov  ecx, dword ptr [rcx + 4]
0xc5b8  6  cmp  ecx, 0xfde9
0xc5be  6  je  0xc70b
0xc5c4  5  lea  rdx, [rsp + 0x50]
0xc5c9  6  call  qword ptr [rip + 0x9bf1]
0xc5cf  2  test  eax, eax
0xc5d1  6  je  0xc70b
0xc5d7  2  xor  eax, eax
0xc5d9  5  lea  rcx, [rsp + 0x70]
0xc5de  5  mov  ebx, 0x100
0xc5e3  2  mov  byte ptr [rcx], al
0xc5e5  2  inc  eax
0xc5e7  3  inc  rcx
0xc5ea  2  cmp  eax, ebx
0xc5ec  2  jb  0xc5e3
0xc5ee  4  mov  al, byte ptr [rsp + 0x56]
0xc5f2  5  lea  rdx, [rsp + 0x56]
0xc5f7  5  mov  byte ptr [rsp + 0x70], 0x20
0xc5fc  2  jmp  0xc61e
0xc5fe  5  movzx  r8d, byte ptr [rdx + 1]
0xc603  3  movzx  ecx, al
0xc606  2  jmp  0xc613
0xc608  2  cmp  ecx, ebx
0xc60a  2  jae  0xc618
0xc60c  5  mov  byte ptr [rsp + rcx + 0x70], 0x20
0xc611  2  inc  ecx
0xc613  3  cmp  ecx, r8d
0xc616  2  jbe  0xc608
0xc618  4  add  rdx, 2
0xc61c  2  mov  al, byte ptr [rdx]
0xc61e  2  test  al, al
0xc620  2  jne  0xc5fe
0xc622  3  mov  eax, dword ptr [rdi + 4]
0xc625  5  lea  r8, [rsp + 0x70]
0xc62a  5  and  dword ptr [rsp + 0x30], 0
0xc62f  3  mov  r9d, ebx
0xc632  4  mov  dword ptr [rsp + 0x28], eax
0xc636  5  mov  edx, 1
0xc63b  7  lea  rax, [rbp + 0x270]
0xc642  2  xor  ecx, ecx
0xc644  5  mov  qword ptr [rsp + 0x20], rax
0xc649  5  call  0xdc33
0xc64e  5  and  dword ptr [rsp + 0x40], 0
0xc653  5  lea  r9, [rsp + 0x70]
0xc658  3  mov  eax, dword ptr [rdi + 4]
0xc65b  3  mov  r8d, ebx
0xc65e  7  mov  rdx, qword ptr [rdi + 0x220]
0xc665  2  xor  ecx, ecx
0xc667  4  mov  dword ptr [rsp + 0x38], eax
0xc66b  4  lea  rax, [rbp + 0x70]
0xc66f  4  mov  dword ptr [rsp + 0x30], ebx
0xc673  5  mov  qword ptr [rsp + 0x28], rax
0xc678  4  mov  dword ptr [rsp + 0x20], ebx
0xc67c  5  call  0x122cb
0xc681  5  and  dword ptr [rsp + 0x40], 0
0xc686  5  lea  r9, [rsp + 0x70]
0xc68b  3  mov  eax, dword ptr [rdi + 4]
0xc68e  6  mov  r8d, 0x200
0xc694  7  mov  rdx, qword ptr [rdi + 0x220]
0xc69b  2  xor  ecx, ecx
0xc69d  4  mov  dword ptr [rsp + 0x38], eax
0xc6a1  7  lea  rax, [rbp + 0x170]
0xc6a8  4  mov  dword ptr [rsp + 0x30], ebx
0xc6ac  5  mov  qword ptr [rsp + 0x28], rax
0xc6b1  4  mov  dword ptr [rsp + 0x20], ebx
0xc6b5  5  call  0x122cb
0xc6ba  4  lea  r8, [rbp + 0x70]
0xc6be  3  sub  r8, rdi
0xc6c1  7  lea  r9, [rbp + 0x170]
0xc6c8  3  sub  r9, rdi
0xc6cb  7  lea  rdx, [rbp + 0x270]
0xc6d2  4  lea  rax, [rdi + 0x19]
0xc6d6  3  test  byte ptr [rdx], 1
0xc6d9  2  je  0xc6e5
0xc6db  3  or  byte ptr [rax], 0x10
0xc6de  5  mov  cl, byte ptr [r8 + rax - 0x19]
0xc6e3  2  jmp  0xc6f6
0xc6e5  3  test  byte ptr [rdx], 2
0xc6e8  2  je  0xc6f4
0xc6ea  3  or  byte ptr [rax], 0x20
0xc6ed  5  mov  cl, byte ptr [r9 + rax - 0x19]
0xc6f2  2  jmp  0xc6f6
0xc6f4  2  xor  cl, cl
0xc6f6  6  mov  byte ptr [rax + 0x100], cl
0xc6fc  4  add  rdx, 2
0xc700  3  inc  rax
0xc703  4  sub  rbx, 1
0xc707  2  jne  0xc6d6
0xc709  2  jmp  0xc74a
0xc70b  2  xor  edx, edx
0xc70d  4  lea  rcx, [rdi + 0x19]
0xc711  5  mov  ebx, 0x100
0xc716  4  lea  r8d, [rdx - 0x61]
0xc71a  4  lea  eax, [r8 + 0x20]
0xc71e  3  cmp  eax, 0x19
0xc721  2  ja  0xc72b
0xc723  3  or  byte ptr [rcx], 0x10
0xc726  3  lea  eax, [rdx + 0x20]
0xc729  2  jmp  0xc73b
0xc72b  4  cmp  r8d, 0x19
0xc72f  2  ja  0xc739
0xc731  3  or  byte ptr [rcx], 0x20
0xc734  3  lea  eax, [rdx - 0x20]
0xc737  2  jmp  0xc73b
0xc739  2  xor  al, al
0xc73b  6  mov  byte ptr [rcx + 0x100], al
0xc741  2  inc  edx
0xc743  3  inc  rcx
0xc746  2  cmp  edx, ebx
0xc748  2  jb  0xc716
0xc74a  7  mov  rcx, qword ptr [rbp + 0x670]
0xc751  3  xor  rcx, rsp
0xc754  5  call  0x14c73
0xc759  8  lea  r11, [rsp + 0x780]
0xc761  4  mov  rbx, qword ptr [r11 + 0x18]
0xc765  4  mov  rdi, qword ptr [r11 + 0x20]
0xc769  3  mov  rsp, r11
0xc76c  1  pop  rbp
0xc76d  1  ret  
0xc76e  1  int3  
0xc76f  3  mov  rax, rsp
0xc772  4  mov  qword ptr [rax + 8], rbx
0xc776  4  mov  qword ptr [rax + 0x10], rsi
0xc77a  4  mov  qword ptr [rax + 0x20], r9
0xc77e  4  mov  qword ptr [rax + 0x18], r8
0xc782  1  push  rbp
0xc783  1  push  rdi
0xc784  2  push  r14
0xc786  7  lea  rbp, [rax - 0x188]
0xc78d  7  sub  rsp, 0x270
0xc794  3  mov  r14b, dl
0xc797  2  mov  ebx, ecx
0xc799  3  mov  rdx, r9
0xc79c  3  mov  rcx, r8
0xc79f  5  call  0xc9df
0xc7a4  2  mov  ecx, ebx
0xc7a6  5  call  0xc46f
0xc7ab  7  mov  rcx, qword ptr [rbp + 0x1a0]
0xc7b2  2  mov  edi, eax
0xc7b4  7  mov  r8, qword ptr [rcx + 0x88]
0xc7bb  4  cmp  eax, dword ptr [r8 + 4]
0xc7bf  2  jne  0xc7c8
0xc7c1  2  xor  eax, eax
0xc7c3  5  jmp  0xc9c6
0xc7c8  5  mov  ecx, 0x228
0xc7cd  5  call  0x977f
0xc7d2  3  mov  rbx, rax
0xc7d5  3  test  rax, rax
0xc7d8  2  jne  0xc7e9
0xc7da  2  xor  ecx, ecx
0xc7dc  5  call  0x8b07
0xc7e1  3  or  eax, 0xffffffff
0xc7e4  5  jmp  0xc9c6
0xc7e9  7  mov  rax, qword ptr [rbp + 0x1a0]
0xc7f0  5  lea  rcx, [rsp + 0x40]
0xc7f5  5  mov  edx, 4
0xc7fa  3  mov  r8d, edx
0xc7fd  7  mov  rax, qword ptr [rax + 0x88]
0xc804  4  lea  r9d, [rdx + 0x7c]
0xc808  3  movups  xmm0, xmmword ptr [rax]
0xc80b  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc80f  3  movups  xmmword ptr [rcx], xmm0
0xc812  4  movups  xmm0, xmmword ptr [rax + 0x20]
0xc816  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc81a  4  movups  xmm1, xmmword ptr [rax + 0x30]
0xc81e  4  movups  xmmword ptr [rcx + 0x20], xmm0
0xc822  4  movups  xmm0, xmmword ptr [rax + 0x40]
0xc826  4  movups  xmmword ptr [rcx + 0x30], xmm1
0xc82a  4  movups  xmm1, xmmword ptr [rax + 0x50]
0xc82e  4  movups  xmmword ptr [rcx + 0x40], xmm0
0xc832  4  movups  xmm0, xmmword ptr [rax + 0x60]
0xc836  4  movups  xmmword ptr [rcx + 0x50], xmm1
0xc83a  4  movups  xmm1, xmmword ptr [rax + 0x70]
0xc83e  3  add  rax, r9
0xc841  4  movups  xmmword ptr [rcx + 0x60], xmm0
0xc845  3  add  rcx, r9
0xc848  4  movups  xmmword ptr [rcx - 0x10], xmm1
0xc84c  4  sub  r8, 1
0xc850  2  jne  0xc808
0xc852  3  movups  xmm0, xmmword ptr [rax]
0xc855  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc859  4  mov  rax, qword ptr [rax + 0x20]
0xc85d  3  movups  xmmword ptr [rcx], xmm0
0xc860  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc864  4  mov  qword ptr [rcx + 0x20], rax
0xc868  3  mov  rcx, rbx
0xc86b  5  lea  rax, [rsp + 0x40]
0xc870  3  movups  xmm0, xmmword ptr [rax]
0xc873  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc877  3  movups  xmmword ptr [rcx], xmm0
0xc87a  4  movups  xmm0, xmmword ptr [rax + 0x20]
0xc87e  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc882  4  movups  xmm1, xmmword ptr [rax + 0x30]
0xc886  4  movups  xmmword ptr [rcx + 0x20], xmm0
0xc88a  4  movups  xmm0, xmmword ptr [rax + 0x40]
0xc88e  4  movups  xmmword ptr [rcx + 0x30], xmm1
0xc892  4  movups  xmm1, xmmword ptr [rax + 0x50]
0xc896  4  movups  xmmword ptr [rcx + 0x40], xmm0
0xc89a  4  movups  xmm0, xmmword ptr [rax + 0x60]
0xc89e  4  movups  xmmword ptr [rcx + 0x50], xmm1
0xc8a2  4  movups  xmm1, xmmword ptr [rax + 0x70]
0xc8a6  3  add  rax, r9
0xc8a9  4  movups  xmmword ptr [rcx + 0x60], xmm0
0xc8ad  3  add  rcx, r9
0xc8b0  4  movups  xmmword ptr [rcx - 0x10], xmm1
0xc8b4  4  sub  rdx, 1
0xc8b8  2  jne  0xc870
0xc8ba  3  movups  xmm0, xmmword ptr [rax]
0xc8bd  4  movups  xmm1, xmmword ptr [rax + 0x10]
0xc8c1  4  mov  rax, qword ptr [rax + 0x20]
0xc8c5  3  movups  xmmword ptr [rcx], xmm0
0xc8c8  4  movups  xmmword ptr [rcx + 0x10], xmm1
0xc8cc  4  mov  qword ptr [rcx + 0x20], rax
0xc8d0  2  mov  ecx, edi
0xc8d2  2  and  dword ptr [rbx], edx
0xc8d4  3  mov  rdx, rbx
0xc8d7  5  call  0xcb13
0xc8dc  3  or  edi, 0xffffffff
0xc8df  2  mov  esi, eax
0xc8e1  2  cmp  eax, edi
0xc8e3  2  jne  0xc8ff
0xc8e5  5  call  0x8a6f
0xc8ea  3  mov  rcx, rbx
0xc8ed  6  mov  dword ptr [rax], 0x16
0xc8f3  5  call  0x8b07
0xc8f8  2  mov  eax, edi
0xc8fa  5  jmp  0xc9c6
0xc8ff  3  test  r14b, r14b
0xc902  2  jne  0xc909
0xc904  5  call  0x7d77
0xc909  7  mov  rax, qword ptr [rbp + 0x1a0]
0xc910  7  mov  rcx, qword ptr [rax + 0x88]
0xc917  2  mov  eax, edi
0xc919  4  lock xadd  dword ptr [rcx], eax
0xc91d  2  add  eax, edi
0xc91f  2  jne  0xc940
0xc921  7  mov  rax, qword ptr [rbp + 0x1a0]
0xc928  7  mov  rcx, qword ptr [rax + 0x88]
0xc92f  7  lea  rax, [rip + 0x149fa]
0xc936  3  cmp  rcx, rax
0xc939  2  je  0xc940
0xc93b  5  call  0x8b07
0xc940  6  mov  dword ptr [rbx], 1
0xc946  7  mov  rax, qword ptr [rbp + 0x1a0]
0xc94d  7  mov  qword ptr [rax + 0x88], rbx
0xc954  7  mov  rax, qword ptr [rbp + 0x1a0]
0xc95b  6  mov  ecx, dword ptr [rax + 0x3a8]
0xc961  6  test  dword ptr [rip + 0x14fa9], ecx
0xc967  2  jne  0xc9bd
0xc969  7  lea  rax, [rbp + 0x1a0]
0xc970  5  mov  qword ptr [rsp + 0x30], rax
0xc975  5  lea  r9, [rsp + 0x24]
0xc97a  7  lea  rax, [rbp + 0x1a8]
0xc981  5  mov  qword ptr [rsp + 0x38], rax
0xc986  5  lea  r8, [rsp + 0x30]
0xc98b  5  mov  eax, 5
0xc990  5  lea  rdx, [rsp + 0x28]
0xc995  5  lea  rcx, [rsp + 0x20]
0xc99a  4  mov  dword ptr [rsp + 0x24], eax
0xc99e  4  mov  dword ptr [rsp + 0x28], eax
0xc9a2  5  call  0xc29f
0xc9a7  3  test  r14b, r14b
0xc9aa  2  je  0xc9bd
0xc9ac  7  mov  rax, qword ptr [rbp + 0x1a8]
0xc9b3  3  mov  rcx, qword ptr [rax]
0xc9b6  7  mov  qword ptr [rip + 0x14963], rcx
0xc9bd  2  xor  ecx, ecx
0xc9bf  5  call  0x8b07
0xc9c4  2  mov  eax, esi
0xc9c6  8  lea  r11, [rsp + 0x270]
0xc9ce  4  mov  rbx, qword ptr [r11 + 0x20]
0xc9d2  4  mov  rsi, qword ptr [r11 + 0x28]
0xc9d6  3  mov  rsp, r11
0xc9d9  2  pop  r14
0xc9db  1  pop  rdi
0xc9dc  1  pop  rbp
0xc9dd  1  ret  
0xc9de  1  int3  
0xc9df  5  mov  qword ptr [rsp + 0x10], rbx
0xc9e4  5  mov  qword ptr [rsp + 0x18], rsi
0xc9e9  1  push  rdi
0xc9ea  4  sub  rsp, 0x20
0xc9ee  3  mov  rsi, rdx
0xc9f1  3  mov  rdi, rcx
0xc9f4  6  mov  eax, dword ptr [rip + 0x14f16]
0xc9fa  6  test  dword ptr [rcx + 0x3a8], eax
0xca00  2  je  0xca15
0xca02  8  cmp  qword ptr [rcx + 0x90], 0
0xca0a  2  je  0xca15
0xca0c  7  mov  rbx, qword ptr [rcx + 0x88]
0xca13  2  jmp  0xca79
0xca15  5  mov  ecx, 5
0xca1a  5  call  0xd56b
0xca1f  1  nop  
0xca20  7  mov  rbx, qword ptr [rdi + 0x88]
0xca27  5  mov  qword ptr [rsp + 0x30], rbx
0xca2c  3  cmp  rbx, qword ptr [rsi]
0xca2f  2  je  0xca6f
0xca31  3  test  rbx, rbx
0xca34  2  je  0xca58
0xca36  3  or  eax, 0xffffffff
0xca39  4  lock xadd  dword ptr [rbx], eax
0xca3d  3  cmp  eax, 1
0xca40  2  jne  0xca58
0xca42  7  lea  rax, [rip + 0x148e7]
0xca49  5  mov  rcx, qword ptr [rsp + 0x30]
0xca4e  3  cmp  rcx, rax
0xca51  2  je  0xca58
0xca53  5  call  0x8b07
0xca58  3  mov  rax, qword ptr [rsi]
0xca5b  7  mov  qword ptr [rdi + 0x88], rax
0xca62  5  mov  qword ptr [rsp + 0x30], rax
0xca67  3  lock inc  dword ptr [rax]
0xca6a  5  mov  rbx, qword ptr [rsp + 0x30]
0xca6f  5  mov  ecx, 5
0xca74  5  call  0xd5bf
0xca79  3  test  rbx, rbx
0xca7c  2  je  0xca91
0xca7e  3  mov  rax, rbx
0xca81  5  mov  rbx, qword ptr [rsp + 0x38]
0xca86  5  mov  rsi, qword ptr [rsp + 0x40]
0xca8b  4  add  rsp, 0x20
0xca8f  1  pop  rdi
0xca90  1  ret  
0xca91  5  call  0x8487
0xca96  1  nop  
0xca97  4  sub  rsp, 0x28
0xca9b  7  cmp  byte ptr [rip + 0x159da], 0
0xcaa2  2  jne  0xcaf0
0xcaa4  7  lea  rcx, [rip + 0x14bc5]
0xcaab  7  mov  qword ptr [rip + 0x159b6], rcx
0xcab2  7  lea  rax, [rip + 0x14877]
0xcab9  7  lea  rcx, [rip + 0x14aa0]
0xcac0  7  mov  qword ptr [rip + 0x159a9], rax
0xcac7  7  mov  qword ptr [rip + 0x15992], rcx
0xcace  5  call  0xb2fb
0xcad3  7  lea  r9, [rip + 0x15996]
0xcada  3  mov  r8, rax
0xcadd  2  mov  dl, 1
0xcadf  5  mov  ecx, 0xfffffffd
0xcae4  5  call  0xc76f
0xcae9  7  mov  byte ptr [rip + 0x1598c], 1
0xcaf0  2  mov  al, 1
0xcaf2  4  add  rsp, 0x28
0xcaf6  1  ret  
0xcaf7  4  sub  rsp, 0x28
0xcafb  5  call  0xb227
0xcb00  7  lea  rdx, [rip + 0x15969]
0xcb07  3  mov  rcx, rax
0xcb0a  4  add  rsp, 0x28
0xcb0e  5  jmp  0xc9df
0xcb13  5  mov  qword ptr [rsp + 0x18], rbx
0xcb18  5  mov  qword ptr [rsp + 0x20], rbp
0xcb1d  1  push  rsi
0xcb1e  1  push  rdi
0xcb1f  2  push  r12
0xcb21  2  push  r14
0xcb23  2  push  r15
0xcb25  4  sub  rsp, 0x40
0xcb29  7  mov  rax, qword ptr [rip + 0x14508]
0xcb30  3  xor  rax, rsp
0xcb33  5  mov  qword ptr [rsp + 0x38], rax
0xcb38  3  mov  rsi, rdx
0xcb3b  5  call  0xc46f
0xcb40  2  xor  ebx, ebx
0xcb42  2  mov  edi, eax
0xcb44  2  test  eax, eax
0xcb46  6  je  0xcda0
0xcb4c  7  lea  r12, [rip + 0x14c2d]
0xcb53  3  mov  r14d, ebx
0xcb56  3  mov  rax, r12
0xcb59  3  lea  ebp, [rbx + 1]
0xcb5c  2  cmp  dword ptr [rax], edi
0xcb5e  6  je  0xccaa
0xcb64  3  add  r14d, ebp
0xcb67  4  add  rax, 0x30
0xcb6b  4  cmp  r14d, 5
0xcb6f  2  jb  0xcb5c
0xcb71  6  cmp  edi, 0xfde8
0xcb77  6  je  0xcca2
0xcb7d  3  movzx  ecx, di
0xcb80  6  call  qword ptr [rip + 0x9622]
0xcb86  2  test  eax, eax
0xcb88  6  je  0xcca2
0xcb8e  5  mov  eax, 0xfde9
0xcb93  2  cmp  edi, eax
0xcb95  2  jne  0xcbbd
0xcb97  4  mov  qword ptr [rsi + 4], rax
0xcb9b  7  mov  qword ptr [rsi + 0x220], rbx
0xcba2  3  mov  dword ptr [rsi + 0x18], ebx
0xcba5  4  mov  word ptr [rsi + 0x1c], bx
0xcba9  4  lea  rdi, [rsi + 0xc]
0xcbad  3  movzx  eax, bx
0xcbb0  5  mov  ecx, 6
0xcbb5  3  rep stosw  word ptr [rdi], ax
0xcbb8  5  jmp  0xcd96
0xcbbd  5  lea  rdx, [rsp + 0x20]
0xcbc2  2  mov  ecx, edi
0xcbc4  6  call  qword ptr [rip + 0x95f6]
0xcbca  2  test  eax, eax
0xcbcc  6  je  0xcc96
0xcbd2  4  lea  rcx, [rsi + 0x18]
0xcbd6  2  xor  edx, edx
0xcbd8  6  mov  r8d, 0x101
0xcbde  5  call  0x1f03
0xcbe3  5  cmp  dword ptr [rsp + 0x20], 2
0xcbe8  3  mov  dword ptr [rsi + 4], edi
0xcbeb  7  mov  qword ptr [rsi + 0x220], rbx
0xcbf2  6  jne  0xcc8c
0xcbf8  5  lea  rcx, [rsp + 0x26]
0xcbfd  4  cmp  byte ptr [rsp + 0x26], bl
0xcc01  2  je  0xcc2f
0xcc03  3  cmp  byte ptr [rcx + 1], bl
0xcc06  2  je  0xcc2f
0xcc08  4  movzx  eax, byte ptr [rcx + 1]
0xcc0c  3  movzx  edx, byte ptr [rcx]
0xcc0f  2  cmp  edx, eax
0xcc11  2  ja  0xcc27
0xcc13  2  sub  eax, edx
0xcc15  3  lea  edi, [rdx + 1]
0xcc18  3  lea  edx, [rax + rbp]
0xcc1b  5  or  byte ptr [rdi + rsi + 0x18], 4
0xcc20  2  add  edi, ebp
0xcc22  3  sub  rdx, rbp
0xcc25  2  jne  0xcc1b
0xcc27  4  add  rcx, 2
0xcc2b  2  cmp  byte ptr [rcx], bl
0xcc2d  2  jne  0xcc03
0xcc2f  4  lea  rax, [rsi + 0x1a]
0xcc33  5  mov  ecx, 0xfe
0xcc38  3  or  byte ptr [rax], 8
0xcc3b  3  add  rax, rbp
0xcc3e  3  sub  rcx, rbp
0xcc41  2  jne  0xcc38
0xcc43  3  mov  ecx, dword ptr [rsi + 4]
0xcc46  6  sub  ecx, 0x3a4
0xcc4c  2  je  0xcc7c
0xcc4e  3  sub  ecx, 4
0xcc51  2  je  0xcc73
0xcc53  3  sub  ecx, 0xd
0xcc56  2  je  0xcc6a
0xcc58  2  cmp  ecx, ebp
0xcc5a  2  je  0xcc61
0xcc5c  3  mov  rax, rbx
0xcc5f  2  jmp  0xcc83
0xcc61  7  mov  rax, qword ptr [rip + 0xb980]
0xcc68  2  jmp  0xcc83
0xcc6a  7  mov  rax, qword ptr [rip + 0xb96f]
0xcc71  2  jmp  0xcc83
0xcc73  7  mov  rax, qword ptr [rip + 0xb95e]
0xcc7a  2  jmp  0xcc83
0xcc7c  7  mov  rax, qword ptr [rip + 0xb94d]
0xcc83  7  mov  qword ptr [rsi + 0x220], rax
0xcc8a  2  jmp  0xcc8e
0xcc8c  2  mov  ebp, ebx
0xcc8e  3  mov  dword ptr [rsi + 8], ebp
0xcc91  5  jmp  0xcba9
0xcc96  6  cmp  dword ptr [rip + 0x157dc], ebx
0xcc9c  6  jne  0xcda0
0xcca2  3  or  eax, 0xffffffff
0xcca5  5  jmp  0xcdaa
0xccaa  4  lea  rcx, [rsi + 0x18]
0xccae  2  xor  edx, edx
0xccb0  6  mov  r8d, 0x101
0xccb6  5  call  0x1f03
0xccbb  3  mov  eax, r14d
0xccbe  5  lea  r9, [r12 + 0x10]
0xccc3  7  lea  r11, [rip + 0x14aa6]
0xccca  6  mov  r14d, 4
0xccd0  4  lea  r15, [rax + rax*2]
0xccd4  4  shl  r15, 4
0xccd8  3  add  r9, r15
0xccdb  3  mov  rdx, r9
0xccde  3  cmp  byte ptr [r9], bl
0xcce1  2  je  0xcd21
0xcce3  3  cmp  byte ptr [rdx + 1], bl
0xcce6  2  je  0xcd21
0xcce8  4  movzx  r8d, byte ptr [rdx]
0xccec  4  movzx  eax, byte ptr [rdx + 1]
0xccf0  3  cmp  r8d, eax
0xccf3  2  ja  0xcd19
0xccf5  4  lea  r10d, [r8 + 1]
0xccf9  7  cmp  r10d, 0x101
0xcd00  2  jae  0xcd19
0xcd02  3  mov  al, byte ptr [r11]
0xcd05  3  add  r8d, ebp
0xcd08  5  or  byte ptr [r10 + rsi + 0x18], al
0xcd0d  3  add  r10d, ebp
0xcd10  4  movzx  eax, byte ptr [rdx + 1]
0xcd14  3  cmp  r8d, eax
0xcd17  2  jbe  0xccf9
0xcd19  4  add  rdx, 2
0xcd1d  2  cmp  byte ptr [rdx], bl
0xcd1f  2  jne  0xcce3
0xcd21  4  add  r9, 8
0xcd25  3  add  r11, rbp
0xcd28  3  sub  r14, rbp
0xcd2b  2  jne  0xccdb
0xcd2d  3  mov  dword ptr [rsi + 4], edi
0xcd30  3  mov  dword ptr [rsi + 8], ebp
0xcd33  6  sub  edi, 0x3a4
0xcd39  2  je  0xcd64
0xcd3b  3  sub  edi, 4
0xcd3e  2  je  0xcd5b
0xcd40  3  sub  edi, 0xd
0xcd43  2  je  0xcd52
0xcd45  2  cmp  edi, ebp
0xcd47  2  jne  0xcd6b
0xcd49  7  mov  rbx, qword ptr [rip + 0xb898]
0xcd50  2  jmp  0xcd6b
0xcd52  7  mov  rbx, qword ptr [rip + 0xb887]
0xcd59  2  jmp  0xcd6b
0xcd5b  7  mov  rbx, qword ptr [rip + 0xb876]
0xcd62  2  jmp  0xcd6b
0xcd64  7  mov  rbx, qword ptr [rip + 0xb865]
0xcd6b  5  lea  rdi, [r12 + 4]
0xcd70  7  mov  qword ptr [rsi + 0x220], rbx
0xcd77  3  add  rdi, r15
0xcd7a  4  lea  rdx, [rsi + 0xc]
0xcd7e  5  mov  ecx, 6
0xcd83  3  movzx  eax, word ptr [rdi]
0xcd86  4  lea  rdi, [rdi + 2]
0xcd8a  3  mov  word ptr [rdx], ax
0xcd8d  4  lea  rdx, [rdx + 2]
0xcd91  3  sub  rcx, rbp
0xcd94  2  jne  0xcd83
0xcd96  3  mov  rcx, rsi
0xcd99  5  call  0xc587
0xcd9e  2  jmp  0xcda8
0xcda0  3  mov  rcx, rsi
0xcda3  5  call  0xc4ef
0xcda8  2  xor  eax, eax
0xcdaa  5  mov  rcx, qword ptr [rsp + 0x38]
0xcdaf  3  xor  rcx, rsp
0xcdb2  5  call  0x14c73
0xcdb7  5  lea  r11, [rsp + 0x40]
0xcdbc  4  mov  rbx, qword ptr [r11 + 0x40]
0xcdc0  4  mov  rbp, qword ptr [r11 + 0x48]
0xcdc4  3  mov  rsp, r11
0xcdc7  2  pop  r15
0xcdc9  2  pop  r14
0xcdcb  2  pop  r12
0xcdcd  1  pop  rdi
0xcdce  1  pop  rsi
0xcdcf  1  ret  
0xcdd0  1  int3  
0xcdd1  1  int3  
0xcdd2  1  int3  
0xcdd3  5  mov  qword ptr [rsp + 8], rbx
0xcdd8  5  mov  qword ptr [rsp + 0x10], rsi
0xcddd  1  push  rdi
0xcdde  4  sub  rsp, 0x40
0xcde2  2  mov  ebx, edx
0xcde4  3  mov  edi, r9d
0xcde7  3  mov  rdx, rcx
0xcdea  3  mov  esi, r8d
0xcded  5  lea  rcx, [rsp + 0x20]
0xcdf2  5  call  0xbfbb
0xcdf7  5  mov  rax, qword ptr [rsp + 0x30]
0xcdfc  3  movzx  edx, bl
0xcdff  5  test  byte ptr [rdx + rax + 0x19], dil
0xce04  2  jne  0xce1e
0xce06  2  test  esi, esi
0xce08  2  je  0xce1a
0xce0a  5  mov  rax, qword ptr [rsp + 0x28]
0xce0f  3  mov  rcx, qword ptr [rax]
0xce12  4  movzx  eax, word ptr [rcx + rdx*2]
0xce16  2  test  esi, eax
0xce18  2  jne  0xce1e
0xce1a  2  xor  eax, eax
0xce1c  2  jmp  0xce23
0xce1e  5  mov  eax, 1
0xce23  5  cmp  byte ptr [rsp + 0x38], 0
0xce28  2  je  0xce36
0xce2a  5  mov  rcx, qword ptr [rsp + 0x20]
0xce2f  7  and  dword ptr [rcx + 0x3a8], 0xfffffffd
0xce36  5  mov  rbx, qword ptr [rsp + 0x50]
0xce3b  5  mov  rsi, qword ptr [rsp + 0x58]
0xce40  4  add  rsp, 0x40
0xce44  1  pop  rdi
0xce45  1  ret  
0xce46  1  int3  
0xce47  2  mov  edx, ecx
0xce49  6  mov  r9d, 4
0xce4f  2  xor  ecx, ecx
0xce51  3  xor  r8d, r8d
0xce54  5  jmp  0xcdd3
0xce59  1  int3  
0xce5a  1  int3  
0xce5b  5  mov  eax, 0xdeac
0xce60  2  cmp  ecx, eax
0xce62  2  ja  0xceb3
0xce64  2  je  0xceaa
0xce66  5  mov  eax, 0xc433
0xce6b  2  cmp  ecx, eax
0xce6d  2  ja  0xce8e
0xce6f  2  je  0xceaa
0xce71  2  mov  eax, ecx
0xce73  3  sub  eax, 0x2a
0xce76  2  je  0xceaa
0xce78  5  sub  eax, 0xc402
0xce7d  2  je  0xceaa
0xce7f  3  sub  eax, 1
0xce82  2  je  0xceaa
0xce84  3  sub  eax, 1
0xce87  2  je  0xceaa
0xce89  3  cmp  eax, 3
0xce8c  2  jmp  0xcea8
0xce8e  2  mov  eax, ecx
0xce90  5  sub  eax, 0xc435
0xce95  2  je  0xceaa
0xce97  5  sub  eax, 0x1263
0xce9c  2  je  0xcee6
0xce9e  5  sub  eax, 0x812
0xcea3  2  je  0xceaa
0xcea5  3  cmp  eax, 1
0xcea8  2  jne  0xceac
0xceaa  2  xor  edx, edx
0xceac  6  jmp  qword ptr [rip + 0x9315]
0xceb3  2  mov  eax, ecx
0xceb5  5  sub  eax, 0xdead
0xceba  2  je  0xceaa
0xcebc  3  sub  eax, 1
0xcebf  2  je  0xceaa
0xcec1  3  sub  eax, 1
0xcec4  2  je  0xceaa
0xcec6  3  sub  eax, 1
0xcec9  2  je  0xceaa
0xcecb  3  sub  eax, 1
0xcece  2  je  0xceaa
0xced0  3  sub  eax, 1
0xced3  2  je  0xceaa
0xced5  3  sub  eax, 1
0xced8  2  je  0xceaa
0xceda  5  sub  eax, 0x1f35
0xcedf  2  je  0xceaa
0xcee1  3  cmp  eax, 1
0xcee4  2  jne  0xceac
0xcee6  3  and  edx, 8
0xcee9  2  jmp  0xceac
0xceeb  5  mov  qword ptr [rsp + 8], rbx
0xcef0  1  push  rdi
0xcef1  6  lea  eax, [rcx - 0xfde8]
0xcef7  3  mov  r11d, r9d
0xcefa  3  cmp  eax, 1
0xcefd  3  mov  rbx, r8
0xcf00  5  mov  eax, 0xdeac
0xcf05  4  setbe  r10b
0xcf09  2  xor  edi, edi
0xcf0b  2  cmp  ecx, eax
0xcf0d  2  ja  0xcf50
0xcf0f  2  je  0xcf89
0xcf11  5  mov  eax, 0xc433
0xcf16  2  cmp  ecx, eax
0xcf18  2  ja  0xcf39
0xcf1a  2  je  0xcf89
0xcf1c  2  mov  eax, ecx
0xcf1e  3  sub  eax, 0x2a
0xcf21  2  je  0xcf89
0xcf23  5  sub  eax, 0xc402
0xcf28  2  je  0xcf89
0xcf2a  3  sub  eax, 1
0xcf2d  2  je  0xcf89
0xcf2f  3  sub  eax, 1
0xcf32  2  je  0xcf89
0xcf34  3  cmp  eax, 3
0xcf37  2  jmp  0xcf81
0xcf39  2  mov  eax, ecx
0xcf3b  5  sub  eax, 0xc435
0xcf40  2  je  0xcf89
0xcf42  5  sub  eax, 0x1263
0xcf47  2  je  0xcf89
0xcf49  5  sub  eax, 0x812
0xcf4e  2  jmp  0xcf7c
0xcf50  2  mov  eax, ecx
0xcf52  5  sub  eax, 0xdead
0xcf57  2  je  0xcf89
0xcf59  3  sub  eax, 1
0xcf5c  2  je  0xcf89
0xcf5e  3  sub  eax, 1
0xcf61  2  je  0xcf89
0xcf63  3  sub  eax, 1
0xcf66  2  je  0xcf89
0xcf68  3  sub  eax, 1
0xcf6b  2  je  0xcf89
0xcf6d  3  sub  eax, 1
0xcf70  2  je  0xcf89
0xcf72  3  sub  eax, 1
0xcf75  2  je  0xcf89
0xcf77  5  sub  eax, 0x1f35
0xcf7c  2  je  0xcf89
0xcf7e  3  cmp  eax, 1
0xcf81  2  je  0xcf89
0xcf83  4  btr  edx, 7
0xcf87  2  jmp  0xcf8b
0xcf89  2  mov  edx, edi
0xcf8b  5  mov  rax, qword ptr [rsp + 0x48]
0xcf90  3  test  r10b, r10b
0xcf93  5  mov  r9, qword ptr [rsp + 0x40]
0xcf98  3  mov  r8, rax
0xcf9b  4  cmovne  r8, rdi
0xcf9f  4  cmovne  r9, rdi
0xcfa3  2  je  0xcfac
0xcfa5  3  test  rax, rax
0xcfa8  2  je  0xcfac
0xcfaa  2  mov  dword ptr [rax], edi
0xcfac  5  mov  qword ptr [rsp + 0x48], r8
0xcfb1  3  mov  r8, rbx
0xcfb4  5  mov  qword ptr [rsp + 0x40], r9
0xcfb9  3  mov  r9d, r11d
0xcfbc  5  mov  rbx, qword ptr [rsp + 0x10]
0xcfc1  1  pop  rdi
0xcfc2  6  jmp  qword ptr [rip + 0x9207]
0xcfc9  1  int3  
0xcfca  1  int3  
0xcfcb  3  mov  rax, rsp
0xcfce  4  mov  qword ptr [rax + 8], rbx
0xcfd2  4  mov  qword ptr [rax + 0x10], rbp
0xcfd6  4  mov  qword ptr [rax + 0x18], rsi
0xcfda  4  mov  qword ptr [rax + 0x20], rdi
0xcfde  2  push  r14
0xcfe0  4  sub  rsp, 0x40
0xcfe4  6  call  qword ptr [rip + 0x91ee]
0xcfea  2  xor  esi, esi
0xcfec  3  mov  rbx, rax
0xcfef  3  test  rax, rax
0xcff2  2  jne  0xcffb
0xcff4  2  xor  eax, eax
0xcff6  5  jmp  0xd0be
0xcffb  3  mov  rbp, rbx
0xcffe  3  cmp  word ptr [rax], si
0xd001  2  je  0xd020
0xd003  4  or  rax, 0xffffffffffffffff
0xd007  3  inc  rax
0xd00a  5  cmp  word ptr [rbp + rax*2], si
0xd00f  2  jne  0xd007
0xd011  5  lea  rbp, [rbp + rax*2]
0xd016  4  add  rbp, 2
0xd01a  4  cmp  word ptr [rbp], si
0xd01e  2  jne  0xd003
0xd020  5  mov  qword ptr [rsp + 0x38], rsi
0xd025  3  sub  rbp, rbx
0xd028  5  mov  qword ptr [rsp + 0x30], rsi
0xd02d  4  add  rbp, 2
0xd031  3  sar  rbp, 1
0xd034  3  mov  r8, rbx
0xd037  3  mov  r9d, ebp
0xd03a  4  mov  dword ptr [rsp + 0x28], esi
0xd03e  2  xor  edx, edx
0xd040  5  mov  qword ptr [rsp + 0x20], rsi
0xd045  2  xor  ecx, ecx
0xd047  5  call  0xceeb
0xd04c  3  movsxd  r14, eax
0xd04f  2  test  eax, eax
0xd051  2  jne  0xd05e
0xd053  3  mov  rcx, rbx
0xd056  6  call  qword ptr [rip + 0x9184]
0xd05c  2  jmp  0xcff4
0xd05e  3  mov  rcx, r14
0xd061  5  call  0x977f
0xd066  3  mov  rdi, rax
0xd069  3  test  rax, rax
0xd06c  2  jne  0xd077
0xd06e  2  xor  ecx, ecx
0xd070  5  call  0x8b07
0xd075  2  jmp  0xd053
0xd077  5  mov  qword ptr [rsp + 0x38], rsi
0xd07c  3  mov  r9d, ebp
0xd07f  5  mov  qword ptr [rsp + 0x30], rsi
0xd084  3  mov  r8, rbx
0xd087  5  mov  dword ptr [rsp + 0x28], r14d
0xd08c  2  xor  edx, edx
0xd08e  2  xor  ecx, ecx
0xd090  5  mov  qword ptr [rsp + 0x20], rdi
0xd095  5  call  0xceeb
0xd09a  2  test  eax, eax
0xd09c  2  jne  0xd0a8
0xd09e  3  mov  rcx, rdi
0xd0a1  5  call  0x8b07
0xd0a6  2  jmp  0xd0b2
0xd0a8  2  xor  ecx, ecx
0xd0aa  5  call  0x8b07
0xd0af  3  mov  rsi, rdi
0xd0b2  3  mov  rcx, rbx
0xd0b5  6  call  qword ptr [rip + 0x9125]
0xd0bb  3  mov  rax, rsi
0xd0be  5  mov  rbx, qword ptr [rsp + 0x50]
0xd0c3  5  mov  rbp, qword ptr [rsp + 0x58]
0xd0c8  5  mov  rsi, qword ptr [rsp + 0x60]
0xd0cd  5  mov  rdi, qword ptr [rsp + 0x68]
0xd0d2  4  add  rsp, 0x40
0xd0d6  2  pop  r14
0xd0d8  1  ret  
0xd0d9  1  int3  
0xd0da  1  int3  
0xd0db  5  mov  qword ptr [rsp + 0x18], rbx
0xd0e0  4  mov  dword ptr [rsp + 0x10], edx
0xd0e4  1  push  rbp
0xd0e5  1  push  rsi
0xd0e6  1  push  rdi
0xd0e7  2  push  r12
0xd0e9  2  push  r13
0xd0eb  2  push  r14
0xd0ed  2  push  r15
0xd0ef  4  sub  rsp, 0x30
0xd0f3  2  xor  esi, esi
0xd0f5  2  mov  ebx, edx
0xd0f7  3  mov  r15, rcx
0xd0fa  3  test  rcx, rcx
0xd0fd  2  jne  0xd10f
0xd0ff  5  call  0x8a6f
0xd104  6  mov  dword ptr [rax], 0x16
0xd10a  5  jmp  0xd402
0xd10f  5  mov  edx, 0x3d
0xd114  3  mov  rdi, r15
0xd117  5  call  0x15293
0xd11c  3  mov  r13, rax
0xd11f  3  test  rax, rax
0xd122  6  je  0xd3ef
0xd128  3  cmp  rax, r15
0xd12b  6  je  0xd3ef
0xd131  7  mov  r14, qword ptr [rip + 0x14c90]
0xd138  7  cmp  r14, qword ptr [rip + 0x14ca1]
0xd13f  4  mov  bpl, byte ptr [rax + 1]
0xd143  5  mov  byte ptr [rsp + 0x70], bpl
0xd148  2  jne  0xd15c
0xd14a  3  mov  rcx, r14
0xd14d  5  call  0xd433
0xd152  3  mov  r14, rax
0xd155  7  mov  qword ptr [rip + 0x14c6c], rax
0xd15c  6  mov  r12d, 1
0xd162  3  test  r14, r14
0xd165  6  jne  0xd235
0xd16b  2  test  ebx, ebx
0xd16d  2  je  0xd1c4
0xd16f  7  cmp  qword ptr [rip + 0x14c5a], rsi
0xd176  2  je  0xd1c4
0xd178  5  call  0x7817
0xd17d  3  test  rax, rax
0xd180  2  jne  0xd1a0
0xd182  5  call  0x8a6f
0xd187  6  mov  dword ptr [rax], 0x16
0xd18d  4  or  rbp, 0xffffffffffffffff
0xd191  3  mov  rcx, r15
0xd194  5  call  0x8b07
0xd199  2  mov  eax, ebp
0xd19b  5  jmp  0xd406
0xd1a0  7  mov  r14, qword ptr [rip + 0x14c21]
0xd1a7  7  cmp  r14, qword ptr [rip + 0x14c32]
0xd1ae  2  jne  0xd22c
0xd1b0  3  mov  rcx, r14
0xd1b3  5  call  0xd433
0xd1b8  3  mov  r14, rax
0xd1bb  7  mov  qword ptr [rip + 0x14c06], rax
0xd1c2  2  jmp  0xd22c
0xd1c4  3  test  bpl, bpl
0xd1c7  6  je  0xd2e5
0xd1cd  5  mov  edx, 8
0xd1d2  3  mov  rcx, r12
0xd1d5  5  call  0x8a8f
0xd1da  2  xor  ecx, ecx
0xd1dc  7  mov  qword ptr [rip + 0x14be5], rax
0xd1e3  5  call  0x8b07
0xd1e8  7  mov  r14, qword ptr [rip + 0x14bd9]
0xd1ef  3  test  r14, r14
0xd1f2  2  je  0xd18d
0xd1f4  7  cmp  qword ptr [rip + 0x14bd5], rsi
0xd1fb  2  jne  0xd22c
0xd1fd  5  mov  edx, 8
0xd202  3  mov  rcx, r12
0xd205  5  call  0x8a8f
0xd20a  2  xor  ecx, ecx
0xd20c  7  mov  qword ptr [rip + 0x14bbd], rax
0xd213  5  call  0x8b07
0xd218  7  cmp  qword ptr [rip + 0x14bb1], rsi
0xd21f  6  je  0xd18d
0xd225  7  mov  r14, qword ptr [rip + 0x14b9c]
0xd22c  3  test  r14, r14
0xd22f  6  je  0xd18d
0xd235  3  mov  rax, qword ptr [r14]
0xd238  3  mov  r12, r13
0xd23b  3  sub  r12, r15
0xd23e  3  mov  rbx, r14
0xd241  3  test  rax, rax
0xd244  2  je  0xd27a
0xd246  3  mov  r8, r12
0xd249  3  mov  rdx, rax
0xd24c  3  mov  rcx, r15
0xd24f  5  call  0x1237b
0xd254  2  test  eax, eax
0xd256  2  jne  0xd268
0xd258  3  mov  rax, qword ptr [rbx]
0xd25b  5  cmp  byte ptr [r12 + rax], 0x3d
0xd260  2  je  0xd271
0xd262  4  cmp  byte ptr [r12 + rax], sil
0xd266  2  je  0xd271
0xd268  4  add  rbx, 8
0xd26c  3  mov  rax, qword ptr [rbx]
0xd26f  2  jmp  0xd241
0xd271  3  sub  rbx, r14
0xd274  4  sar  rbx, 3
0xd278  2  jmp  0xd284
0xd27a  3  sub  rbx, r14
0xd27d  4  sar  rbx, 3
0xd281  3  neg  rbx
0xd284  3  test  rbx, rbx
0xd287  2  js  0xd2e0
0xd289  3  cmp  qword ptr [r14], rsi
0xd28c  2  je  0xd2e0
0xd28e  4  mov  rcx, qword ptr [r14 + rbx*8]
0xd292  5  call  0x8b07
0xd297  3  test  bpl, bpl
0xd29a  2  je  0xd2b1
0xd29c  4  mov  qword ptr [r14 + rbx*8], r15
0xd2a0  5  jmp  0xd340
0xd2a5  5  mov  rax, qword ptr [r14 + rbx*8 + 8]
0xd2aa  4  mov  qword ptr [r14 + rbx*8], rax
0xd2ae  3  inc  rbx
0xd2b1  4  cmp  qword ptr [r14 + rbx*8], rsi
0xd2b5  2  jne  0xd2a5
0xd2b7  6  mov  r8d, 8
0xd2bd  3  mov  rdx, rbx
0xd2c0  3  mov  rcx, r14
0xd2c3  5  call  0xe1cf
0xd2c8  2  xor  ecx, ecx
0xd2ca  3  mov  rbx, rax
0xd2cd  5  call  0x8b07
0xd2d2  3  test  rbx, rbx
0xd2d5  2  je  0xd343
0xd2d7  7  mov  qword ptr [rip + 0x14aea], rbx
0xd2de  2  jmp  0xd343
0xd2e0  3  test  bpl, bpl
0xd2e3  2  jne  0xd2ec
0xd2e5  2  mov  ebp, esi
0xd2e7  5  jmp  0xd191
0xd2ec  3  neg  rbx
0xd2ef  4  lea  rdx, [rbx + 2]
0xd2f3  3  cmp  rdx, rbx
0xd2f6  6  jb  0xd18d
0xd2fc  10  movabs  rax, 0x1fffffffffffffff
0xd306  3  cmp  rdx, rax
0xd309  6  jae  0xd18d
0xd30f  6  mov  r8d, 8
0xd315  3  mov  rcx, r14
0xd318  5  call  0xe1cf
0xd31d  2  xor  ecx, ecx
0xd31f  3  mov  r14, rax
0xd322  5  call  0x8b07
0xd327  3  test  r14, r14
0xd32a  6  je  0xd18d
0xd330  4  mov  qword ptr [r14 + rbx*8], r15
0xd334  5  mov  qword ptr [r14 + rbx*8 + 8], rsi
0xd339  7  mov  qword ptr [rip + 0x14a88], r14
0xd340  3  mov  rdi, rsi
0xd343  4  cmp  dword ptr [rsp + 0x78], esi
0xd347  6  je  0xd3e3
0xd34d  4  or  rbp, 0xffffffffffffffff
0xd351  3  mov  r14, rbp
0xd354  3  inc  r14
0xd357  4  cmp  byte ptr [r15 + r14], sil
0xd35b  2  jne  0xd354
0xd35d  5  mov  edx, 1
0xd362  4  lea  rcx, [r14 + 2]
0xd366  5  call  0x8a8f
0xd36b  3  mov  rbx, rax
0xd36e  3  test  rax, rax
0xd371  2  jne  0xd37c
0xd373  2  xor  ecx, ecx
0xd375  5  call  0x8b07
0xd37a  2  jmp  0xd3cf
0xd37c  3  mov  r8, r15
0xd37f  4  lea  rdx, [r14 + 2]
0xd383  3  mov  rcx, rbx
0xd386  5  call  0x8427
0xd38b  2  test  eax, eax
0xd38d  6  jne  0xd41e
0xd393  3  mov  rax, rbx
0xd396  4  lea  rcx, [r13 + 1]
0xd39a  3  sub  rax, r15
0xd39d  3  add  rcx, rax
0xd3a0  4  neg  byte ptr [rsp + 0x70]
0xd3a4  3  sbb  rdx, rdx
0xd3a7  4  mov  byte ptr [rax + r13], sil
0xd3ab  3  and  rdx, rcx
0xd3ae  3  mov  rcx, rbx
0xd3b1  5  call  0x12493
0xd3b6  2  test  eax, eax
0xd3b8  2  jne  0xd3db
0xd3ba  5  call  0x8a6f
0xd3bf  3  mov  rcx, rbx
0xd3c2  6  mov  dword ptr [rax], 0x2a
0xd3c8  5  call  0x8b07
0xd3cd  2  mov  esi, ebp
0xd3cf  3  mov  rcx, rdi
0xd3d2  5  call  0x8b07
0xd3d7  2  mov  eax, esi
0xd3d9  2  jmp  0xd406
0xd3db  3  mov  rcx, rbx
0xd3de  5  call  0x8b07
0xd3e3  3  mov  rcx, rdi
0xd3e6  5  call  0x8b07
0xd3eb  2  xor  eax, eax
0xd3ed  2  jmp  0xd406
0xd3ef  5  call  0x8a6f
0xd3f4  3  mov  rcx, r15
0xd3f7  6  mov  dword ptr [rax], 0x16
0xd3fd  5  call  0x8b07
0xd402  4  or  rax, 0xffffffffffffffff
0xd406  8  mov  rbx, qword ptr [rsp + 0x80]
0xd40e  4  add  rsp, 0x30
0xd412  2  pop  r15
0xd414  2  pop  r14
0xd416  2  pop  r13
0xd418  2  pop  r12
0xd41a  1  pop  rdi
0xd41b  1  pop  rsi
0xd41c  1  pop  rbp
0xd41d  1  ret  
0xd41e  3  xor  r9d, r9d
0xd421  5  mov  qword ptr [rsp + 0x20], rsi
0xd426  3  xor  r8d, r8d
0xd429  2  xor  edx, edx
0xd42b  2  xor  ecx, ecx
0xd42d  5  call  0x8953
0xd432  1  int3  
0xd433  5  mov  qword ptr [rsp + 8], rbx
0xd438  5  mov  qword ptr [rsp + 0x10], rsi
0xd43d  5  mov  qword ptr [rsp + 0x18], rdi
0xd442  2  push  r14
0xd444  4  sub  rsp, 0x30
0xd448  3  mov  rdi, rcx
0xd44b  3  test  rcx, rcx
0xd44e  2  jne  0xd468
0xd450  2  xor  eax, eax
0xd452  5  mov  rbx, qword ptr [rsp + 0x40]
0xd457  5  mov  rsi, qword ptr [rsp + 0x48]
0xd45c  5  mov  rdi, qword ptr [rsp + 0x50]
0xd461  4  add  rsp, 0x30
0xd465  2  pop  r14
0xd467  1  ret  
0xd468  2  xor  ecx, ecx
0xd46a  3  mov  rax, rdi
0xd46d  3  cmp  qword ptr [rdi], rcx
0xd470  2  je  0xd47f
0xd472  3  inc  rcx
0xd475  4  lea  rax, [rax + 8]
0xd479  4  cmp  qword ptr [rax], 0
0xd47d  2  jne  0xd472
0xd47f  3  inc  rcx
0xd482  5  mov  edx, 8
0xd487  5  call  0x8a8f
0xd48c  3  mov  rbx, rax
0xd48f  3  test  rax, rax
0xd492  2  je  0xd512
0xd494  3  mov  rax, qword ptr [rdi]
0xd497  3  test  rax, rax
0xd49a  2  je  0xd4ed
0xd49c  3  mov  r14, rbx
0xd49f  3  sub  r14, rdi
0xd4a2  4  or  rsi, 0xffffffffffffffff
0xd4a6  3  inc  rsi
0xd4a9  4  cmp  byte ptr [rax + rsi], 0
0xd4ad  2  jne  0xd4a6
0xd4af  5  mov  edx, 1
0xd4b4  4  lea  rcx, [rsi + 1]
0xd4b8  5  call  0x8a8f
0xd4bd  2  xor  ecx, ecx
0xd4bf  4  mov  qword ptr [r14 + rdi], rax
0xd4c3  5  call  0x8b07
0xd4c8  4  mov  rcx, qword ptr [r14 + rdi]
0xd4cc  3  test  rcx, rcx
0xd4cf  2  je  0xd512
0xd4d1  3  mov  r8, qword ptr [rdi]
0xd4d4  4  lea  rdx, [rsi + 1]
0xd4d8  5  call  0x8427
0xd4dd  2  test  eax, eax
0xd4df  2  jne  0xd4fc
0xd4e1  4  add  rdi, 8
0xd4e5  3  mov  rax, qword ptr [rdi]
0xd4e8  3  test  rax, rax
0xd4eb  2  jne  0xd4a2
0xd4ed  2  xor  ecx, ecx
0xd4ef  5  call  0x8b07
0xd4f4  3  mov  rax, rbx
0xd4f7  5  jmp  0xd452
0xd4fc  6  and  qword ptr [rsp + 0x20], 0
0xd502  3  xor  r9d, r9d
0xd505  3  xor  r8d, r8d
0xd508  2  xor  edx, edx
0xd50a  2  xor  ecx, ecx
0xd50c  5  call  0x8953
0xd511  1  int3  
0xd512  5  call  0x8487
0xd517  1  int3  
0xd518  1  int3  
0xd519  1  int3  
0xd51a  1  int3  
0xd51b  5  jmp  0xd0db
0xd520  1  int3  
0xd521  1  int3  
0xd522  1  int3  
0xd523  2  push  rbx
0xd525  4  sub  rsp, 0x20
0xd529  2  xor  ebx, ebx
0xd52b  7  lea  rdx, [rip + 0x14f4e]
0xd532  3  xor  r8d, r8d
0xd535  4  lea  rcx, [rbx + rbx*4]
0xd539  4  lea  rcx, [rdx + rcx*8]
0xd53d  5  mov  edx, 0xfa0
0xd542  5  call  0x8ea7
0xd547  2  test  eax, eax
0xd549  2  je  0xd55c
0xd54b  6  inc  dword ptr [rip + 0x1515f]
0xd551  2  inc  ebx
0xd553  3  cmp  ebx, 0xe
0xd556  2  jb  0xd52b
0xd558  2  mov  al, 1
0xd55a  2  jmp  0xd565
0xd55c  2  xor  ecx, ecx
0xd55e  5  call  0xd587
0xd563  2  xor  al, al
0xd565  4  add  rsp, 0x20
0xd569  1  pop  rbx
0xd56a  1  ret  
0xd56b  3  movsxd  rax, ecx
0xd56e  4  lea  rcx, [rax + rax*4]
0xd572  7  lea  rax, [rip + 0x14f07]
0xd579  4  lea  rcx, [rax + rcx*8]
0xd57d  6  jmp  qword ptr [rip + 0x8b0c]
0xd584  1  int3  
0xd585  1  int3  
0xd586  1  int3  
0xd587  2  push  rbx
0xd589  4  sub  rsp, 0x20
0xd58d  6  mov  ebx, dword ptr [rip + 0x1511d]
0xd593  2  jmp  0xd5b2
0xd595  7  lea  rax, [rip + 0x14ee4]
0xd59c  2  dec  ebx
0xd59e  4  lea  rcx, [rbx + rbx*4]
0xd5a2  4  lea  rcx, [rax + rcx*8]
0xd5a6  6  call  qword ptr [rip + 0x8af4]
0xd5ac  6  dec  dword ptr [rip + 0x150fe]
0xd5b2  2  test  ebx, ebx
0xd5b4  2  jne  0xd595
0xd5b6  2  mov  al, 1
0xd5b8  4  add  rsp, 0x20
0xd5bc  1  pop  rbx
0xd5bd  1  ret  
0xd5be  1  int3  
0xd5bf  3  movsxd  rax, ecx
0xd5c2  4  lea  rcx, [rax + rax*4]
0xd5c6  7  lea  rax, [rip + 0x14eb3]
0xd5cd  4  lea  rcx, [rax + rcx*8]
0xd5d1  6  jmp  qword ptr [rip + 0x8ac0]
0xd5d8  1  int3  
0xd5d9  1  int3  
0xd5da  1  int3  
0xd5db  9  mov  rax, qword ptr gs:[0x30]
0xd5e4  4  mov  rcx, qword ptr [rax + 0x60]
0xd5e8  6  mov  eax, dword ptr [rcx + 0xbc]
0xd5ee  3  shr  eax, 8
0xd5f1  2  and  al, 1
0xd5f3  1  ret  
0xd5f4  1  int3  
0xd5f5  1  int3  
0xd5f6  1  int3  
0xd5f7  9  mov  rax, qword ptr gs:[0x30]
0xd600  4  mov  rcx, qword ptr [rax + 0x60]
0xd604  4  mov  rax, qword ptr [rcx + 0x20]
0xd608  3  mov  eax, dword ptr [rax + 8]
0xd60b  3  shr  eax, 0x1f
0xd60e  1  ret  
0xd60f  2  push  rbx
0xd611  4  sub  rsp, 0x20
0xd615  2  xor  ebx, ebx
0xd617  4  mov  dword ptr [rsp + 0x30], ebx
0xd61b  5  call  0xd5f7
0xd620  2  test  al, al
0xd622  2  jne  0xd62e
0xd624  5  lea  rcx, [rsp + 0x30]
0xd629  5  call  0x8cff
0xd62e  5  cmp  dword ptr [rsp + 0x30], 1
0xd633  3  setne  bl
0xd636  2  mov  eax, ebx
0xd638  4  add  rsp, 0x20
0xd63c  1  pop  rbx
0xd63d  1  ret  
0xd63e  1  int3  
0xd63f  5  mov  qword ptr [rsp + 8], rbx
0xd644  5  mov  qword ptr [rsp + 0x10], rbp
0xd649  5  mov  qword ptr [rsp + 0x18], rsi
0xd64e  1  push  rdi
0xd64f  4  sub  rsp, 0x20
0xd653  5  mov  edx, 0x48
0xd658  3  lea  ecx, [rdx - 8]
0xd65b  5  call  0x8a8f
0xd660  2  xor  esi, esi
0xd662  3  mov  rbx, rax
0xd665  3  test  rax, rax
0xd668  2  je  0xd6c5
0xd66a  7  lea  rbp, [rax + 0x1200]
0xd671  3  cmp  rax, rbp
0xd674  2  je  0xd6c2
0xd676  4  lea  rdi, [rax + 0x30]
0xd67a  4  lea  rcx, [rdi - 0x30]
0xd67e  3  xor  r8d, r8d
0xd681  5  mov  edx, 0xfa0
0xd686  5  call  0x8ea7
0xd68b  5  or  qword ptr [rdi - 8], 0xffffffffffffffff
0xd690  4  lea  rcx, [rdi + 0xe]
0xd694  4  and  byte ptr [rdi + 0xd], 0xf8
0xd698  2  mov  eax, esi
0xd69a  3  mov  qword ptr [rdi], rsi
0xd69d  7  mov  dword ptr [rdi + 8], 0xa0a0000
0xd6a4  4  mov  byte ptr [rdi + 0xc], 0xa
0xd6a8  3  mov  byte ptr [rcx], sil
0xd6ab  2  inc  eax
0xd6ad  3  inc  rcx
0xd6b0  3  cmp  eax, 5
0xd6b3  2  jb  0xd6a8
0xd6b5  4  add  rdi, 0x48
0xd6b9  4  lea  rax, [rdi - 0x30]
0xd6bd  3  cmp  rax, rbp
0xd6c0  2  jne  0xd67a
0xd6c2  3  mov  rsi, rbx
0xd6c5  2  xor  ecx, ecx
0xd6c7  5  call  0x8b07
0xd6cc  5  mov  rbx, qword ptr [rsp + 0x30]
0xd6d1  3  mov  rax, rsi
0xd6d4  5  mov  rsi, qword ptr [rsp + 0x40]
0xd6d9  5  mov  rbp, qword ptr [rsp + 0x38]
0xd6de  4  add  rsp, 0x20
0xd6e2  1  pop  rdi
0xd6e3  1  ret  
0xd6e4  1  int3  
0xd6e5  1  int3  
0xd6e6  1  int3  
0xd6e7  3  test  rcx, rcx
0xd6ea  2  je  0xd736
0xd6ec  5  mov  qword ptr [rsp + 8], rbx
0xd6f1  5  mov  qword ptr [rsp + 0x10], rsi
0xd6f6  1  push  rdi
0xd6f7  4  sub  rsp, 0x20
0xd6fb  7  lea  rsi, [rcx + 0x1200]
0xd702  3  mov  rbx, rcx
0xd705  3  mov  rdi, rcx
0xd708  3  cmp  rcx, rsi
0xd70b  2  je  0xd71f
0xd70d  3  mov  rcx, rdi
0xd710  6  call  qword ptr [rip + 0x898a]
0xd716  4  add  rdi, 0x48
0xd71a  3  cmp  rdi, rsi
0xd71d  2  jne  0xd70d
0xd71f  3  mov  rcx, rbx
0xd722  5  call  0x8b07
0xd727  5  mov  rbx, qword ptr [rsp + 0x30]
0xd72c  5  mov  rsi, qword ptr [rsp + 0x38]
0xd731  4  add  rsp, 0x20
0xd735  1  pop  rdi
0xd736  1  ret  
0xd737  5  mov  qword ptr [rsp + 8], rbx
0xd73c  5  mov  qword ptr [rsp + 0x10], rsi
0xd741  5  mov  qword ptr [rsp + 0x18], rdi
0xd746  2  push  r15
0xd748  4  sub  rsp, 0x30
0xd74c  2  mov  esi, ecx
0xd74e  6  cmp  ecx, 0x2000
0xd754  2  jb  0xd77f
0xd756  5  call  0x8a6f
0xd75b  5  mov  ebx, 9
0xd760  2  mov  dword ptr [rax], ebx
0xd762  5  call  0x8933
0xd767  2  mov  eax, ebx
0xd769  5  mov  rbx, qword ptr [rsp + 0x40]
0xd76e  5  mov  rsi, qword ptr [rsp + 0x48]
0xd773  5  mov  rdi, qword ptr [rsp + 0x50]
0xd778  4  add  rsp, 0x30
0xd77c  2  pop  r15
0xd77e  1  ret  
0xd77f  2  xor  edi, edi
0xd781  3  lea  ecx, [rdi + 7]
0xd784  5  call  0xd56b
0xd789  1  nop  
0xd78a  2  mov  ebx, edi
0xd78c  6  mov  eax, dword ptr [rip + 0x14c9e]
0xd792  5  mov  qword ptr [rsp + 0x20], rbx
0xd797  2  cmp  esi, eax
0xd799  2  jl  0xd7d1
0xd79b  7  lea  r15, [rip + 0x1488e]
0xd7a2  4  cmp  qword ptr [r15 + rbx*8], rdi
0xd7a6  2  je  0xd7aa
0xd7a8  2  jmp  0xd7cc
0xd7aa  5  call  0xd63f
0xd7af  4  mov  qword ptr [r15 + rbx*8], rax
0xd7b3  3  test  rax, rax
0xd7b6  2  jne  0xd7bd
0xd7b8  3  lea  edi, [rax + 0xc]
0xd7bb  2  jmp  0xd7d1
0xd7bd  6  mov  eax, dword ptr [rip + 0x14c6d]
0xd7c3  3  add  eax, 0x40
0xd7c6  6  mov  dword ptr [rip + 0x14c64], eax
0xd7cc  3  inc  rbx
0xd7cf  2  jmp  0xd792
0xd7d1  5  mov  ecx, 7
0xd7d6  5  call  0xd5bf
0xd7db  2  mov  eax, edi
0xd7dd  2  jmp  0xd769
0xd7df  3  movsxd  rdx, ecx
0xd7e2  7  lea  r8, [rip + 0x14847]
0xd7e9  3  mov  rax, rdx
0xd7ec  3  and  edx, 0x3f
0xd7ef  4  sar  rax, 6
0xd7f3  4  lea  rcx, [rdx + rdx*8]
0xd7f7  4  mov  rax, qword ptr [r8 + rax*8]
0xd7fb  4  lea  rcx, [rax + rcx*8]
0xd7ff  6  jmp  qword ptr [rip + 0x888a]
0xd806  1  int3  
0xd807  3  movsxd  rdx, ecx
0xd80a  7  lea  r8, [rip + 0x1481f]
0xd811  3  mov  rax, rdx
0xd814  3  and  edx, 0x3f
0xd817  4  sar  rax, 6
0xd81b  4  lea  rcx, [rdx + rdx*8]
0xd81f  4  mov  rax, qword ptr [r8 + rax*8]
0xd823  4  lea  rcx, [rax + rcx*8]
0xd827  6  jmp  qword ptr [rip + 0x886a]
0xd82e  1  int3  
0xd82f  5  mov  qword ptr [rsp + 8], rbx
0xd834  5  mov  qword ptr [rsp + 0x10], rsi
0xd839  5  mov  qword ptr [rsp + 0x18], rdi
0xd83e  2  push  r14
0xd840  4  sub  rsp, 0x20
0xd844  3  movsxd  rbx, ecx
0xd847  2  test  ecx, ecx
0xd849  2  js  0xd8bd
0xd84b  6  cmp  ebx, dword ptr [rip + 0x14bdf]
0xd851  2  jae  0xd8bd
0xd853  3  mov  rax, rbx
0xd856  7  lea  r14, [rip + 0x147d3]
0xd85d  3  and  eax, 0x3f
0xd860  3  mov  rsi, rbx
0xd863  4  shr  rsi, 6
0xd867  4  lea  rdi, [rax + rax*8]
0xd86b  4  mov  rax, qword ptr [r14 + rsi*8]
0xd86f  5  test  byte ptr [rax + rdi*8 + 0x38], 1
0xd874  2  je  0xd8bd
0xd876  6  cmp  qword ptr [rax + rdi*8 + 0x28], -1
0xd87c  2  je  0xd8bd
0xd87e  5  call  0x70eb
0xd883  3  cmp  eax, 1
0xd886  2  jne  0xd8af
0xd888  2  test  ebx, ebx
0xd88a  2  je  0xd8a2
0xd88c  2  sub  ebx, eax
0xd88e  2  je  0xd89b
0xd890  2  cmp  ebx, eax
0xd892  2  jne  0xd8af
0xd894  5  mov  ecx, 0xfffffff4
0xd899  2  jmp  0xd8a7
0xd89b  5  mov  ecx, 0xfffffff5
0xd8a0  2  jmp  0xd8a7
0xd8a2  5  mov  ecx, 0xfffffff6
0xd8a7  2  xor  edx, edx
0xd8a9  6  call  qword ptr [rip + 0x8941]
0xd8af  4  mov  rax, qword ptr [r14 + rsi*8]
0xd8b3  6  or  qword ptr [rax + rdi*8 + 0x28], 0xffffffffffffffff
0xd8b9  2  xor  eax, eax
0xd8bb  2  jmp  0xd8d3
0xd8bd  5  call  0x8a6f
0xd8c2  6  mov  dword ptr [rax], 9
0xd8c8  5  call  0x8a4f
0xd8cd  3  and  dword ptr [rax], 0
0xd8d0  3  or  eax, 0xffffffff
0xd8d3  5  mov  rbx, qword ptr [rsp + 0x30]
0xd8d8  5  mov  rsi, qword ptr [rsp + 0x38]
0xd8dd  5  mov  rdi, qword ptr [rsp + 0x40]
0xd8e2  4  add  rsp, 0x20
0xd8e6  2  pop  r14
0xd8e8  1  ret  
0xd8e9  1  int3  
0xd8ea  1  int3  
0xd8eb  4  sub  rsp, 0x28
0xd8ef  3  cmp  ecx, -2
0xd8f2  2  jne  0xd909
0xd8f4  5  call  0x8a4f
0xd8f9  3  and  dword ptr [rax], 0
0xd8fc  5  call  0x8a6f
0xd901  6  mov  dword ptr [rax], 9
0xd907  2  jmp  0xd957
0xd909  2  test  ecx, ecx
0xd90b  2  js  0xd93f
0xd90d  6  cmp  ecx, dword ptr [rip + 0x14b1d]
0xd913  2  jae  0xd93f
0xd915  3  movsxd  rcx, ecx
0xd918  7  lea  r8, [rip + 0x14711]
0xd91f  3  mov  rax, rcx
0xd922  3  and  ecx, 0x3f
0xd925  4  shr  rax, 6
0xd929  4  lea  rdx, [rcx + rcx*8]
0xd92d  4  mov  rax, qword ptr [r8 + rax*8]
0xd931  5  test  byte ptr [rax + rdx*8 + 0x38], 1
0xd936  2  je  0xd93f
0xd938  5  mov  rax, qword ptr [rax + rdx*8 + 0x28]
0xd93d  2  jmp  0xd95b
0xd93f  5  call  0x8a4f
0xd944  3  and  dword ptr [rax], 0
0xd947  5  call  0x8a6f
0xd94c  6  mov  dword ptr [rax], 9
0xd952  5  call  0x8933
0xd957  4  or  rax, 0xffffffffffffffff
0xd95b  4  add  rsp, 0x28
0xd95f  1  ret  
0xd960  1  int3  
0xd961  1  int3  
0xd962  1  int3  
0xd963  6  mov  eax, dword ptr [rip + 0x14d4b]
0xd969  5  mov  ecx, 0x4000
0xd96e  2  test  eax, eax
0xd970  3  cmove  eax, ecx
0xd973  6  mov  dword ptr [rip + 0x14d3b], eax
0xd979  2  xor  eax, eax
0xd97b  1  ret  
0xd97c  1  int3  
0xd97d  1  int3  
0xd97e  1  int3  
0xd97f  3  test  rcx, rcx
0xd982  6  je  0xda88
0xd988  1  push  rbx
0xd989  4  sub  rsp, 0x20
0xd98d  3  mov  rbx, rcx
0xd990  4  mov  rcx, qword ptr [rcx + 0x18]
0xd994  7  cmp  rcx, qword ptr [rip + 0x13eed]
0xd99b  2  je  0xd9a2
0xd99d  5  call  0x8b07
0xd9a2  4  mov  rcx, qword ptr [rbx + 0x20]
0xd9a6  7  cmp  rcx, qword ptr [rip + 0x13ee3]
0xd9ad  2  je  0xd9b4
0xd9af  5  call  0x8b07
0xd9b4  4  mov  rcx, qword ptr [rbx + 0x28]
0xd9b8  7  cmp  rcx, qword ptr [rip + 0x13ed9]
0xd9bf  2  je  0xd9c6
0xd9c1  5  call  0x8b07
0xd9c6  4  mov  rcx, qword ptr [rbx + 0x30]
0xd9ca  7  cmp  rcx, qword ptr [rip + 0x13ecf]
0xd9d1  2  je  0xd9d8
0xd9d3  5  call  0x8b07
0xd9d8  4  mov  rcx, qword ptr [rbx + 0x38]
0xd9dc  7  cmp  rcx, qword ptr [rip + 0x13ec5]
0xd9e3  2  je  0xd9ea
0xd9e5  5  call  0x8b07
0xd9ea  4  mov  rcx, qword ptr [rbx + 0x40]
0xd9ee  7  cmp  rcx, qword ptr [rip + 0x13ebb]
0xd9f5  2  je  0xd9fc
0xd9f7  5  call  0x8b07
0xd9fc  4  mov  rcx, qword ptr [rbx + 0x48]
0xda00  7  cmp  rcx, qword ptr [rip + 0x13eb1]
0xda07  2  je  0xda0e
0xda09  5  call  0x8b07
0xda0e  4  mov  rcx, qword ptr [rbx + 0x68]
0xda12  7  cmp  rcx, qword ptr [rip + 0x13ebf]
0xda19  2  je  0xda20
0xda1b  5  call  0x8b07
0xda20  4  mov  rcx, qword ptr [rbx + 0x70]
0xda24  7  cmp  rcx, qword ptr [rip + 0x13eb5]
0xda2b  2  je  0xda32
0xda2d  5  call  0x8b07
0xda32  4  mov  rcx, qword ptr [rbx + 0x78]
0xda36  7  cmp  rcx, qword ptr [rip + 0x13eab]
0xda3d  2  je  0xda44
0xda3f  5  call  0x8b07
0xda44  7  mov  rcx, qword ptr [rbx + 0x80]
0xda4b  7  cmp  rcx, qword ptr [rip + 0x13e9e]
0xda52  2  je  0xda59
0xda54  5  call  0x8b07
0xda59  7  mov  rcx, qword ptr [rbx + 0x88]
0xda60  7  cmp  rcx, qword ptr [rip + 0x13e91]
0xda67  2  je  0xda6e
0xda69  5  call  0x8b07
0xda6e  7  mov  rcx, qword ptr [rbx + 0x90]
0xda75  7  cmp  rcx, qword ptr [rip + 0x13e84]
0xda7c  2  je  0xda83
0xda7e  5  call  0x8b07
0xda83  4  add  rsp, 0x20
0xda87  1  pop  rbx
0xda88  1  ret  
0xda89  1  int3  
0xda8a  1  int3  
0xda8b  3  test  rcx, rcx
0xda8e  2  je  0xdaf6
0xda90  1  push  rbx
0xda91  4  sub  rsp, 0x20
0xda95  3  mov  rbx, rcx
0xda98  3  mov  rcx, qword ptr [rcx]
0xda9b  7  cmp  rcx, qword ptr [rip + 0x13dce]
0xdaa2  2  je  0xdaa9
0xdaa4  5  call  0x8b07
0xdaa9  4  mov  rcx, qword ptr [rbx + 8]
0xdaad  7  cmp  rcx, qword ptr [rip + 0x13dc4]
0xdab4  2  je  0xdabb
0xdab6  5  call  0x8b07
0xdabb  4  mov  rcx, qword ptr [rbx + 0x10]
0xdabf  7  cmp  rcx, qword ptr [rip + 0x13dba]
0xdac6  2  je  0xdacd
0xdac8  5  call  0x8b07
0xdacd  4  mov  rcx, qword ptr [rbx + 0x58]
0xdad1  7  cmp  rcx, qword ptr [rip + 0x13df0]
0xdad8  2  je  0xdadf
0xdada  5  call  0x8b07
0xdadf  4  mov  rcx, qword ptr [rbx + 0x60]
0xdae3  7  cmp  rcx, qword ptr [rip + 0x13de6]
0xdaea  2  je  0xdaf1
0xdaec  5  call  0x8b07
0xdaf1  4  add  rsp, 0x20
0xdaf5  1  pop  rbx
0xdaf6  1  ret  
0xdaf7  5  mov  qword ptr [rsp + 8], rbx
0xdafc  1  push  rdi
0xdafd  4  sub  rsp, 0x20
0xdb01  4  lea  rdi, [rcx + rdx*8]
0xdb05  3  mov  rbx, rcx
0xdb08  3  cmp  rcx, rdi
0xdb0b  2  je  0xdb1e
0xdb0d  3  mov  rcx, qword ptr [rbx]
0xdb10  5  call  0x8b07
0xdb15  4  add  rbx, 8
0xdb19  3  cmp  rbx, rdi
0xdb1c  2  jne  0xdb0d
0xdb1e  5  mov  rbx, qword ptr [rsp + 0x30]
0xdb23  4  add  rsp, 0x20
0xdb27  1  pop  rdi
0xdb28  1  ret  
0xdb29  1  int3  
0xdb2a  1  int3  
0xdb2b  3  test  rcx, rcx
0xdb2e  6  je  0xdc32
0xdb34  5  mov  qword ptr [rsp + 8], rbx
0xdb39  5  mov  qword ptr [rsp + 0x10], rbp
0xdb3e  1  push  rsi
0xdb3f  4  sub  rsp, 0x20
0xdb43  5  mov  ebp, 7
0xdb48  3  mov  rbx, rcx
0xdb4b  2  mov  edx, ebp
0xdb4d  5  call  0xdaf7
0xdb52  4  lea  rcx, [rbx + 0x38]
0xdb56  2  mov  edx, ebp
0xdb58  5  call  0xdaf7
0xdb5d  3  lea  esi, [rbp + 5]
0xdb60  2  mov  edx, esi
0xdb62  4  lea  rcx, [rbx + 0x70]
0xdb66  5  call  0xdaf7
0xdb6b  7  lea  rcx, [rbx + 0xd0]
0xdb72  2  mov  edx, esi
0xdb74  5  call  0xdaf7
0xdb79  7  lea  rcx, [rbx + 0x130]
0xdb80  3  lea  edx, [rbp - 5]
0xdb83  5  call  0xdaf7
0xdb88  7  mov  rcx, qword ptr [rbx + 0x140]
0xdb8f  5  call  0x8b07
0xdb94  7  mov  rcx, qword ptr [rbx + 0x148]
0xdb9b  5  call  0x8b07
0xdba0  7  mov  rcx, qword ptr [rbx + 0x150]
0xdba7  5  call  0x8b07
0xdbac  7  lea  rcx, [rbx + 0x160]
0xdbb3  2  mov  edx, ebp
0xdbb5  5  call  0xdaf7
0xdbba  7  lea  rcx, [rbx + 0x198]
0xdbc1  2  mov  edx, ebp
0xdbc3  5  call  0xdaf7
0xdbc8  7  lea  rcx, [rbx + 0x1d0]
0xdbcf  2  mov  edx, esi
0xdbd1  5  call  0xdaf7
0xdbd6  7  lea  rcx, [rbx + 0x230]
0xdbdd  2  mov  edx, esi
0xdbdf  5  call  0xdaf7
0xdbe4  7  lea  rcx, [rbx + 0x290]
0xdbeb  3  lea  edx, [rbp - 5]
0xdbee  5  call  0xdaf7
0xdbf3  7  mov  rcx, qword ptr [rbx + 0x2a0]
0xdbfa  5  call  0x8b07
0xdbff  7  mov  rcx, qword ptr [rbx + 0x2a8]
0xdc06  5  call  0x8b07
0xdc0b  7  mov  rcx, qword ptr [rbx + 0x2b0]
0xdc12  5  call  0x8b07
0xdc17  7  mov  rcx, qword ptr [rbx + 0x2b8]
0xdc1e  5  call  0x8b07
0xdc23  5  mov  rbx, qword ptr [rsp + 0x30]
0xdc28  5  mov  rbp, qword ptr [rsp + 0x38]
0xdc2d  4  add  rsp, 0x20
0xdc31  1  pop  rsi
0xdc32  1  ret  
0xdc33  2  push  rbp
0xdc35  2  push  r12
0xdc37  2  push  r13
0xdc39  2  push  r14
0xdc3b  2  push  r15
0xdc3d  4  sub  rsp, 0x60
0xdc41  5  lea  rbp, [rsp + 0x30]
0xdc46  4  mov  qword ptr [rbp + 0x60], rbx
0xdc4a  4  mov  qword ptr [rbp + 0x68], rsi
0xdc4e  4  mov  qword ptr [rbp + 0x70], rdi
0xdc52  7  mov  rax, qword ptr [rip + 0x133df]
0xdc59  3  xor  rax, rbp
0xdc5c  4  mov  qword ptr [rbp + 0x28], rax
0xdc60  3  mov  r13d, edx
0xdc63  3  mov  r15d, r9d
0xdc66  3  mov  rdx, rcx
0xdc69  3  mov  r12, r8
0xdc6c  4  lea  rcx, [rbp + 8]
0xdc70  5  call  0xbfbb
0xdc75  6  mov  edi, dword ptr [rbp + 0x88]
0xdc7b  2  test  edi, edi
0xdc7d  2  jne  0xdc86
0xdc7f  4  mov  rax, qword ptr [rbp + 0x10]
0xdc83  3  mov  edi, dword ptr [rax + 0xc]
0xdc86  6  neg  dword ptr [rbp + 0x90]
0xdc8c  3  mov  r9d, r15d
0xdc8f  3  mov  r8, r12
0xdc92  2  mov  ecx, edi
0xdc94  2  sbb  edx, edx
0xdc96  5  and  dword ptr [rsp + 0x28], 0
0xdc9b  6  and  qword ptr [rsp + 0x20], 0
0xdca1  3  and  edx, 8
0xdca4  2  inc  edx
0xdca6  5  call  0xce5b
0xdcab  3  movsxd  r14, eax
0xdcae  2  test  eax, eax
0xdcb0  2  jne  0xdcb9
0xdcb2  2  xor  edi, edi
0xdcb4  5  jmp  0xdd89
0xdcb9  3  mov  rsi, r14
0xdcbc  3  add  rsi, rsi
0xdcbf  4  lea  rax, [rsi + 0x10]
0xdcc3  3  cmp  rsi, rax
0xdcc6  3  sbb  rcx, rcx
0xdcc9  3  and  rcx, rax
0xdccc  6  je  0xdd6f
0xdcd2  7  cmp  rcx, 0x400
0xdcd9  2  ja  0xdd0c
0xdcdb  4  lea  rax, [rcx + 0xf]
0xdcdf  3  cmp  rax, rcx
0xdce2  2  ja  0xdcee
0xdce4  10  movabs  rax, 0xffffffffffffff0
0xdcee  4  and  rax, 0xfffffffffffffff0
0xdcf2  5  call  0x14f53
0xdcf7  3  sub  rsp, rax
0xdcfa  5  lea  rbx, [rsp + 0x30]
0xdcff  3  test  rbx, rbx
0xdd02  2  je  0xdd71
0xdd04  6  mov  dword ptr [rbx], 0xcccc
0xdd0a  2  jmp  0xdd1f
0xdd0c  5  call  0x977f
0xdd11  3  mov  rbx, rax
0xdd14  3  test  rax, rax
0xdd17  2  je  0xdd23
0xdd19  6  mov  dword ptr [rax], 0xdddd
0xdd1f  4  add  rbx, 0x10
0xdd23  3  test  rbx, rbx
0xdd26  2  je  0xdd71
0xdd28  3  mov  r8, rsi
0xdd2b  2  xor  edx, edx
0xdd2d  3  mov  rcx, rbx
0xdd30  5  call  0x1f03
0xdd35  3  mov  r9d, r15d
0xdd38  5  mov  dword ptr [rsp + 0x28], r14d
0xdd3d  3  mov  r8, r12
0xdd40  5  mov  qword ptr [rsp + 0x20], rbx
0xdd45  5  mov  edx, 1
0xdd4a  2  mov  ecx, edi
0xdd4c  5  call  0xce5b
0xdd51  2  test  eax, eax
0xdd53  2  je  0xdd71
0xdd55  7  mov  r9, qword ptr [rbp + 0x80]
0xdd5c  3  mov  r8d, eax
0xdd5f  3  mov  rdx, rbx
0xdd62  3  mov  ecx, r13d
0xdd65  6  call  qword ptr [rip + 0x848d]
0xdd6b  2  mov  edi, eax
0xdd6d  2  jmp  0xdd78
0xdd6f  2  xor  ebx, ebx
0xdd71  2  xor  edi, edi
0xdd73  3  test  rbx, rbx
0xdd76  2  je  0xdd89
0xdd78  4  lea  rcx, [rbx - 0x10]
0xdd7c  6  cmp  dword ptr [rcx], 0xdddd
0xdd82  2  jne  0xdd89
0xdd84  5  call  0x8b07
0xdd89  4  cmp  byte ptr [rbp + 0x20], 0
0xdd8d  2  je  0xdd9a
0xdd8f  4  mov  rax, qword ptr [rbp + 8]
0xdd93  7  and  dword ptr [rax + 0x3a8], 0xfffffffd
0xdd9a  2  mov  eax, edi
0xdd9c  4  mov  rcx, qword ptr [rbp + 0x28]
0xdda0  3  xor  rcx, rbp
0xdda3  5  call  0x14c73
0xdda8  4  mov  rbx, qword ptr [rbp + 0x60]
0xddac  4  mov  rsi, qword ptr [rbp + 0x68]
0xddb0  4  mov  rdi, qword ptr [rbp + 0x70]
0xddb4  4  lea  rsp, [rbp + 0x30]
0xddb8  2  pop  r15
0xddba  2  pop  r14
0xddbc  2  pop  r13
0xddbe  2  pop  r12
0xddc0  1  pop  rbp
0xddc1  1  ret  
0xddc2  1  int3  
0xddc3  4  lock inc  dword ptr [rcx + 0x10]
0xddc7  7  mov  rax, qword ptr [rcx + 0xe0]
0xddce  3  test  rax, rax
0xddd1  2  je  0xddd6
0xddd3  3  lock inc  dword ptr [rax]
0xddd6  7  mov  rax, qword ptr [rcx + 0xf0]
0xdddd  3  test  rax, rax
0xdde0  2  je  0xdde5
0xdde2  3  lock inc  dword ptr [rax]
0xdde5  7  mov  rax, qword ptr [rcx + 0xe8]
0xddec  3  test  rax, rax
0xddef  2  je  0xddf4
0xddf1  3  lock inc  dword ptr [rax]
0xddf4  7  mov  rax, qword ptr [rcx + 0x100]
0xddfb  3  test  rax, rax
0xddfe  2  je  0xde03
0xde00  3  lock inc  dword ptr [rax]
0xde03  4  lea  rax, [rcx + 0x38]
0xde07  6  mov  r8d, 6
0xde0d  7  lea  rdx, [rip + 0x13514]
0xde14  4  cmp  qword ptr [rax - 0x10], rdx
0xde18  2  je  0xde25
0xde1a  3  mov  rdx, qword ptr [rax]
0xde1d  3  test  rdx, rdx
0xde20  2  je  0xde25
0xde22  3  lock inc  dword ptr [rdx]
0xde25  5  cmp  qword ptr [rax - 0x18], 0
0xde2a  2  je  0xde38
0xde2c  4  mov  rdx, qword ptr [rax - 8]
0xde30  3  test  rdx, rdx
0xde33  2  je  0xde38
0xde35  3  lock inc  dword ptr [rdx]
0xde38  4  add  rax, 0x20
0xde3c  4  sub  r8, 1
0xde40  2  jne  0xde0d
0xde42  7  mov  rcx, qword ptr [rcx + 0x120]
0xde49  5  jmp  0xdfc7
0xde4e  1  int3  
0xde4f  5  mov  qword ptr [rsp + 8], rbx
0xde54  5  mov  qword ptr [rsp + 0x10], rbp
0xde59  5  mov  qword ptr [rsp + 0x18], rsi
0xde5e  1  push  rdi
0xde5f  4  sub  rsp, 0x20
0xde63  7  mov  rax, qword ptr [rcx + 0xf8]
0xde6a  3  mov  rbx, rcx
0xde6d  3  test  rax, rax
0xde70  2  je  0xdeeb
0xde72  7  lea  rcx, [rip + 0x139f7]
0xde79  3  cmp  rax, rcx
0xde7c  2  je  0xdeeb
0xde7e  7  mov  rax, qword ptr [rbx + 0xe0]
0xde85  3  test  rax, rax
0xde88  2  je  0xdeeb
0xde8a  3  cmp  dword ptr [rax], 0
0xde8d  2  jne  0xdeeb
0xde8f  7  mov  rcx, qword ptr [rbx + 0xf0]
0xde96  3  test  rcx, rcx
0xde99  2  je  0xdeb1
0xde9b  3  cmp  dword ptr [rcx], 0
0xde9e  2  jne  0xdeb1
0xdea0  5  call  0x8b07
0xdea5  7  mov  rcx, qword ptr [rbx + 0xf8]
0xdeac  5  call  0xd97f
0xdeb1  7  mov  rcx, qword ptr [rbx + 0xe8]
0xdeb8  3  test  rcx, rcx
0xdebb  2  je  0xded3
0xdebd  3  cmp  dword ptr [rcx], 0
0xdec0  2  jne  0xded3
0xdec2  5  call  0x8b07
0xdec7  7  mov  rcx, qword ptr [rbx + 0xf8]
0xdece  5  call  0xda8b
0xded3  7  mov  rcx, qword ptr [rbx + 0xe0]
0xdeda  5  call  0x8b07
0xdedf  7  mov  rcx, qword ptr [rbx + 0xf8]
0xdee6  5  call  0x8b07
0xdeeb  7  mov  rax, qword ptr [rbx + 0x100]
0xdef2  3  test  rax, rax
0xdef5  2  je  0xdf3e
0xdef7  3  cmp  dword ptr [rax], 0
0xdefa  2  jne  0xdf3e
0xdefc  7  mov  rcx, qword ptr [rbx + 0x108]
0xdf03  7  sub  rcx, 0xfe
0xdf0a  5  call  0x8b07
0xdf0f  7  mov  rcx, qword ptr [rbx + 0x110]
0xdf16  5  mov  edi, 0x80
0xdf1b  3  sub  rcx, rdi
0xdf1e  5  call  0x8b07
0xdf23  7  mov  rcx, qword ptr [rbx + 0x118]
0xdf2a  3  sub  rcx, rdi
0xdf2d  5  call  0x8b07
0xdf32  7  mov  rcx, qword ptr [rbx + 0x100]
0xdf39  5  call  0x8b07
0xdf3e  7  mov  rcx, qword ptr [rbx + 0x120]
0xdf45  5  call  0xdfef
0xdf4a  7  lea  rsi, [rbx + 0x128]
0xdf51  5  mov  ebp, 6
0xdf56  4  lea  rdi, [rbx + 0x38]
0xdf5a  7  lea  rax, [rip + 0x133c7]
0xdf61  4  cmp  qword ptr [rdi - 0x10], rax
0xdf65  2  je  0xdf81
0xdf67  3  mov  rcx, qword ptr [rdi]
0xdf6a  3  test  rcx, rcx
0xdf6d  2  je  0xdf81
0xdf6f  3  cmp  dword ptr [rcx], 0
0xdf72  2  jne  0xdf81
0xdf74  5  call  0x8b07
0xdf79  3  mov  rcx, qword ptr [rsi]
0xdf7c  5  call  0x8b07
0xdf81  5  cmp  qword ptr [rdi - 0x18], 0
0xdf86  2  je  0xdf9b
0xdf88  4  mov  rcx, qword ptr [rdi - 8]
0xdf8c  3  test  rcx, rcx
0xdf8f  2  je  0xdf9b
0xdf91  3  cmp  dword ptr [rcx], 0
0xdf94  2  jne  0xdf9b
0xdf96  5  call  0x8b07
0xdf9b  4  add  rsi, 8
0xdf9f  4  add  rdi, 0x20
0xdfa3  4  sub  rbp, 1
0xdfa7  2  jne  0xdf5a
0xdfa9  3  mov  rcx, rbx
0xdfac  5  mov  rbx, qword ptr [rsp + 0x30]
0xdfb1  5  mov  rbp, qword ptr [rsp + 0x38]
0xdfb6  5  mov  rsi, qword ptr [rsp + 0x40]
0xdfbb  4  add  rsp, 0x20
0xdfbf  1  pop  rdi
0xdfc0  5  jmp  0x8b07
0xdfc5  1  int3  
0xdfc6  1  int3  
0xdfc7  3  test  rcx, rcx
0xdfca  2  je  0xdfe8
0xdfcc  7  lea  rax, [rip + 0x9f7d]
0xdfd3  3  cmp  rcx, rax
0xdfd6  2  je  0xdfe8
0xdfd8  5  mov  eax, 1
0xdfdd  8  lock xadd  dword ptr [rcx + 0x15c], eax
0xdfe5  2  inc  eax
0xdfe7  1  ret  
0xdfe8  5  mov  eax, 0x7fffffff
0xdfed  1  ret  
0xdfee  1  int3  
0xdfef  3  test  rcx, rcx
0xdff2  2  je  0xe025
0xdff4  1  push  rbx
0xdff5  4  sub  rsp, 0x20
0xdff9  7  lea  rax, [rip + 0x9f50]
0xe000  3  mov  rbx, rcx
0xe003  3  cmp  rcx, rax
0xe006  2  je  0xe020
0xe008  6  mov  eax, dword ptr [rcx + 0x15c]
0xe00e  1  nop  
0xe00f  2  test  eax, eax
0xe011  2  jne  0xe020
0xe013  5  call  0xdb2b
0xe018  3  mov  rcx, rbx
0xe01b  5  call  0x8b07
0xe020  4  add  rsp, 0x20
0xe024  1  pop  rbx
0xe025  1  ret  
0xe026  1  int3  
0xe027  3  test  rcx, rcx
0xe02a  2  je  0xe046
0xe02c  7  lea  rax, [rip + 0x9f1d]
0xe033  3  cmp  rcx, rax
0xe036  2  je  0xe046
0xe038  3  or  eax, 0xffffffff
0xe03b  8  lock xadd  dword ptr [rcx + 0x15c], eax
0xe043  2  dec  eax
0xe045  1  ret  
0xe046  5  mov  eax, 0x7fffffff
0xe04b  1  ret  
0xe04c  1  int3  
0xe04d  1  int3  
0xe04e  1  int3  
0xe04f  4  sub  rsp, 0x28
0xe053  3  test  rcx, rcx
0xe056  6  je  0xe0f2
0xe05c  4  or  r9d, 0xffffffff
0xe060  5  lock add  dword ptr [rcx + 0x10], r9d
0xe065  7  mov  rax, qword ptr [rcx + 0xe0]
0xe06c  3  test  rax, rax
0xe06f  2  je  0xe075
0xe071  4  lock add  dword ptr [rax], r9d
0xe075  7  mov  rax, qword ptr [rcx + 0xf0]
0xe07c  3  test  rax, rax
0xe07f  2  je  0xe085
0xe081  4  lock add  dword ptr [rax], r9d
0xe085  7  mov  rax, qword ptr [rcx + 0xe8]
0xe08c  3  test  rax, rax
0xe08f  2  je  0xe095
0xe091  4  lock add  dword ptr [rax], r9d
0xe095  7  mov  rax, qword ptr [rcx + 0x100]
0xe09c  3  test  rax, rax
0xe09f  2  je  0xe0a5
0xe0a1  4  lock add  dword ptr [rax], r9d
0xe0a5  4  lea  rax, [rcx + 0x38]
0xe0a9  6  mov  r8d, 6
0xe0af  7  lea  rdx, [rip + 0x13272]
0xe0b6  4  cmp  qword ptr [rax - 0x10], rdx
0xe0ba  2  je  0xe0c8
0xe0bc  3  mov  rdx, qword ptr [rax]
0xe0bf  3  test  rdx, rdx
0xe0c2  2  je  0xe0c8
0xe0c4  4  lock add  dword ptr [rdx], r9d
0xe0c8  5  cmp  qword ptr [rax - 0x18], 0
0xe0cd  2  je  0xe0dc
0xe0cf  4  mov  rdx, qword ptr [rax - 8]
0xe0d3  3  test  rdx, rdx
0xe0d6  2  je  0xe0dc
0xe0d8  4  lock add  dword ptr [rdx], r9d
0xe0dc  4  add  rax, 0x20
0xe0e0  4  sub  r8, 1
0xe0e4  2  jne  0xe0af
0xe0e6  7  mov  rcx, qword ptr [rcx + 0x120]
0xe0ed  5  call  0xe027
0xe0f2  4  add  rsp, 0x28
0xe0f6  1  ret  
0xe0f7  5  mov  qword ptr [rsp + 8], rbx
0xe0fc  1  push  rdi
0xe0fd  4  sub  rsp, 0x20
0xe101  5  call  0xb227
0xe106  7  lea  rdi, [rax + 0x90]
0xe10d  6  mov  ecx, dword ptr [rax + 0x3a8]
0xe113  6  mov  eax, dword ptr [rip + 0x137f7]
0xe119  2  test  eax, ecx
0xe11b  2  je  0xe125
0xe11d  3  mov  rbx, qword ptr [rdi]
0xe120  3  test  rbx, rbx
0xe123  2  jne  0xe151
0xe125  5  mov  ecx, 4
0xe12a  5  call  0xd56b
0xe12f  1  nop  
0xe130  7  mov  rdx, qword ptr [rip + 0x14321]
0xe137  3  mov  rcx, rdi
0xe13a  5  call  0xe167
0xe13f  3  mov  rbx, rax
0xe142  5  mov  ecx, 4
0xe147  5  call  0xd5bf
0xe14c  3  test  rbx, rbx
0xe14f  2  je  0xe15f
0xe151  3  mov  rax, rbx
0xe154  5  mov  rbx, qword ptr [rsp + 0x30]
0xe159  4  add  rsp, 0x20
0xe15d  1  pop  rdi
0xe15e  1  ret  
0xe15f  5  call  0x8487
0xe164  1  nop  
0xe165  1  int3  
0xe166  1  int3  
0xe167  5  mov  qword ptr [rsp + 8], rbx
0xe16c  1  push  rdi
0xe16d  4  sub  rsp, 0x20
0xe171  3  mov  rdi, rdx
0xe174  3  test  rdx, rdx
0xe177  2  je  0xe1bf
0xe179  3  test  rcx, rcx
0xe17c  2  je  0xe1bf
0xe17e  3  mov  rbx, qword ptr [rcx]
0xe181  3  cmp  rbx, rdx
0xe184  2  jne  0xe18b
0xe186  3  mov  rax, rdi
0xe189  2  jmp  0xe1c1
0xe18b  3  mov  qword ptr [rcx], rdi
0xe18e  3  mov  rcx, rdi
0xe191  5  call  0xddc3
0xe196  3  test  rbx, rbx
0xe199  2  je  0xe186
0xe19b  3  mov  rcx, rbx
0xe19e  5  call  0xe04f
0xe1a3  4  cmp  dword ptr [rbx + 0x10], 0
0xe1a7  2  jne  0xe186
0xe1a9  7  lea  rax, [rip + 0x13010]
0xe1b0  3  cmp  rbx, rax
0xe1b3  2  je  0xe186
0xe1b5  3  mov  rcx, rbx
0xe1b8  5  call  0xde4f
0xe1bd  2  jmp  0xe186
0xe1bf  2  xor  eax, eax
0xe1c1  5  mov  rbx, qword ptr [rsp + 0x30]
0xe1c6  4  add  rsp, 0x20
0xe1ca  1  pop  rdi
0xe1cb  1  ret  
0xe1cc  1  int3  
0xe1cd  1  int3  
0xe1ce  1  int3  
0xe1cf  5  mov  qword ptr [rsp + 8], rbx
0xe1d4  5  mov  qword ptr [rsp + 0x10], rbp
0xe1d9  5  mov  qword ptr [rsp + 0x18], rsi
0xe1de  1  push  rdi
0xe1df  4  sub  rsp, 0x20
0xe1e3  3  mov  rbp, r8
0xe1e6  3  mov  rbx, rdx
0xe1e9  3  mov  rsi, rcx
0xe1ec  3  test  rdx, rdx
0xe1ef  2  je  0xe20e
0xe1f1  2  xor  edx, edx
0xe1f3  4  lea  rax, [rdx - 0x20]
0xe1f7  3  div  rbx
0xe1fa  3  cmp  rax, r8
0xe1fd  2  jae  0xe20e
0xe1ff  5  call  0x8a6f
0xe204  6  mov  dword ptr [rax], 0xc
0xe20a  2  xor  eax, eax
0xe20c  2  jmp  0xe24f
0xe20e  3  test  rsi, rsi
0xe211  2  je  0xe21d
0xe213  5  call  0x1267f
0xe218  3  mov  rdi, rax
0xe21b  2  jmp  0xe21f
0xe21d  2  xor  edi, edi
0xe21f  4  imul  rbx, rbp
0xe223  3  mov  rcx, rsi
0xe226  3  mov  rdx, rbx
0xe229  5  call  0x126bb
0xe22e  3  mov  rsi, rax
0xe231  3  test  rax, rax
0xe234  2  je  0xe24c
0xe236  3  cmp  rdi, rbx
0xe239  2  jae  0xe24c
0xe23b  3  sub  rbx, rdi
0xe23e  4  lea  rcx, [rax + rdi]
0xe242  3  mov  r8, rbx
0xe245  2  xor  edx, edx
0xe247  5  call  0x1f03
0xe24c  3  mov  rax, rsi
0xe24f  5  mov  rbx, qword ptr [rsp + 0x30]
0xe254  5  mov  rbp, qword ptr [rsp + 0x38]
0xe259  5  mov  rsi, qword ptr [rsp + 0x40]
0xe25e  4  add  rsp, 0x20
0xe262  1  pop  rdi
0xe263  1  ret  
0xe264  1  int3  
0xe265  1  int3  
0xe266  1  int3  
0xe267  4  sub  rsp, 0x28
0xe26b  6  call  qword ptr [rip + 0x7f8f]
0xe271  3  test  rax, rax
0xe274  7  mov  qword ptr [rip + 0x14445], rax
0xe27b  3  setne  al
0xe27e  4  add  rsp, 0x28
0xe282  1  ret  
0xe283  8  and  qword ptr [rip + 0x14435], 0
0xe28b  2  mov  al, 1
0xe28d  1  ret  
0xe28e  1  int3  
0xe28f  5  mov  qword ptr [rsp + 8], rbx
0xe294  5  mov  qword ptr [rsp + 0x10], rsi
0xe299  1  push  rdi
0xe29a  4  sub  rsp, 0x20
0xe29e  3  mov  rsi, rdx
0xe2a1  3  mov  rdi, rcx
0xe2a4  3  cmp  rcx, rdx
0xe2a7  2  je  0xe311
0xe2a9  3  mov  rbx, rcx
0xe2ac  3  mov  rax, qword ptr [rbx]
0xe2af  3  test  rax, rax
0xe2b2  2  je  0xe2c8
0xe2b4  10  movabs  r10, 0xdf949ec45c5ca270
0xe2be  6  call  qword ptr [rip + 0x7fac]
0xe2c4  2  test  al, al
0xe2c6  2  je  0xe2d1
0xe2c8  4  add  rbx, 0x10
0xe2cc  3  cmp  rbx, rsi
0xe2cf  2  jne  0xe2ac
0xe2d1  3  cmp  rbx, rsi
0xe2d4  2  je  0xe311
0xe2d6  3  cmp  rbx, rdi
0xe2d9  2  je  0xe30d
0xe2db  4  add  rbx, -8
0xe2df  5  cmp  qword ptr [rbx - 8], 0
0xe2e4  2  je  0xe300
0xe2e6  3  mov  rax, qword ptr [rbx]
0xe2e9  3  test  rax, rax
0xe2ec  2  je  0xe300
0xe2ee  10  movabs  r10, 0x9799a6753e593b70
0xe2f8  2  xor  ecx, ecx
0xe2fa  6  call  qword ptr [rip + 0x7f70]
0xe300  4  sub  rbx, 0x10
0xe304  4  lea  rax, [rbx + 8]
0xe308  3  cmp  rax, rdi
0xe30b  2  jne  0xe2df
0xe30d  2  xor  al, al
0xe30f  2  jmp  0xe313
0xe311  2  mov  al, 1
0xe313  5  mov  rbx, qword ptr [rsp + 0x30]
0xe318  5  mov  rsi, qword ptr [rsp + 0x38]
0xe31d  4  add  rsp, 0x20
0xe321  1  pop  rdi
0xe322  1  ret  
0xe323  5  mov  qword ptr [rsp + 8], rbx
0xe328  1  push  rdi
0xe329  4  sub  rsp, 0x20
0xe32d  3  mov  rbx, rdx
0xe330  3  mov  rdi, rcx
0xe333  3  cmp  rcx, rdx
0xe336  2  je  0xe35c
0xe338  4  mov  rax, qword ptr [rbx - 8]
0xe33c  3  test  rax, rax
0xe33f  2  je  0xe353
0xe341  10  movabs  r10, 0x9799a6753e593b70
0xe34b  2  xor  ecx, ecx
0xe34d  6  call  qword ptr [rip + 0x7f1d]
0xe353  4  sub  rbx, 0x10
0xe357  3  cmp  rbx, rdi
0xe35a  2  jne  0xe338
0xe35c  5  mov  rbx, qword ptr [rsp + 0x30]
0xe361  2  mov  al, 1
0xe363  4  add  rsp, 0x20
0xe367  1  pop  rdi
0xe368  1  ret  
0xe369  1  int3  
0xe36a  1  int3  
0xe36b  7  mov  qword ptr [rip + 0x14356], rcx
0xe372  1  ret  
0xe373  5  mov  qword ptr [rsp + 8], rbx
0xe378  1  push  rdi
0xe379  4  sub  rsp, 0x20
0xe37d  3  mov  rdi, rcx
0xe380  5  call  0xe3b3
0xe385  2  xor  ebx, ebx
0xe387  3  test  rax, rax
0xe38a  2  je  0xe3a6
0xe38c  10  movabs  r10, 0xd1ed0fdf1cd32070
0xe396  3  mov  rcx, rdi
0xe399  6  call  qword ptr [rip + 0x7ed1]
0xe39f  2  test  eax, eax
0xe3a1  3  setne  bl
0xe3a4  2  mov  eax, ebx
0xe3a6  5  mov  rbx, qword ptr [rsp + 0x30]
0xe3ab  4  add  rsp, 0x20
0xe3af  1  pop  rdi
0xe3b0  1  ret  
0xe3b1  1  int3  
0xe3b2  1  int3  
0xe3b3  2  push  rbx
0xe3b5  4  sub  rsp, 0x20
0xe3b9  2  xor  ecx, ecx
0xe3bb  5  call  0xd56b
0xe3c0  1  nop  
0xe3c1  7  mov  rax, qword ptr [rip + 0x12c70]
0xe3c8  2  mov  ecx, eax
0xe3ca  3  and  ecx, 0x3f
0xe3cd  7  mov  rbx, qword ptr [rip + 0x142f4]
0xe3d4  3  xor  rbx, rax
0xe3d7  3  ror  rbx, cl
0xe3da  2  xor  ecx, ecx
0xe3dc  5  call  0xd5bf
0xe3e1  3  mov  rax, rbx
0xe3e4  4  add  rsp, 0x20
0xe3e8  1  pop  rbx
0xe3e9  1  ret  
0xe3ea  1  int3  
0xe3eb  5  mov  qword ptr [rsp + 8], rbx
0xe3f0  5  mov  qword ptr [rsp + 0x20], r9
0xe3f5  1  push  rdi
0xe3f6  4  sub  rsp, 0x20
0xe3fa  3  mov  rdi, r9
0xe3fd  2  mov  ecx, dword ptr [rdx]
0xe3ff  5  call  0xd56b
0xe404  1  nop  
0xe405  7  mov  rax, qword ptr [rip + 0x12c2c]
0xe40c  2  mov  ecx, eax
0xe40e  3  and  ecx, 0x3f
0xe411  7  mov  rbx, qword ptr [rip + 0x142c8]
0xe418  3  xor  rbx, rax
0xe41b  3  ror  rbx, cl
0xe41e  2  mov  ecx, dword ptr [rdi]
0xe420  5  call  0xd5bf
0xe425  3  mov  rax, rbx
0xe428  5  mov  rbx, qword ptr [rsp + 0x30]
0xe42d  4  add  rsp, 0x20
0xe431  1  pop  rdi
0xe432  1  ret  
0xe433  3  mov  r11, rsp
0xe436  4  sub  rsp, 0x28
0xe43a  5  mov  eax, 3
0xe43f  4  lea  r9, [r11 + 0x10]
0xe443  4  lea  r8, [r11 + 8]
0xe447  4  mov  dword ptr [rsp + 0x38], eax
0xe44b  4  lea  rdx, [r11 + 0x18]
0xe44f  4  mov  dword ptr [rsp + 0x40], eax
0xe453  4  lea  rcx, [r11 + 8]
0xe457  5  call  0xe3eb
0xe45c  4  add  rsp, 0x28
0xe460  1  ret  
0xe461  1  int3  
0xe462  1  int3  
0xe463  7  mov  qword ptr [rip + 0x14266], rcx
0xe46a  7  mov  qword ptr [rip + 0x14267], rcx
0xe471  7  mov  qword ptr [rip + 0x14268], rcx
0xe478  7  mov  qword ptr [rip + 0x14269], rcx
0xe47f  1  ret  
0xe480  1  int3  
0xe481  1  int3  
0xe482  1  int3  
0xe483  5  mov  qword ptr [rsp + 0x18], rbx
0xe488  5  mov  qword ptr [rsp + 0x20], rsi
0xe48d  1  push  rdi
0xe48e  2  push  r12
0xe490  2  push  r13
0xe492  2  push  r14
0xe494  2  push  r15
0xe496  4  sub  rsp, 0x40
0xe49a  2  mov  ebx, ecx
0xe49c  3  xor  r15d, r15d
0xe49f  5  and  dword ptr [rsp + 0x78], r15d
0xe4a4  3  mov  r14b, 1
0xe4a7  5  mov  byte ptr [rsp + 0x70], r14b
0xe4ac  2  mov  edx, ecx
0xe4ae  3  sub  edx, 2
0xe4b1  2  je  0xe4da
0xe4b3  3  sub  edx, 2
0xe4b6  2  je  0xe50a
0xe4b8  3  sub  edx, 2
0xe4bb  2  je  0xe4da
0xe4bd  3  sub  edx, 2
0xe4c0  2  je  0xe50a
0xe4c2  3  sub  edx, 3
0xe4c5  2  je  0xe50a
0xe4c7  3  sub  edx, 4
0xe4ca  2  je  0xe4da
0xe4cc  3  sub  edx, 6
0xe4cf  2  je  0xe4da
0xe4d1  3  cmp  edx, 1
0xe4d4  6  jne  0xe55c
0xe4da  3  sub  ecx, 2
0xe4dd  6  je  0xe597
0xe4e3  3  sub  ecx, 4
0xe4e6  6  je  0xe57c
0xe4ec  3  sub  ecx, 9
0xe4ef  6  je  0xe58e
0xe4f5  3  sub  ecx, 6
0xe4f8  6  je  0xe585
0xe4fe  3  cmp  ecx, 1
0xe501  2  je  0xe57c
0xe503  2  xor  edi, edi
0xe505  5  jmp  0xe59e
0xe50a  5  call  0xb39f
0xe50f  3  mov  r15, rax
0xe512  3  test  rax, rax
0xe515  2  jne  0xe534
0xe517  3  or  eax, 0xffffffff
0xe51a  5  lea  r11, [rsp + 0x40]
0xe51f  4  mov  rbx, qword ptr [r11 + 0x40]
0xe523  4  mov  rsi, qword ptr [r11 + 0x48]
0xe527  3  mov  rsp, r11
0xe52a  2  pop  r15
0xe52c  2  pop  r14
0xe52e  2  pop  r13
0xe530  2  pop  r12
0xe532  1  pop  rdi
0xe533  1  ret  
0xe534  3  mov  rax, qword ptr [rax]
0xe537  7  mov  rcx, qword ptr [rip + 0x8ff2]
0xe53e  4  shl  rcx, 4
0xe542  3  add  rcx, rax
0xe545  2  jmp  0xe550
0xe547  3  cmp  dword ptr [rax + 4], ebx
0xe54a  2  je  0xe557
0xe54c  4  add  rax, 0x10
0xe550  3  cmp  rax, rcx
0xe553  2  jne  0xe547
0xe555  2  xor  eax, eax
0xe557  3  test  rax, rax
0xe55a  2  jne  0xe56e
0xe55c  5  call  0x8a6f
0xe561  6  mov  dword ptr [rax], 0x16
0xe567  5  call  0x8933
0xe56c  2  jmp  0xe517
0xe56e  4  lea  rdi, [rax + 8]
0xe572  3  xor  r14b, r14b
0xe575  5  mov  byte ptr [rsp + 0x70], r14b
0xe57a  2  jmp  0xe59e
0xe57c  7  lea  rdi, [rip + 0x1415d]
0xe583  2  jmp  0xe59e
0xe585  7  lea  rdi, [rip + 0x1414c]
0xe58c  2  jmp  0xe59e
0xe58e  7  lea  rdi, [rip + 0x14153]
0xe595  2  jmp  0xe59e
0xe597  7  lea  rdi, [rip + 0x14132]
0xe59e  3  xor  r13d, r13d
0xe5a1  3  test  r14b, r14b
0xe5a4  2  je  0xe5b0
0xe5a6  4  lea  ecx, [r13 + 3]
0xe5aa  5  call  0xd56b
0xe5af  1  nop  
0xe5b0  3  mov  rsi, qword ptr [rdi]
0xe5b3  3  test  r14b, r14b
0xe5b6  2  je  0xe5ca
0xe5b8  7  mov  rax, qword ptr [rip + 0x12a79]
0xe5bf  2  mov  ecx, eax
0xe5c1  3  and  ecx, 0x3f
0xe5c4  3  xor  rsi, rax
0xe5c7  3  ror  rsi, cl
0xe5ca  4  cmp  rsi, 1
0xe5ce  6  je  0xe65f
0xe5d4  3  test  rsi, rsi
0xe5d7  6  je  0xe6e3
0xe5dd  6  mov  r12d, 0x910
0xe5e3  3  cmp  ebx, 0xb
0xe5e6  2  ja  0xe61d
0xe5e8  4  bt  r12d, ebx
0xe5ec  2  jae  0xe61d
0xe5ee  4  mov  r13, qword ptr [r15 + 8]
0xe5f2  5  mov  qword ptr [rsp + 0x30], r13
0xe5f7  5  and  qword ptr [r15 + 8], 0
0xe5fc  3  cmp  ebx, 8
0xe5ff  2  jne  0xe653
0xe601  5  call  0xb227
0xe606  3  mov  eax, dword ptr [rax + 0x10]
0xe609  4  mov  dword ptr [rsp + 0x78], eax
0xe60d  4  mov  dword ptr [rsp + 0x20], eax
0xe611  5  call  0xb227
0xe616  7  mov  dword ptr [rax + 0x10], 0x8c
0xe61d  3  cmp  ebx, 8
0xe620  2  jne  0xe653
0xe622  7  mov  rax, qword ptr [rip + 0x8f0f]
0xe629  4  shl  rax, 4
0xe62d  3  add  rax, qword ptr [r15]
0xe630  7  mov  rcx, qword ptr [rip + 0x8f09]
0xe637  4  shl  rcx, 4
0xe63b  3  add  rcx, rax
0xe63e  5  mov  qword ptr [rsp + 0x28], rax
0xe643  3  cmp  rax, rcx
0xe646  2  je  0xe665
0xe648  5  and  qword ptr [rax + 8], 0
0xe64d  4  add  rax, 0x10
0xe651  2  jmp  0xe63e
0xe653  7  mov  rax, qword ptr [rip + 0x129de]
0xe65a  3  mov  qword ptr [rdi], rax
0xe65d  2  jmp  0xe665
0xe65f  6  mov  r12d, 0x910
0xe665  3  test  r14b, r14b
0xe668  2  je  0xe674
0xe66a  5  mov  ecx, 3
0xe66f  5  call  0xd5bf
0xe674  4  cmp  rsi, 1
0xe678  2  jne  0xe681
0xe67a  2  xor  eax, eax
0xe67c  5  jmp  0xe51a
0xe681  3  cmp  ebx, 8
0xe684  2  jne  0xe6a9
0xe686  5  call  0xb227
0xe68b  10  movabs  r10, 0x8b9c1f4f30d33370
0xe695  3  mov  edx, dword ptr [rax + 0x10]
0xe698  2  mov  ecx, ebx
0xe69a  3  mov  rax, rsi
0xe69d  7  mov  r8, qword ptr [rip + 0x7bcc]
0xe6a4  3  call  r8
0xe6a7  2  jmp  0xe6c1
0xe6a9  10  movabs  r10, 0xc6c1864950d77370
0xe6b3  2  mov  ecx, ebx
0xe6b5  3  mov  rax, rsi
0xe6b8  7  mov  rdx, qword ptr [rip + 0x7bb1]
0xe6bf  2  call  rdx
0xe6c1  3  cmp  ebx, 0xb
0xe6c4  2  ja  0xe67a
0xe6c6  4  bt  r12d, ebx
0xe6ca  2  jae  0xe67a
0xe6cc  4  mov  qword ptr [r15 + 8], r13
0xe6d0  3  cmp  ebx, 8
0xe6d3  2  jne  0xe67a
0xe6d5  5  call  0xb227
0xe6da  4  mov  ecx, dword ptr [rsp + 0x78]
0xe6de  3  mov  dword ptr [rax + 0x10], ecx
0xe6e1  2  jmp  0xe67a
0xe6e3  3  test  r14b, r14b
0xe6e6  2  je  0xe6f0
0xe6e8  3  lea  ecx, [rsi + 3]
0xe6eb  5  call  0xd5bf
0xe6f0  5  mov  ecx, 3
0xe6f5  5  call  0x7c37
0xe6fa  1  nop  
0xe6fb  1  int3  
0xe6fc  1  int3  
0xe6fd  1  int3  
0xe6fe  1  int3  
0xe6ff  5  mov  qword ptr [rsp + 8], rbx
0xe704  5  mov  qword ptr [rsp + 0x10], rbp
0xe709  5  mov  qword ptr [rsp + 0x18], rsi
0xe70e  1  push  rdi
0xe70f  2  push  r14
0xe711  2  push  r15
0xe713  4  sub  rsp, 0x20
0xe717  3  mov  rbp, rcx
0xe71a  3  test  rcx, rcx
0xe71d  2  je  0xe766
0xe71f  2  xor  ebx, ebx
0xe721  7  lea  r15, [rip - 0xe725]
0xe728  5  mov  edi, 0xe3
0xe72d  3  lea  eax, [rdi + rbx]
0xe730  6  mov  r8d, 0x55
0xe736  1  cdq  
0xe737  3  mov  rcx, rbp
0xe73a  2  sub  eax, edx
0xe73c  2  sar  eax, 1
0xe73e  3  movsxd  rsi, eax
0xe741  3  mov  r14, rsi
0xe744  3  add  r14, r14
0xe747  8  mov  rdx, qword ptr [r15 + r14*8 + 0x1a6a0]
0xe74f  5  call  0x12633
0xe754  2  test  eax, eax
0xe756  2  je  0xe781
0xe758  2  jns  0xe75f
0xe75a  3  lea  edi, [rsi - 1]
0xe75d  2  jmp  0xe762
0xe75f  3  lea  ebx, [rsi + 1]
0xe762  2  cmp  ebx, edi
0xe764  2  jle  0xe72d
0xe766  2  xor  eax, eax
0xe768  5  mov  rbx, qword ptr [rsp + 0x40]
0xe76d  5  mov  rbp, qword ptr [rsp + 0x48]
0xe772  5  mov  rsi, qword ptr [rsp + 0x50]
0xe777  4  add  rsp, 0x20
0xe77b  2  pop  r15
0xe77d  2  pop  r14
0xe77f  1  pop  rdi
0xe780  1  ret  
0xe781  8  movsxd  rax, dword ptr [r15 + r14*8 + 0x1a6a8]
0xe789  2  test  eax, eax
0xe78b  2  js  0xe766
0xe78d  6  cmp  rax, 0xe4
0xe793  2  jae  0xe766
0xe795  3  add  rax, rax
0xe798  8  mov  eax, dword ptr [r15 + rax*8 + 0x18c40]
0xe7a0  2  jmp  0xe768
0xe7a2  1  int3  
0xe7a3  3  mov  rax, rsp
0xe7a6  4  mov  qword ptr [rax + 0x10], rbx
0xe7aa  4  mov  qword ptr [rax + 8], rcx
0xe7ae  1  push  rdi
0xe7af  4  sub  rsp, 0x30
0xe7b3  3  mov  rdi, rdx
0xe7b6  3  mov  rbx, rcx
0xe7b9  3  test  rcx, rcx
0xe7bc  2  jne  0xe7ec
0xe7be  4  mov  byte ptr [rdx + 0x30], 1
0xe7c2  7  mov  dword ptr [rdx + 0x2c], 0x16
0xe7c9  4  mov  qword ptr [rax - 0x10], rdx
0xe7cd  4  and  qword ptr [rax - 0x18], rcx
0xe7d1  3  xor  r9d, r9d
0xe7d4  3  xor  r8d, r8d
0xe7d7  2  xor  edx, edx
0xe7d9  5  call  0x8867
0xe7de  3  or  eax, 0xffffffff
0xe7e1  5  mov  rbx, qword ptr [rsp + 0x48]
0xe7e6  4  add  rsp, 0x30
0xe7ea  1  pop  rdi
0xe7eb  1  ret  
0xe7ec  3  mov  eax, dword ptr [rcx + 0x14]
0xe7ef  1  nop  
0xe7f0  3  shr  eax, 0xc
0xe7f3  2  and  al, 1
0xe7f5  2  je  0xe7fe
0xe7f7  5  call  0x12943
0xe7fc  2  jmp  0xe7de
0xe7fe  5  call  0x4e7b
0xe803  1  nop  
0xe804  3  mov  rdx, rdi
0xe807  3  mov  rcx, rbx
0xe80a  5  call  0xe81f
0xe80f  2  mov  edi, eax
0xe811  3  mov  rcx, rbx
0xe814  5  call  0x4e87
0xe819  2  mov  eax, edi
0xe81b  2  jmp  0xe7e1
0xe81d  1  int3  
0xe81e  1  int3  
0xe81f  3  mov  rax, rsp
0xe822  4  mov  qword ptr [rax + 8], rbx
0xe826  4  mov  qword ptr [rax + 0x10], rsi
0xe82a  1  push  rdi
0xe82b  4  sub  rsp, 0x30
0xe82f  3  mov  rdi, rdx
0xe832  3  mov  rbx, rcx
0xe835  3  test  rcx, rcx
0xe838  2  jne  0xe85f
0xe83a  4  mov  qword ptr [rax - 0x10], rdx
0xe83e  3  xor  r9d, r9d
0xe841  4  and  qword ptr [rax - 0x18], rcx
0xe845  3  xor  r8d, r8d
0xe848  4  mov  byte ptr [rdx + 0x30], 1
0xe84c  7  mov  dword ptr [rdx + 0x2c], 0x16
0xe853  2  xor  edx, edx
0xe855  5  call  0x8867
0xe85a  3  or  eax, 0xffffffff
0xe85d  2  jmp  0xe8b4
0xe85f  3  mov  eax, dword ptr [rcx + 0x14]
0xe862  3  or  esi, 0xffffffff
0xe865  3  shr  eax, 0xd
0xe868  1  nop  
0xe869  2  test  al, 1
0xe86b  2  je  0xe8aa
0xe86d  5  call  0x935f
0xe872  3  mov  rcx, rbx
0xe875  2  mov  esi, eax
0xe877  5  call  0x94c7
0xe87c  3  mov  rcx, rbx
0xe87f  5  call  0xad03
0xe884  2  mov  ecx, eax
0xe886  3  mov  rdx, rdi
0xe889  5  call  0x127af
0xe88e  2  test  eax, eax
0xe890  2  jns  0xe897
0xe892  3  or  esi, 0xffffffff
0xe895  2  jmp  0xe8aa
0xe897  4  mov  rcx, qword ptr [rbx + 0x28]
0xe89b  3  test  rcx, rcx
0xe89e  2  je  0xe8aa
0xe8a0  5  call  0x8b07
0xe8a5  5  and  qword ptr [rbx + 0x28], 0
0xe8aa  3  mov  rcx, rbx
0xe8ad  5  call  0x12943
0xe8b2  2  mov  eax, esi
0xe8b4  5  mov  rbx, qword ptr [rsp + 0x40]
0xe8b9  5  mov  rsi, qword ptr [rsp + 0x48]
0xe8be  4  add  rsp, 0x30
0xe8c2  1  pop  rdi
0xe8c3  1  ret  
0xe8c4  1  int3  
0xe8c5  1  int3  
0xe8c6  1  int3  
0xe8c7  5  mov  qword ptr [rsp + 8], rbx
0xe8cc  5  mov  qword ptr [rsp + 0x10], rdi
0xe8d1  1  push  rbp
0xe8d2  3  mov  rbp, rsp
0xe8d5  4  sub  rsp, 0x60
0xe8d9  5  and  qword ptr [rbp - 0x40], 0
0xe8de  7  cmp  dword ptr [rip + 0x1354b], 0
0xe8e5  4  mov  byte ptr [rbp - 0x30], 0
0xe8e9  4  mov  byte ptr [rbp - 0x18], 0
0xe8ed  4  mov  byte ptr [rbp - 0x10], 0
0xe8f1  4  mov  byte ptr [rbp - 8], 0
0xe8f5  2  jne  0xe907
0xe8f7  7  movups  xmm0, xmmword ptr [rip + 0x12a1a]
0xe8fe  4  mov  byte ptr [rbp - 0x18], 1
0xe902  5  movdqu  xmmword ptr [rbp - 0x28], xmm0
0xe907  4  lea  rdx, [rbp - 0x40]
0xe90b  5  call  0xe7a3
0xe910  4  cmp  byte ptr [rbp - 0x18], 2
0xe914  2  mov  edi, eax
0xe916  2  jne  0xe923
0xe918  4  mov  rcx, qword ptr [rbp - 0x40]
0xe91c  7  and  dword ptr [rcx + 0x3a8], 0xfffffffd
0xe923  4  cmp  byte ptr [rbp - 0x10], 0
0xe927  2  je  0xe938
0xe929  3  mov  ebx, dword ptr [rbp - 0x14]
0xe92c  4  lea  rcx, [rbp - 0x40]
0xe930  5  call  0x5d13
0xe935  3  mov  dword ptr [rax + 0x20], ebx
0xe938  4  cmp  byte ptr [rbp - 8], 0
0xe93c  2  je  0xe94d
0xe93e  3  mov  ebx, dword ptr [rbp - 0xc]
0xe941  4  lea  rcx, [rbp - 0x40]
0xe945  5  call  0x5d13
0xe94a  3  mov  dword ptr [rax + 0x24], ebx
0xe94d  5  mov  rbx, qword ptr [rsp + 0x70]
0xe952  2  mov  eax, edi
0xe954  5  mov  rdi, qword ptr [rsp + 0x78]
0xe959  4  add  rsp, 0x60
0xe95d  1  pop  rbp
0xe95e  1  ret  
0xe95f  5  mov  qword ptr [rsp + 8], rbx
0xe964  5  mov  qword ptr [rsp + 0x20], r9
0xe969  1  push  rdi
0xe96a  4  sub  rsp, 0x20
0xe96e  3  mov  rdi, r9
0xe971  3  mov  rbx, r8
0xe974  2  mov  ecx, dword ptr [rdx]
0xe976  5  call  0xd7df
0xe97b  1  nop  
0xe97c  3  mov  rax, qword ptr [rbx]
0xe97f  3  movsxd  rcx, dword ptr [rax]
0xe982  3  mov  rdx, rcx
0xe985  3  mov  rax, rcx
0xe988  4  sar  rax, 6
0xe98c  7  lea  r8, [rip + 0x1369d]
0xe993  3  and  edx, 0x3f
0xe996  4  lea  rdx, [rdx + rdx*8]
0xe99a  4  mov  rax, qword ptr [r8 + rax*8]
0xe99e  5  test  byte ptr [rax + rdx*8 + 0x38], 1
0xe9a3  2  je  0xe9c8
0xe9a5  5  call  0xd8eb
0xe9aa  3  mov  rcx, rax
0xe9ad  6  call  qword ptr [rip + 0x7855]
0xe9b3  2  xor  ebx, ebx
0xe9b5  2  test  eax, eax
0xe9b7  2  jne  0xe9d6
0xe9b9  6  call  qword ptr [rip + 0x76c1]
0xe9bf  2  mov  ebx, eax
0xe9c1  5  call  0x8a4f
0xe9c6  2  mov  dword ptr [rax], ebx
0xe9c8  5  call  0x8a6f
0xe9cd  6  mov  dword ptr [rax], 9
0xe9d3  3  or  ebx, 0xffffffff
0xe9d6  2  mov  ecx, dword ptr [rdi]
0xe9d8  5  call  0xd807
0xe9dd  2  mov  eax, ebx
0xe9df  5  mov  rbx, qword ptr [rsp + 0x30]
0xe9e4  4  add  rsp, 0x20
0xe9e8  1  pop  rdi
0xe9e9  1  ret  
0xe9ea  1  int3  
0xe9eb  4  mov  dword ptr [rsp + 8], ecx
0xe9ef  4  sub  rsp, 0x38
0xe9f3  3  movsxd  rdx, ecx
0xe9f6  3  cmp  edx, -2
0xe9f9  2  jne  0xea08
0xe9fb  5  call  0x8a6f
0xea00  6  mov  dword ptr [rax], 9
0xea06  2  jmp  0xea74
0xea08  2  test  ecx, ecx
0xea0a  2  js  0xea64
0xea0c  6  cmp  edx, dword ptr [rip + 0x13a1e]
0xea12  2  jae  0xea64
0xea14  3  mov  rcx, rdx
0xea17  7  lea  r8, [rip + 0x13612]
0xea1e  3  and  ecx, 0x3f
0xea21  3  mov  rax, rdx
0xea24  4  sar  rax, 6
0xea28  4  lea  rcx, [rcx + rcx*8]
0xea2c  4  mov  rax, qword ptr [r8 + rax*8]
0xea30  5  test  byte ptr [rax + rcx*8 + 0x38], 1
0xea35  2  je  0xea64
0xea37  5  lea  rax, [rsp + 0x40]
0xea3c  4  mov  dword ptr [rsp + 0x50], edx
0xea40  4  mov  dword ptr [rsp + 0x58], edx
0xea44  5  lea  r9, [rsp + 0x50]
0xea49  5  lea  rdx, [rsp + 0x58]
0xea4e  5  mov  qword ptr [rsp + 0x20], rax
0xea53  5  lea  r8, [rsp + 0x20]
0xea58  5  lea  rcx, [rsp + 0x48]
0xea5d  5  call  0xe95f
0xea62  2  jmp  0xea77
0xea64  5  call  0x8a6f
0xea69  6  mov  dword ptr [rax], 9
0xea6f  5  call  0x8933
0xea74  3  or  eax, 0xffffffff
0xea77  4  add  rsp, 0x38
0xea7b  1  ret  
0xea7c  1  int3  
0xea7d  1  int3  
0xea7e  1  int3  
0xea7f  3  mov  rax, rsp
0xea82  1  push  rbp
0xea83  1  push  rsi
0xea84  1  push  rdi
0xea85  2  push  r12
0xea87  2  push  r13
0xea89  2  push  r14
0xea8b  2  push  r15
0xea8d  4  lea  rbp, [rax - 0x57]
0xea91  7  sub  rsp, 0xd0
0xea98  8  mov  qword ptr [rbp - 9], 0xfffffffffffffffe
0xeaa0  4  mov  qword ptr [rax + 8], rbx
0xeaa4  7  mov  rax, qword ptr [rip + 0x1258d]
0xeaab  3  xor  rax, rsp
0xeaae  4  mov  qword ptr [rbp + 0x17], rax
0xeab2  3  mov  rsi, r8
0xeab5  4  mov  qword ptr [rbp - 0x41], r8
0xeab9  3  movsxd  r14, edx
0xeabc  3  mov  rbx, rcx
0xeabf  4  mov  rax, qword ptr [rbp + 0x7f]
0xeac3  4  mov  qword ptr [rbp - 0x59], rax
0xeac7  3  mov  rax, r14
0xeaca  3  mov  r13, r14
0xeacd  4  sar  r13, 6
0xead1  4  mov  qword ptr [rbp - 0x39], r13
0xead5  7  lea  rcx, [rip - 0xead9]
0xeadc  3  and  eax, 0x3f
0xeadf  4  lea  r15, [rax + rax*8]
0xeae3  8  mov  rax, qword ptr [rcx + r13*8 + 0x22030]
0xeaeb  5  mov  rax, qword ptr [rax + r15*8 + 0x28]
0xeaf0  4  mov  qword ptr [rbp - 0x19], rax
0xeaf4  3  mov  r12d, r9d
0xeaf7  3  add  r12, r8
0xeafa  4  mov  qword ptr [rbp - 0x61], r12
0xeafe  6  call  qword ptr [rip + 0x770c]
0xeb04  3  mov  dword ptr [rbp - 0x49], eax
0xeb07  2  xor  edi, edi
0xeb09  4  mov  r10, qword ptr [rbp - 0x59]
0xeb0d  4  cmp  byte ptr [r10 + 0x28], dil
0xeb11  2  jne  0xeb1f
0xeb13  3  mov  rcx, r10
0xeb16  5  call  0x6c63
0xeb1b  4  mov  r10, qword ptr [rbp - 0x59]
0xeb1f  4  mov  rcx, qword ptr [r10 + 0x18]
0xeb23  3  mov  ecx, dword ptr [rcx + 0xc]
0xeb26  3  mov  dword ptr [rbp - 0x45], ecx
0xeb29  2  xor  eax, eax
0xeb2b  3  mov  qword ptr [rbx], rax
0xeb2e  3  mov  dword ptr [rbx + 8], eax
0xeb31  4  cmp  qword ptr [rbp - 0x41], r12
0xeb35  6  jae  0xeeca
0xeb3b  3  mov  r9, r14
0xeb3e  4  sar  r9, 6
0xeb42  4  mov  qword ptr [rbp - 0x11], r9
0xeb46  2  mov  edx, edi
0xeb48  2  mov  al, byte ptr [rsi]
0xeb4a  3  mov  byte ptr [rbp - 0x71], al
0xeb4d  3  mov  dword ptr [rbp - 0x6d], edi
0xeb50  6  mov  r12d, 1
0xeb56  7  lea  r11, [rip - 0xeb5a]
0xeb5d  6  cmp  ecx, 0xfde9
0xeb63  6  jne  0xece4
0xeb69  2  mov  edx, edi
0xeb6b  3  mov  r14, rdi
0xeb6e  8  lea  rcx, [r15*8 + 0x3e]
0xeb76  8  add  rcx, qword ptr [r11 + r9*8 + 0x22030]
0xeb7e  3  cmp  byte ptr [rcx], dil
0xeb81  2  je  0xeb91
0xeb83  2  inc  edx
0xeb85  3  inc  r14
0xeb88  3  inc  rcx
0xeb8b  4  cmp  r14, 5
0xeb8f  2  jl  0xeb7e
0xeb91  3  test  r14, r14
0xeb94  6  jle  0xec7a
0xeb9a  8  mov  rax, qword ptr [r11 + r13*8 + 0x22030]
0xeba2  6  movzx  ecx, byte ptr [rax + r15*8 + 0x3e]
0xeba8  9  movsx  r12d, byte ptr [rcx + r11 + 0x21920]
0xebb1  3  inc  r12d
0xebb4  3  mov  eax, r12d
0xebb7  2  sub  eax, edx
0xebb9  3  mov  dword ptr [rbp - 0x51], eax
0xebbc  4  mov  rdx, qword ptr [rbp - 0x61]
0xebc0  3  sub  rdx, rsi
0xebc3  3  movsxd  r8, eax
0xebc6  3  cmp  r8, rdx
0xebc9  6  jg  0xee47
0xebcf  3  mov  rcx, rdi
0xebd2  8  lea  rdx, [r15*8 + 0x3e]
0xebda  8  add  rdx, qword ptr [r11 + r9*8 + 0x22030]
0xebe2  2  mov  al, byte ptr [rdx]
0xebe4  4  mov  byte ptr [rbp + rcx - 1], al
0xebe8  3  inc  rcx
0xebeb  3  inc  rdx
0xebee  3  cmp  rcx, r14
0xebf1  2  jl  0xebe2
0xebf3  3  test  r8, r8
0xebf6  2  jle  0xec12
0xebf8  4  lea  rcx, [rbp - 1]
0xebfc  3  add  rcx, r14
0xebff  3  mov  rdx, rsi
0xec02  5  call  0x2dd3
0xec07  4  mov  r10, qword ptr [rbp - 0x59]
0xec0b  7  lea  r11, [rip - 0xec0f]
0xec12  3  mov  rdx, rdi
0xec15  8  mov  rcx, qword ptr [r11 + r13*8 + 0x22030]
0xec1d  3  add  rcx, rdx
0xec20  5  mov  byte ptr [rcx + r15*8 + 0x3e], dil
0xec25  3  inc  rdx
0xec28  3  cmp  rdx, r14
0xec2b  2  jl  0xec15
0xec2d  4  mov  qword ptr [rbp - 0x31], rdi
0xec31  4  lea  rax, [rbp - 1]
0xec35  4  mov  qword ptr [rbp - 0x29], rax
0xec39  2  mov  eax, edi
0xec3b  4  cmp  r12d, 4
0xec3f  3  sete  al
0xec42  2  inc  eax
0xec44  3  mov  r12d, eax
0xec47  3  mov  r8d, eax
0xec4a  5  mov  qword ptr [rsp + 0x20], r10
0xec4f  4  lea  r9, [rbp - 0x31]
0xec53  4  lea  rdx, [rbp - 0x29]
0xec57  4  lea  rcx, [rbp - 0x6d]
0xec5b  5  call  0x11143
0xec60  4  cmp  rax, -1
0xec64  6  je  0xeeca
0xec6a  3  mov  eax, dword ptr [rbp - 0x51]
0xec6d  2  dec  eax
0xec6f  3  movsxd  rcx, eax
0xec72  3  add  rsi, rcx
0xec75  5  jmp  0xed75
0xec7a  3  movzx  eax, byte ptr [rsi]
0xec7d  9  movsx  r13, byte ptr [rax + r11 + 0x21920]
0xec86  4  lea  ecx, [r13 + 1]
0xec8a  4  mov  r8, qword ptr [rbp - 0x61]
0xec8e  3  sub  r8, rsi
0xec91  3  movsxd  rax, ecx
0xec94  3  cmp  rax, r8
0xec97  6  jg  0xee75
0xec9d  4  mov  qword ptr [rbp - 0x51], rdi
0xeca1  4  mov  qword ptr [rbp - 0x21], rsi
0xeca5  2  mov  eax, edi
0xeca7  3  cmp  ecx, 4
0xecaa  3  sete  al
0xecad  2  inc  eax
0xecaf  3  mov  r14d, eax
0xecb2  3  mov  r8d, eax
0xecb5  5  mov  qword ptr [rsp + 0x20], r10
0xecba  4  lea  r9, [rbp - 0x51]
0xecbe  4  lea  rdx, [rbp - 0x21]
0xecc2  4  lea  rcx, [rbp - 0x6d]
0xecc6  5  call  0x11143
0xeccb  4  cmp  rax, -1
0xeccf  6  je  0xeeca
0xecd5  3  add  rsi, r13
0xecd8  3  mov  r12d, r14d
0xecdb  4  mov  r13, qword ptr [rbp - 0x39]
0xecdf  5  jmp  0xed75
0xece4  8  mov  r8, qword ptr [r11 + r13*8 + 0x22030]
0xecec  5  mov  cl, byte ptr [r8 + r15*8 + 0x3d]
0xecf1  3  test  cl, 4
0xecf4  2  je  0xed17
0xecf6  5  mov  al, byte ptr [r8 + r15*8 + 0x3e]
0xecfb  3  mov  byte ptr [rbp + 7], al
0xecfe  2  mov  al, byte ptr [rsi]
0xed00  3  mov  byte ptr [rbp + 8], al
0xed03  3  and  cl, 0xfb
0xed06  5  mov  byte ptr [r8 + r15*8 + 0x3d], cl
0xed0b  6  mov  r8d, 2
0xed11  4  lea  rdx, [rbp + 7]
0xed15  2  jmp  0xed60
0xed17  4  movzx  r9d, byte ptr [rsi]
0xed1b  4  mov  rax, qword ptr [r10 + 0x18]
0xed1f  3  mov  rcx, qword ptr [rax]
0xed22  5  cmp  word ptr [rcx + r9*2], di
0xed27  2  jge  0xed5a
0xed29  4  lea  r14, [rsi + 1]
0xed2d  4  cmp  r14, qword ptr [rbp - 0x61]
0xed31  6  jae  0xeea7
0xed37  3  mov  r9, r10
0xed3a  6  mov  r8d, 2
0xed40  3  mov  rdx, rsi
0xed43  4  lea  rcx, [rbp - 0x6d]
0xed47  5  call  0xab8b
0xed4c  3  cmp  eax, -1
0xed4f  6  je  0xeeca
0xed55  3  mov  rsi, r14
0xed58  2  jmp  0xed75
0xed5a  3  mov  r8, r12
0xed5d  3  mov  rdx, rsi
0xed60  3  mov  r9, r10
0xed63  4  lea  rcx, [rbp - 0x6d]
0xed67  5  call  0xab8b
0xed6c  3  cmp  eax, -1
0xed6f  6  je  0xeeca
0xed75  3  inc  rsi
0xed78  5  mov  qword ptr [rsp + 0x38], rdi
0xed7d  5  mov  qword ptr [rsp + 0x30], rdi
0xed82  8  mov  dword ptr [rsp + 0x28], 5
0xed8a  4  lea  rax, [rbp + 0xf]
0xed8e  5  mov  qword ptr [rsp + 0x20], rax
0xed93  3  mov  r9d, r12d
0xed96  4  lea  r8, [rbp - 0x6d]
0xed9a  2  xor  edx, edx
0xed9c  3  mov  ecx, dword ptr [rbp - 0x49]
0xed9f  5  call  0xceeb
0xeda4  3  mov  r14d, eax
0xeda7  2  test  eax, eax
0xeda9  6  je  0xeeca
0xedaf  5  mov  qword ptr [rsp + 0x20], rdi
0xedb4  4  lea  r9, [rbp - 0x69]
0xedb8  3  mov  r8d, eax
0xedbb  4  lea  rdx, [rbp + 0xf]
0xedbf  4  mov  r12, qword ptr [rbp - 0x19]
0xedc3  3  mov  rcx, r12
0xedc6  6  call  qword ptr [rip + 0x733c]
0xedcc  2  test  eax, eax
0xedce  6  je  0xeec2
0xedd4  2  mov  edx, esi
0xedd6  3  sub  edx, dword ptr [rbp - 0x41]
0xedd9  3  add  edx, dword ptr [rbx + 8]
0xeddc  3  mov  dword ptr [rbx + 4], edx
0xeddf  4  cmp  dword ptr [rbp - 0x69], r14d
0xede3  6  jb  0xeeca
0xede9  4  cmp  byte ptr [rbp - 0x71], 0xa
0xeded  2  jne  0xee2d
0xedef  5  mov  eax, 0xd
0xedf4  4  mov  word ptr [rbp - 0x71], ax
0xedf8  5  mov  qword ptr [rsp + 0x20], rdi
0xedfd  4  lea  r9, [rbp - 0x69]
0xee01  4  lea  r8d, [rax - 0xc]
0xee05  4  lea  rdx, [rbp - 0x71]
0xee09  3  mov  rcx, r12
0xee0c  6  call  qword ptr [rip + 0x72f6]
0xee12  2  test  eax, eax
0xee14  6  je  0xeec2
0xee1a  4  cmp  dword ptr [rbp - 0x69], 1
0xee1e  6  jb  0xeeca
0xee24  3  inc  dword ptr [rbx + 8]
0xee27  3  inc  dword ptr [rbx + 4]
0xee2a  3  mov  edx, dword ptr [rbx + 4]
0xee2d  4  cmp  rsi, qword ptr [rbp - 0x61]
0xee31  6  jae  0xeeca
0xee37  4  mov  r10, qword ptr [rbp - 0x59]
0xee3b  4  mov  r9, qword ptr [rbp - 0x11]
0xee3f  3  mov  ecx, dword ptr [rbp - 0x45]
0xee42  5  jmp  0xeb48
0xee47  3  test  rdx, rdx
0xee4a  2  jle  0xee70
0xee4c  3  sub  rsi, r14
0xee4f  8  mov  rcx, qword ptr [r11 + r13*8 + 0x22030]
0xee57  3  add  rcx, r14
0xee5a  4  mov  al, byte ptr [rsi + r14]
0xee5e  5  mov  byte ptr [rcx + r15*8 + 0x3e], al
0xee63  2  inc  edi
0xee65  3  inc  r14
0xee68  3  movsxd  rax, edi
0xee6b  3  cmp  rax, rdx
0xee6e  2  jl  0xee4f
0xee70  3  add  dword ptr [rbx + 4], edx
0xee73  2  jmp  0xeeca
0xee75  3  test  r8, r8
0xee78  2  jle  0xeea1
0xee7a  3  mov  rdx, rdi
0xee7d  4  mov  r9, qword ptr [rbp - 0x39]
0xee81  8  mov  rcx, qword ptr [r11 + r9*8 + 0x22030]
0xee89  3  add  rcx, rdx
0xee8c  3  mov  al, byte ptr [rdx + rsi]
0xee8f  5  mov  byte ptr [rcx + r15*8 + 0x3e], al
0xee94  2  inc  edi
0xee96  3  inc  rdx
0xee99  3  movsxd  rax, edi
0xee9c  3  cmp  rax, r8
0xee9f  2  jl  0xee81
0xeea1  4  add  dword ptr [rbx + 4], r8d
0xeea5  2  jmp  0xeeca
0xeea7  5  mov  byte ptr [r8 + r15*8 + 0x3e], r9b
0xeeac  8  mov  rax, qword ptr [r11 + r13*8 + 0x22030]
0xeeb4  6  or  byte ptr [rax + r15*8 + 0x3d], 4
0xeeba  3  lea  eax, [rdx + 1]
0xeebd  3  mov  dword ptr [rbx + 4], eax
0xeec0  2  jmp  0xeeca
0xeec2  6  call  qword ptr [rip + 0x71b8]
0xeec8  2  mov  dword ptr [rbx], eax
0xeeca  3  mov  rax, rbx
0xeecd  4  mov  rcx, qword ptr [rbp + 0x17]
0xeed1  3  xor  rcx, rsp
0xeed4  5  call  0x14c73
0xeed9  8  mov  rbx, qword ptr [rsp + 0x110]
0xeee1  7  add  rsp, 0xd0
0xeee8  2  pop  r15
0xeeea  2  pop  r14
0xeeec  2  pop  r13
0xeeee  2  pop  r12
0xeef0  1  pop  rdi
0xeef1  1  pop  rsi
0xeef2  1  pop  rbp
0xeef3  1  ret  
0xeef4  1  int3  
0xeef5  1  int3  
0xeef6  1  int3  
0xeef7  5  mov  qword ptr [rsp + 8], rbx
0xeefc  5  mov  qword ptr [rsp + 0x18], rbp
0xef01  1  push  rsi
0xef02  1  push  rdi
0xef03  2  push  r14
0xef05  5  mov  eax, 0x1450
0xef0a  5  call  0x14f53
0xef0f  3  sub  rsp, rax
0xef12  7  mov  rax, qword ptr [rip + 0x1211f]
0xef19  3  xor  rax, rsp
0xef1c  8  mov  qword ptr [rsp + 0x1440], rax
0xef24  3  movsxd  r10, edx
0xef27  3  mov  rdi, rcx
0xef2a  3  mov  rax, r10
0xef2d  3  mov  ebp, r9d
0xef30  4  sar  rax, 6
0xef34  7  lea  rcx, [rip + 0x130f5]
0xef3b  4  and  r10d, 0x3f
0xef3f  3  add  rbp, r8
0xef42  3  mov  rsi, r8
0xef45  4  mov  rax, qword ptr [rcx + rax*8]
0xef49  4  lea  rdx, [r10 + r10*8]
0xef4d  5  mov  r14, qword ptr [rax + rdx*8 + 0x28]
0xef52  2  xor  eax, eax
0xef54  3  mov  qword ptr [rdi], rax
0xef57  3  mov  dword ptr [rdi + 8], eax
0xef5a  3  cmp  r8, rbp
0xef5d  2  jae  0xefce
0xef5f  5  lea  rbx, [rsp + 0x40]
0xef64  3  cmp  rsi, rbp
0xef67  2  jae  0xef8d
0xef69  2  mov  al, byte ptr [rsi]
0xef6b  3  inc  rsi
0xef6e  2  cmp  al, 0xa
0xef70  2  jne  0xef7b
0xef72  3  inc  dword ptr [rdi + 8]
0xef75  3  mov  byte ptr [rbx], 0xd
0xef78  3  inc  rbx
0xef7b  2  mov  byte ptr [rbx], al
0xef7d  3  inc  rbx
0xef80  8  lea  rax, [rsp + 0x143f]
0xef88  3  cmp  rbx, rax
0xef8b  2  jb  0xef64
0xef8d  6  and  qword ptr [rsp + 0x20], 0
0xef93  5  lea  rax, [rsp + 0x40]
0xef98  2  sub  ebx, eax
0xef9a  5  lea  r9, [rsp + 0x30]
0xef9f  3  mov  r8d, ebx
0xefa2  5  lea  rdx, [rsp + 0x40]
0xefa7  3  mov  rcx, r14
0xefaa  6  call  qword ptr [rip + 0x7158]
0xefb0  2  test  eax, eax
0xefb2  2  je  0xefc6
0xefb4  4  mov  eax, dword ptr [rsp + 0x30]
0xefb8  3  add  dword ptr [rdi + 4], eax
0xefbb  2  cmp  eax, ebx
0xefbd  2  jb  0xefce
0xefbf  3  cmp  rsi, rbp
0xefc2  2  jb  0xef5f
0xefc4  2  jmp  0xefce
0xefc6  6  call  qword ptr [rip + 0x70b4]
0xefcc  2  mov  dword ptr [rdi], eax
0xefce  3  mov  rax, rdi
0xefd1  8  mov  rcx, qword ptr [rsp + 0x1440]
0xefd9  3  xor  rcx, rsp
0xefdc  5  call  0x14c73
0xefe1  8  lea  r11, [rsp + 0x1450]
0xefe9  4  mov  rbx, qword ptr [r11 + 0x20]
0xefed  4  mov  rbp, qword ptr [r11 + 0x30]
0xeff1  3  mov  rsp, r11
0xeff4  2  pop  r14
0xeff6  1  pop  rdi
0xeff7  1  pop  rsi
0xeff8  1  ret  
0xeff9  1  int3  
0xeffa  1  int3  
0xeffb  5  mov  qword ptr [rsp + 8], rbx
0xf000  5  mov  qword ptr [rsp + 0x18], rbp
0xf005  1  push  rsi
0xf006  1  push  rdi
0xf007  2  push  r14
0xf009  5  mov  eax, 0x1450
0xf00e  5  call  0x14f53
0xf013  3  sub  rsp, rax
0xf016  7  mov  rax, qword ptr [rip + 0x1201b]
0xf01d  3  xor  rax, rsp
0xf020  8  mov  qword ptr [rsp + 0x1440], rax
0xf028  3  movsxd  r10, edx
0xf02b  3  mov  rdi, rcx
0xf02e  3  mov  rax, r10
0xf031  3  mov  ebp, r9d
0xf034  4  sar  rax, 6
0xf038  7  lea  rcx, [rip + 0x12ff1]
0xf03f  4  and  r10d, 0x3f
0xf043  3  add  rbp, r8
0xf046  3  mov  rsi, r8
0xf049  4  mov  rax, qword ptr [rcx + rax*8]
0xf04d  4  lea  rdx, [r10 + r10*8]
0xf051  5  mov  r14, qword ptr [rax + rdx*8 + 0x28]
0xf056  2  xor  eax, eax
0xf058  3  mov  qword ptr [rdi], rax
0xf05b  3  mov  dword ptr [rdi + 8], eax
0xf05e  3  cmp  r8, rbp
0xf061  6  jae  0xf0e9
0xf067  5  lea  rbx, [rsp + 0x40]
0xf06c  3  cmp  rsi, rbp
0xf06f  2  jae  0xf0a2
0xf071  3  movzx  eax, word ptr [rsi]
0xf074  4  add  rsi, 2
0xf078  4  cmp  ax, 0xa
0xf07c  2  jne  0xf08e
0xf07e  4  add  dword ptr [rdi + 8], 2
0xf082  5  mov  ecx, 0xd
0xf087  3  mov  word ptr [rbx], cx
0xf08a  4  add  rbx, 2
0xf08e  3  mov  word ptr [rbx], ax
0xf091  4  add  rbx, 2
0xf095  8  lea  rax, [rsp + 0x143e]
0xf09d  3  cmp  rbx, rax
0xf0a0  2  jb  0xf06c
0xf0a2  6  and  qword ptr [rsp + 0x20], 0
0xf0a8  5  lea  rax, [rsp + 0x40]
0xf0ad  3  sub  rbx, rax
0xf0b0  5  lea  r9, [rsp + 0x30]
0xf0b5  3  sar  rbx, 1
0xf0b8  5  lea  rdx, [rsp + 0x40]
0xf0bd  2  add  ebx, ebx
0xf0bf  3  mov  rcx, r14
0xf0c2  3  mov  r8d, ebx
0xf0c5  6  call  qword ptr [rip + 0x703d]
0xf0cb  2  test  eax, eax
0xf0cd  2  je  0xf0e1
0xf0cf  4  mov  eax, dword ptr [rsp + 0x30]
0xf0d3  3  add  dword ptr [rdi + 4], eax
0xf0d6  2  cmp  eax, ebx
0xf0d8  2  jb  0xf0e9
0xf0da  3  cmp  rsi, rbp
0xf0dd  2  jb  0xf067
0xf0df  2  jmp  0xf0e9
0xf0e1  6  call  qword ptr [rip + 0x6f99]
0xf0e7  2  mov  dword ptr [rdi], eax
0xf0e9  3  mov  rax, rdi
0xf0ec  8  mov  rcx, qword ptr [rsp + 0x1440]
0xf0f4  3  xor  rcx, rsp
0xf0f7  5  call  0x14c73
0xf0fc  8  lea  r11, [rsp + 0x1450]
0xf104  4  mov  rbx, qword ptr [r11 + 0x20]
0xf108  4  mov  rbp, qword ptr [r11 + 0x30]
0xf10c  3  mov  rsp, r11
0xf10f  2  pop  r14
0xf111  1  pop  rdi
0xf112  1  pop  rsi
0xf113  1  ret  
0xf114  1  int3  
0xf115  1  int3  
0xf116  1  int3  
0xf117  5  mov  qword ptr [rsp + 8], rbx
0xf11c  5  mov  qword ptr [rsp + 0x18], rbp
0xf121  1  push  rsi
0xf122  1  push  rdi
0xf123  2  push  r12
0xf125  2  push  r14
0xf127  2  push  r15
0xf129  5  mov  eax, 0x1470
0xf12e  5  call  0x14f53
0xf133  3  sub  rsp, rax
0xf136  7  mov  rax, qword ptr [rip + 0x11efb]
0xf13d  3  xor  rax, rsp
0xf140  8  mov  qword ptr [rsp + 0x1460], rax
0xf148  3  movsxd  r10, edx
0xf14b  3  mov  rbx, rcx
0xf14e  3  mov  rax, r10
0xf151  3  mov  r14d, r9d
0xf154  4  sar  rax, 6
0xf158  7  lea  rcx, [rip + 0x12ed1]
0xf15f  4  and  r10d, 0x3f
0xf163  3  add  r14, r8
0xf166  3  mov  r15, r8
0xf169  3  mov  rdi, r8
0xf16c  4  mov  rax, qword ptr [rcx + rax*8]
0xf170  4  lea  rdx, [r10 + r10*8]
0xf174  5  mov  r12, qword ptr [rax + rdx*8 + 0x28]
0xf179  2  xor  eax, eax
0xf17b  3  mov  qword ptr [rbx], rax
0xf17e  3  cmp  r8, r14
0xf181  3  mov  dword ptr [rbx + 8], eax
0xf184  6  jae  0xf258
0xf18a  5  lea  rax, [rsp + 0x50]
0xf18f  3  cmp  rdi, r14
0xf192  2  jae  0xf1c1
0xf194  3  movzx  ecx, word ptr [rdi]
0xf197  4  add  rdi, 2
0xf19b  4  cmp  cx, 0xa
0xf19f  2  jne  0xf1ad
0xf1a1  5  mov  edx, 0xd
0xf1a6  3  mov  word ptr [rax], dx
0xf1a9  4  add  rax, 2
0xf1ad  3  mov  word ptr [rax], cx
0xf1b0  4  add  rax, 2
0xf1b4  8  lea  rcx, [rsp + 0x6f8]
0xf1bc  3  cmp  rax, rcx
0xf1bf  2  jb  0xf18f
0xf1c1  6  and  qword ptr [rsp + 0x38], 0
0xf1c7  5  lea  rcx, [rsp + 0x50]
0xf1cc  6  and  qword ptr [rsp + 0x30], 0
0xf1d2  5  lea  r8, [rsp + 0x50]
0xf1d7  3  sub  rax, rcx
0xf1da  8  mov  dword ptr [rsp + 0x28], 0xd55
0xf1e2  8  lea  rcx, [rsp + 0x700]
0xf1ea  3  sar  rax, 1
0xf1ed  5  mov  qword ptr [rsp + 0x20], rcx
0xf1f2  3  mov  r9d, eax
0xf1f5  5  mov  ecx, 0xfde9
0xf1fa  2  xor  edx, edx
0xf1fc  5  call  0xceeb
0xf201  2  mov  ebp, eax
0xf203  2  test  eax, eax
0xf205  2  je  0xf250
0xf207  2  xor  esi, esi
0xf209  2  test  eax, eax
0xf20b  2  je  0xf240
0xf20d  6  and  qword ptr [rsp + 0x20], 0
0xf213  8  lea  rdx, [rsp + 0x700]
0xf21b  2  mov  ecx, esi
0xf21d  5  lea  r9, [rsp + 0x40]
0xf222  3  mov  r8d, ebp
0xf225  3  add  rdx, rcx
0xf228  3  mov  rcx, r12
0xf22b  3  sub  r8d, esi
0xf22e  6  call  qword ptr [rip + 0x6ed4]
0xf234  2  test  eax, eax
0xf236  2  je  0xf250
0xf238  4  add  esi, dword ptr [rsp + 0x40]
0xf23c  2  cmp  esi, ebp
0xf23e  2  jb  0xf20d
0xf240  2  mov  eax, edi
0xf242  3  sub  eax, r15d
0xf245  3  mov  dword ptr [rbx + 4], eax
0xf248  3  cmp  rdi, r14
0xf24b  5  jmp  0xf184
0xf250  6  call  qword ptr [rip + 0x6e2a]
0xf256  2  mov  dword ptr [rbx], eax
0xf258  3  mov  rax, rbx
0xf25b  8  mov  rcx, qword ptr [rsp + 0x1460]
0xf263  3  xor  rcx, rsp
0xf266  5  call  0x14c73
0xf26b  8  lea  r11, [rsp + 0x1470]
0xf273  4  mov  rbx, qword ptr [r11 + 0x30]
0xf277  4  mov  rbp, qword ptr [r11 + 0x40]
0xf27b  3  mov  rsp, r11
0xf27e  2  pop  r15
0xf280  2  pop  r14
0xf282  2  pop  r12
0xf284  1  pop  rdi
0xf285  1  pop  rsi
0xf286  1  ret  
0xf287  5  mov  qword ptr [rsp + 0x18], rbx
0xf28c  5  mov  qword ptr [rsp + 0x10], rdx
0xf291  4  mov  dword ptr [rsp + 8], ecx
0xf295  1  push  rsi
0xf296  2  push  r12
0xf298  2  push  r13
0xf29a  2  push  r14
0xf29c  2  push  r15
0xf29e  4  sub  rsp, 0x30
0xf2a2  3  mov  rbx, r9
0xf2a5  3  mov  r13d, r8d
0xf2a8  3  movsxd  rsi, ecx
0xf2ab  3  cmp  esi, -2
0xf2ae  2  jne  0xf2dd
0xf2b0  5  mov  byte ptr [r9 + 0x38], 1
0xf2b5  5  and  dword ptr [r9 + 0x34], 0
0xf2ba  5  mov  byte ptr [r9 + 0x30], 1
0xf2bf  8  mov  dword ptr [r9 + 0x2c], 9
0xf2c7  3  or  eax, 0xffffffff
0xf2ca  5  mov  rbx, qword ptr [rsp + 0x70]
0xf2cf  4  add  rsp, 0x30
0xf2d3  2  pop  r15
0xf2d5  2  pop  r14
0xf2d7  2  pop  r13
0xf2d9  2  pop  r12
0xf2db  1  pop  rsi
0xf2dc  1  ret  
0xf2dd  2  test  ecx, ecx
0xf2df  2  js  0xf2f0
0xf2e1  6  cmp  esi, dword ptr [rip + 0x13149]
0xf2e7  2  jae  0xf2f0
0xf2e9  5  mov  eax, 1
0xf2ee  2  jmp  0xf2f2
0xf2f0  2  xor  eax, eax
0xf2f2  2  test  eax, eax
0xf2f4  2  jne  0xf329
0xf2f6  5  mov  byte ptr [r9 + 0x38], 1
0xf2fb  5  and  dword ptr [r9 + 0x34], 0
0xf300  5  mov  byte ptr [r9 + 0x30], 1
0xf305  8  mov  dword ptr [r9 + 0x2c], 9
0xf30d  5  mov  qword ptr [rsp + 0x28], rbx
0xf312  6  and  qword ptr [rsp + 0x20], 0
0xf318  3  xor  r9d, r9d
0xf31b  3  xor  r8d, r8d
0xf31e  2  xor  edx, edx
0xf320  2  xor  ecx, ecx
0xf322  5  call  0x8867
0xf327  2  jmp  0xf2c7
0xf329  3  mov  rax, rsi
0xf32c  3  mov  r15, rsi
0xf32f  4  sar  r15, 6
0xf333  7  lea  rcx, [rip + 0x12cf6]
0xf33a  3  and  eax, 0x3f
0xf33d  4  lea  r12, [rax + rax*8]
0xf341  4  mov  rax, qword ptr [rcx + r15*8]
0xf345  6  test  byte ptr [rax + r12*8 + 0x38], 1
0xf34b  2  je  0xf2f6
0xf34d  2  mov  ecx, esi
0xf34f  5  call  0xd7df
0xf354  4  or  r14d, 0xffffffff
0xf358  7  lea  rax, [rip + 0x12cd1]
0xf35f  4  mov  rax, qword ptr [rax + r15*8]
0xf363  6  test  byte ptr [rax + r12*8 + 0x38], 1
0xf369  2  jne  0xf380
0xf36b  4  mov  byte ptr [rbx + 0x30], 1
0xf36f  7  mov  dword ptr [rbx + 0x2c], 9
0xf376  4  mov  byte ptr [rbx + 0x38], 1
0xf37a  4  and  dword ptr [rbx + 0x34], 0
0xf37e  2  jmp  0xf395
0xf380  3  mov  r9, rbx
0xf383  3  mov  r8d, r13d
0xf386  5  mov  rdx, qword ptr [rsp + 0x68]
0xf38b  2  mov  ecx, esi
0xf38d  5  call  0xf3a7
0xf392  3  mov  r14d, eax
0xf395  2  mov  ecx, esi
0xf397  5  call  0xd807
0xf39c  3  mov  eax, r14d
0xf39f  5  jmp  0xf2ca
0xf3a4  1  int3  
0xf3a5  1  int3  
0xf3a6  1  int3  
0xf3a7  2  push  rbp
0xf3a9  1  push  rbx
0xf3aa  1  push  rsi
0xf3ab  1  push  rdi
0xf3ac  2  push  r12
0xf3ae  2  push  r13
0xf3b0  2  push  r14
0xf3b2  2  push  r15
0xf3b4  3  mov  rbp, rsp
0xf3b7  4  sub  rsp, 0x78
0xf3bb  2  xor  edi, edi
0xf3bd  3  mov  r14d, r8d
0xf3c0  3  movsxd  r15, ecx
0xf3c3  3  mov  rbx, r9
0xf3c6  3  mov  rsi, rdx
0xf3c9  3  test  r8d, r8d
0xf3cc  6  je  0xf69a
0xf3d2  3  test  rdx, rdx
0xf3d5  2  jne  0xf40e
0xf3d7  5  mov  byte ptr [r9 + 0x38], 1
0xf3dc  3  xor  r8d, r8d
0xf3df  4  mov  dword ptr [r9 + 0x34], edi
0xf3e3  2  xor  edx, edx
0xf3e5  5  mov  byte ptr [r9 + 0x30], 1
0xf3ea  2  xor  ecx, ecx
0xf3ec  8  mov  dword ptr [r9 + 0x2c], 0x16
0xf3f4  3  xor  r9d, r9d
0xf3f7  5  mov  qword ptr [rsp + 0x28], rbx
0xf3fc  5  mov  qword ptr [rsp + 0x20], rdi
0xf401  5  call  0x8867
0xf406  3  or  eax, 0xffffffff
0xf409  5  jmp  0xf69c
0xf40e  3  mov  rax, r15
0xf411  7  lea  rcx, [rip + 0x12c18]
0xf418  3  and  eax, 0x3f
0xf41b  3  mov  r12, r15
0xf41e  4  sar  r12, 6
0xf422  4  mov  qword ptr [rbp - 0x18], r12
0xf426  4  lea  r13, [rax + rax*8]
0xf42a  4  mov  rcx, qword ptr [rcx + r12*8]
0xf42e  5  mov  al, byte ptr [rcx + r13*8 + 0x39]
0xf433  3  mov  byte ptr [rbp - 0x48], al
0xf436  2  dec  al
0xf438  2  cmp  al, 1
0xf43a  2  ja  0xf445
0xf43c  3  mov  eax, r14d
0xf43f  2  not  eax
0xf441  2  test  al, 1
0xf443  2  je  0xf3d7
0xf445  6  test  byte ptr [rcx + r13*8 + 0x38], 0x20
0xf44b  2  je  0xf45b
0xf44d  2  xor  edx, edx
0xf44f  3  mov  ecx, r15d
0xf452  4  lea  r8d, [rdx + 2]
0xf456  5  call  0x12bc7
0xf45b  3  mov  ecx, r15d
0xf45e  4  mov  qword ptr [rbp - 0x30], rdi
0xf462  5  call  0x11527
0xf467  7  lea  rdx, [rip + 0x12bc2]
0xf46e  2  test  eax, eax
0xf470  6  je  0xf58a
0xf476  4  mov  rax, qword ptr [rdx + r12*8]
0xf47a  5  cmp  byte ptr [rax + r13*8 + 0x38], dil
0xf47f  6  jge  0xf58a
0xf485  4  cmp  byte ptr [rbx + 0x28], dil
0xf489  2  jne  0xf49a
0xf48b  3  mov  rcx, rbx
0xf48e  5  call  0x6c63
0xf493  7  lea  rdx, [rip + 0x12b96]
0xf49a  4  mov  rax, qword ptr [rbx + 0x18]
0xf49e  7  cmp  qword ptr [rax + 0x138], rdi
0xf4a5  2  jne  0xf4b6
0xf4a7  4  mov  rax, qword ptr [rdx + r12*8]
0xf4ab  5  cmp  byte ptr [rax + r13*8 + 0x39], dil
0xf4b0  6  je  0xf58a
0xf4b6  4  mov  rcx, qword ptr [rdx + r12*8]
0xf4ba  4  lea  rdx, [rbp - 0x20]
0xf4be  5  mov  rcx, qword ptr [rcx + r13*8 + 0x28]
0xf4c3  6  call  qword ptr [rip + 0x6d4f]
0xf4c9  2  test  eax, eax
0xf4cb  6  je  0xf583
0xf4d1  4  movsx  ecx, byte ptr [rbp - 0x48]
0xf4d5  2  test  ecx, ecx
0xf4d7  6  je  0xf560
0xf4dd  3  sub  ecx, 1
0xf4e0  2  je  0xf4eb
0xf4e2  3  cmp  ecx, 1
0xf4e5  6  jne  0xf624
0xf4eb  4  lea  r12, [rsi + r14]
0xf4ef  4  mov  qword ptr [rbp - 0x40], rdi
0xf4f3  3  mov  r15, rsi
0xf4f6  3  cmp  rsi, r12
0xf4f9  2  jae  0xf557
0xf4fb  4  mov  r14d, dword ptr [rbp - 0x3c]
0xf4ff  4  movzx  eax, word ptr [r15]
0xf503  3  movzx  ecx, ax
0xf506  4  mov  word ptr [rbp - 0x48], ax
0xf50a  5  call  0x12bcf
0xf50f  4  movzx  ecx, word ptr [rbp - 0x48]
0xf513  3  cmp  ax, cx
0xf516  2  jne  0xf54e
0xf518  4  add  r14d, 2
0xf51c  4  mov  dword ptr [rbp - 0x3c], r14d
0xf520  4  cmp  cx, 0xa
0xf524  2  jne  0xf543
0xf526  5  mov  ecx, 0xd
0xf52b  5  call  0x12bcf
0xf530  5  mov  ecx, 0xd
0xf535  3  cmp  ax, cx
0xf538  2  jne  0xf54e
0xf53a  3  inc  r14d
0xf53d  4  mov  dword ptr [rbp - 0x3c], r14d
0xf541  2  inc  edi
0xf543  4  add  r15, 2
0xf547  3  cmp  r15, r12
0xf54a  2  jae  0xf557
0xf54c  2  jmp  0xf4ff
0xf54e  6  call  qword ptr [rip + 0x6b2c]
0xf554  3  mov  dword ptr [rbp - 0x40], eax
0xf557  4  mov  r12, qword ptr [rbp - 0x18]
0xf55b  5  jmp  0xf61a
0xf560  3  mov  r9d, r14d
0xf563  5  mov  qword ptr [rsp + 0x20], rbx
0xf568  3  mov  r8, rsi
0xf56b  4  lea  rcx, [rbp - 0x40]
0xf56f  3  mov  edx, r15d
0xf572  5  call  0xea7f
0xf577  4  movsd  xmm0, qword ptr [rax]
0xf57b  3  mov  edi, dword ptr [rax + 8]
0xf57e  5  jmp  0xf61f
0xf583  7  lea  rdx, [rip + 0x12aa6]
0xf58a  4  mov  rcx, qword ptr [rdx + r12*8]
0xf58e  5  cmp  byte ptr [rcx + r13*8 + 0x38], dil
0xf593  2  jge  0xf5e7
0xf595  4  movsx  ecx, byte ptr [rbp - 0x48]
0xf599  2  test  ecx, ecx
0xf59b  2  je  0xf5d3
0xf59d  3  sub  ecx, 1
0xf5a0  2  je  0xf5bf
0xf5a2  3  cmp  ecx, 1
0xf5a5  6  jne  0xf62b
0xf5ab  3  mov  r9d, r14d
0xf5ae  4  lea  rcx, [rbp - 0x40]
0xf5b2  3  mov  r8, rsi
0xf5b5  3  mov  edx, r15d
0xf5b8  5  call  0xeffb
0xf5bd  2  jmp  0xf577
0xf5bf  3  mov  r9d, r14d
0xf5c2  4  lea  rcx, [rbp - 0x40]
0xf5c6  3  mov  r8, rsi
0xf5c9  3  mov  edx, r15d
0xf5cc  5  call  0xf117
0xf5d1  2  jmp  0xf577
0xf5d3  3  mov  r9d, r14d
0xf5d6  4  lea  rcx, [rbp - 0x40]
0xf5da  3  mov  r8, rsi
0xf5dd  3  mov  edx, r15d
0xf5e0  5  call  0xeef7
0xf5e5  2  jmp  0xf577
0xf5e7  5  mov  rcx, qword ptr [rcx + r13*8 + 0x28]
0xf5ec  4  lea  r9, [rbp - 0x3c]
0xf5f0  2  xor  eax, eax
0xf5f2  3  mov  r8d, r14d
0xf5f5  5  and  qword ptr [rsp + 0x20], rax
0xf5fa  3  mov  rdx, rsi
0xf5fd  4  mov  qword ptr [rbp - 0x40], rax
0xf601  3  mov  dword ptr [rbp - 0x38], eax
0xf604  6  call  qword ptr [rip + 0x6afe]
0xf60a  2  test  eax, eax
0xf60c  2  jne  0xf617
0xf60e  6  call  qword ptr [rip + 0x6a6c]
0xf614  3  mov  dword ptr [rbp - 0x40], eax
0xf617  3  mov  edi, dword ptr [rbp - 0x38]
0xf61a  5  movsd  xmm0, qword ptr [rbp - 0x40]
0xf61f  5  movsd  qword ptr [rbp - 0x30], xmm0
0xf624  7  lea  rdx, [rip + 0x12a05]
0xf62b  4  mov  rax, qword ptr [rbp - 0x30]
0xf62f  4  shr  rax, 0x20
0xf633  2  test  eax, eax
0xf635  2  jne  0xf693
0xf637  3  mov  eax, dword ptr [rbp - 0x30]
0xf63a  2  test  eax, eax
0xf63c  2  je  0xf66a
0xf63e  3  cmp  eax, 5
0xf641  2  jne  0xf65a
0xf643  4  mov  byte ptr [rbx + 0x30], 1
0xf647  7  mov  dword ptr [rbx + 0x2c], 9
0xf64e  4  mov  byte ptr [rbx + 0x38], 1
0xf652  3  mov  dword ptr [rbx + 0x34], eax
0xf655  5  jmp  0xf406
0xf65a  3  mov  ecx, dword ptr [rbp - 0x30]
0xf65d  3  mov  rdx, rbx
0xf660  5  call  0x8a2b
0xf665  5  jmp  0xf406
0xf66a  4  mov  rax, qword ptr [rdx + r12*8]
0xf66e  6  test  byte ptr [rax + r13*8 + 0x38], 0x40
0xf674  2  je  0xf67b
0xf676  3  cmp  byte ptr [rsi], 0x1a
0xf679  2  je  0xf69a
0xf67b  4  and  dword ptr [rbx + 0x34], 0
0xf67f  4  mov  byte ptr [rbx + 0x30], 1
0xf683  7  mov  dword ptr [rbx + 0x2c], 0x1c
0xf68a  4  mov  byte ptr [rbx + 0x38], 1
0xf68e  5  jmp  0xf406
0xf693  3  mov  eax, dword ptr [rbp - 0x2c]
0xf696  2  sub  eax, edi
0xf698  2  jmp  0xf69c
0xf69a  2  xor  eax, eax
0xf69c  4  add  rsp, 0x78
0xf6a0  2  pop  r15
0xf6a2  2  pop  r14
0xf6a4  2  pop  r13
0xf6a6  2  pop  r12
0xf6a8  1  pop  rdi
0xf6a9  1  pop  rsi
0xf6aa  1  pop  rbx
0xf6ab  1  pop  rbp
0xf6ac  1  ret  
0xf6ad  1  int3  
0xf6ae  1  int3  
0xf6af  5  mov  qword ptr [rsp + 8], rbx
0xf6b4  5  mov  qword ptr [rsp + 0x10], rbp
0xf6b9  5  mov  qword ptr [rsp + 0x18], rsi
0xf6be  1  push  rdi
0xf6bf  4  sub  rsp, 0x20
0xf6c3  5  cmp  dword ptr [rsp + 0x50], 0
0xf6c8  3  mov  edi, r9d
0xf6cb  3  mov  esi, r8d
0xf6ce  3  mov  rbx, rdx
0xf6d1  3  mov  rbp, rcx
0xf6d4  2  jne  0xf6e1
0xf6d6  3  cmp  byte ptr [rdx], 0x35
0xf6d9  3  setge  al
0xf6dc  5  jmp  0xf76a
0xf6e1  5  call  0x11047
0xf6e6  2  test  eax, eax
0xf6e8  2  jne  0xf71a
0xf6ea  3  cmp  byte ptr [rbx], 0x35
0xf6ed  3  lea  ecx, [rax + 1]
0xf6f0  2  jg  0xf6fc
0xf6f2  2  jl  0xf768
0xf6f4  4  lea  rax, [rbx + 1]
0xf6f8  2  test  edi, edi
0xf6fa  2  jne  0xf703
0xf6fc  2  mov  al, cl
0xf6fe  2  jmp  0xf76a
0xf700  3  add  rax, rcx
0xf703  2  mov  dl, byte ptr [rax]
0xf705  3  cmp  dl, 0x30
0xf708  2  je  0xf700
0xf70a  2  test  dl, dl
0xf70c  2  jne  0xf6fc
0xf70e  3  cmp  rbx, rbp
0xf711  2  je  0xf768
0xf713  3  mov  al, byte ptr [rbx - 1]
0xf716  2  and  al, cl
0xf718  2  jmp  0xf76a
0xf71a  5  cmp  eax, 0x200
0xf71f  2  jne  0xf742
0xf721  5  mov  ecx, 1
0xf726  2  test  edi, edi
0xf728  2  je  0xf739
0xf72a  2  jmp  0xf72f
0xf72c  3  add  rbx, rcx
0xf72f  2  mov  al, byte ptr [rbx]
0xf731  2  cmp  al, 0x30
0xf733  2  je  0xf72c
0xf735  2  test  al, al
0xf737  2  je  0xf73e
0xf739  3  cmp  esi, 0x2d
0xf73c  2  jne  0xf6fc
0xf73e  2  xor  cl, cl
0xf740  2  jmp  0xf6fc
0xf742  5  cmp  eax, 0x100
0xf747  2  jne  0xf768
0xf749  5  mov  ecx, 1
0xf74e  2  test  edi, edi
0xf750  2  je  0xf761
0xf752  2  jmp  0xf757
0xf754  3  add  rbx, rcx
0xf757  2  mov  al, byte ptr [rbx]
0xf759  2  cmp  al, 0x30
0xf75b  2  je  0xf754
0xf75d  2  test  al, al
0xf75f  2  je  0xf73e
0xf761  3  cmp  esi, 0x2d
0xf764  2  je  0xf6fc
0xf766  2  jmp  0xf73e
0xf768  2  xor  al, al
0xf76a  5  mov  rbx, qword ptr [rsp + 0x30]
0xf76f  5  mov  rbp, qword ptr [rsp + 0x38]
0xf774  5  mov  rsi, qword ptr [rsp + 0x40]
0xf779  4  add  rsp, 0x20
0xf77d  1  pop  rdi
0xf77e  1  ret  
0xf77f  5  mov  qword ptr [rsp + 8], rbx
0xf784  5  mov  qword ptr [rsp + 0x10], rbp
0xf789  5  mov  qword ptr [rsp + 0x18], rsi
0xf78e  1  push  rdi
0xf78f  4  sub  rsp, 0x30
0xf793  3  mov  rdi, r9
0xf796  3  mov  rsi, rcx
0xf799  3  test  rcx, rcx
0xf79c  2  jne  0xf7d0
0xf79e  5  mov  ebx, 0x16
0xf7a3  5  mov  rax, qword ptr [rsp + 0x70]
0xf7a8  3  xor  r9d, r9d
0xf7ab  5  mov  qword ptr [rsp + 0x28], rax
0xf7b0  3  xor  r8d, r8d
0xf7b3  6  and  qword ptr [rsp + 0x20], 0
0xf7b9  2  xor  edx, edx
0xf7bb  2  xor  ecx, ecx
0xf7bd  3  mov  dword ptr [rax + 0x2c], ebx
0xf7c0  4  mov  byte ptr [rax + 0x30], 1
0xf7c4  5  call  0x8867
0xf7c9  2  mov  eax, ebx
0xf7cb  5  jmp  0xf87a
0xf7d0  3  test  rdx, rdx
0xf7d3  2  je  0xf79e
0xf7d5  2  xor  eax, eax
0xf7d7  3  mov  byte ptr [rcx], 0
0xf7da  3  test  r8d, r8d
0xf7dd  4  cmovg  eax, r8d
0xf7e1  2  inc  eax
0xf7e3  2  cdqe  
0xf7e5  3  cmp  rdx, rax
0xf7e8  2  ja  0xf7f1
0xf7ea  5  mov  ebx, 0x22
0xf7ef  2  jmp  0xf7a3
0xf7f1  3  test  rdi, rdi
0xf7f4  2  je  0xf79e
0xf7f6  4  mov  rcx, qword ptr [r9 + 8]
0xf7fa  4  lea  rbx, [rsi + 1]
0xf7fe  3  mov  rdx, rcx
0xf801  3  mov  byte ptr [rsi], 0x30
0xf804  2  jmp  0xf81b
0xf806  2  mov  al, byte ptr [rdx]
0xf808  2  test  al, al
0xf80a  2  je  0xf811
0xf80c  3  inc  rdx
0xf80f  2  jmp  0xf813
0xf811  2  mov  al, 0x30
0xf813  2  mov  byte ptr [rbx], al
0xf815  3  inc  rbx
0xf818  3  dec  r8d
0xf81b  3  test  r8d, r8d
0xf81e  2  jg  0xf806
0xf820  3  mov  byte ptr [rbx], 0
0xf823  2  js  0xf850
0xf825  4  mov  eax, dword ptr [rsp + 0x68]
0xf829  5  mov  r9d, dword ptr [rsp + 0x60]
0xf82e  3  mov  r8d, dword ptr [rdi]
0xf831  4  mov  dword ptr [rsp + 0x20], eax
0xf835  5  call  0xf6af
0xf83a  2  test  al, al
0xf83c  2  je  0xf850
0xf83e  2  jmp  0xf843
0xf840  3  mov  byte ptr [rbx], 0x30
0xf843  3  dec  rbx
0xf846  2  mov  al, byte ptr [rbx]
0xf848  2  cmp  al, 0x39
0xf84a  2  je  0xf840
0xf84c  2  inc  al
0xf84e  2  mov  byte ptr [rbx], al
0xf850  3  cmp  byte ptr [rsi], 0x31
0xf853  2  jne  0xf85a
0xf855  3  inc  dword ptr [rdi + 4]
0xf858  2  jmp  0xf878
0xf85a  4  or  r8, 0xffffffffffffffff
0xf85e  3  inc  r8
0xf861  6  cmp  byte ptr [r8 + rsi + 1], 0
0xf867  2  jne  0xf85e
0xf869  3  inc  r8
0xf86c  4  lea  rdx, [rsi + 1]
0xf870  3  mov  rcx, rsi
0xf873  5  call  0x2dd3
0xf878  2  xor  eax, eax
0xf87a  5  mov  rbx, qword ptr [rsp + 0x40]
0xf87f  5  mov  rbp, qword ptr [rsp + 0x48]
0xf884  5  mov  rsi, qword ptr [rsp + 0x50]
0xf889  4  add  rsp, 0x30
0xf88d  1  pop  rdi
0xf88e  1  ret  
0xf88f  1  int3  
0xf890  1  int3  
0xf891  1  int3  
0xf892  1  int3  
0xf893  5  mov  qword ptr [rsp + 0x10], rdx
0xf898  1  push  rbx
0xf899  1  push  rbp
0xf89a  1  push  rsi
0xf89b  1  push  rdi
0xf89c  2  push  r12
0xf89e  2  push  r14
0xf8a0  2  push  r15
0xf8a2  7  sub  rsp, 0x220
0xf8a9  3  mov  r10d, dword ptr [rcx]
0xf8ac  3  mov  r15, rdx
0xf8af  3  mov  rsi, rcx
0xf8b2  3  test  r10d, r10d
0xf8b5  6  je  0xfd1b
0xf8bb  2  mov  edi, dword ptr [rdx]
0xf8bd  2  test  edi, edi
0xf8bf  6  je  0xfd1b
0xf8c5  3  dec  r10d
0xf8c8  3  lea  ebp, [rdi - 1]
0xf8cb  2  test  ebp, ebp
0xf8cd  6  jne  0xf9ce
0xf8d3  4  mov  r12d, dword ptr [rdx + 4]
0xf8d7  2  xor  ebp, ebp
0xf8d9  4  cmp  r12d, 1
0xf8dd  2  jne  0xf905
0xf8df  3  mov  ebx, dword ptr [rcx + 4]
0xf8e2  5  lea  r8, [rsp + 0x44]
0xf8e7  4  add  rcx, 4
0xf8eb  2  mov  dword ptr [rsi], ebp
0xf8ed  3  xor  r9d, r9d
0xf8f0  4  mov  dword ptr [rsp + 0x40], ebp
0xf8f4  5  mov  edx, 0x1cc
0xf8f9  5  call  0x10fbf
0xf8fe  2  mov  eax, ebx
0xf900  5  jmp  0xfd1d
0xf905  3  test  r10d, r10d
0xf908  2  jne  0xf947
0xf90a  3  mov  edi, dword ptr [rcx + 4]
0xf90d  5  lea  r8, [rsp + 0x44]
0xf912  2  mov  dword ptr [rcx], ebp
0xf914  3  xor  r9d, r9d
0xf917  4  add  rcx, 4
0xf91b  4  mov  dword ptr [rsp + 0x40], ebp
0xf91f  5  mov  edx, 0x1cc
0xf924  5  call  0x10fbf
0xf929  2  xor  edx, edx
0xf92b  2  mov  eax, edi
0xf92d  3  div  r12d
0xf930  2  mov  eax, edi
0xf932  2  test  edx, edx
0xf934  3  mov  dword ptr [rsi + 4], edx
0xf937  4  setne  bpl
0xf93b  2  xor  edx, edx
0xf93d  3  div  r12d
0xf940  2  mov  dword ptr [rsi], ebp
0xf942  5  jmp  0xfd1d
0xf947  6  mov  r15d, 0xffffffff
0xf94d  3  mov  r14, rbp
0xf950  3  mov  rdi, rbp
0xf953  3  cmp  r10d, r15d
0xf956  2  je  0xf993
0xf958  3  mov  r9, r12
0xf95b  8  nop  dword ptr [rax + rax]
0xf963  5  mov  r8d, dword ptr [rsi + r10*4 + 4]
0xf968  2  xor  edx, edx
0xf96a  4  shl  rdi, 0x20
0xf96e  3  add  r10d, r15d
0xf971  3  or  r8, rdi
0xf974  4  shl  r14, 0x20
0xf978  3  mov  rax, r8
0xf97b  3  div  r9
0xf97e  2  xor  edx, edx
0xf980  2  mov  ecx, eax
0xf982  3  mov  rax, r8
0xf985  3  div  r9
0xf988  3  add  r14, rcx
0xf98b  3  mov  rdi, rdx
0xf98e  3  cmp  r10d, r15d
0xf991  2  jne  0xf963
0xf993  3  xor  r9d, r9d
0xf996  4  mov  dword ptr [rsp + 0x40], ebp
0xf99a  5  lea  r8, [rsp + 0x44]
0xf99f  2  mov  dword ptr [rsi], ebp
0xf9a1  5  mov  edx, 0x1cc
0xf9a6  4  lea  rcx, [rsi + 4]
0xf9aa  5  call  0x10fbf
0xf9af  3  mov  rcx, rdi
0xf9b2  3  mov  dword ptr [rsi + 4], edi
0xf9b5  4  shr  rcx, 0x20
0xf9b9  3  mov  rax, r14
0xf9bc  2  test  ecx, ecx
0xf9be  3  mov  dword ptr [rsi + 8], ecx
0xf9c1  4  setne  bpl
0xf9c5  2  inc  ebp
0xf9c7  2  mov  dword ptr [rsi], ebp
0xf9c9  5  jmp  0xfd1d
0xf9ce  3  cmp  ebp, r10d
0xf9d1  6  ja  0xfd1b
0xf9d7  3  mov  r8d, r10d
0xf9da  3  movsxd  rdx, r10d
0xf9dd  3  sub  r8d, ebp
0xf9e0  3  mov  r9d, r10d
0xf9e3  3  movsxd  rbx, r8d
0xf9e6  3  cmp  rdx, rbx
0xf9e9  2  jl  0xfa34
0xf9eb  4  add  rcx, 4
0xf9ef  8  lea  rax, [rbx*4]
0xf9f7  3  mov  r11, r15
0xf9fa  3  sub  r11, rax
0xf9fd  3  sub  r11, rsi
0xfa00  4  lea  rcx, [rcx + rdx*4]
0xfa04  2  mov  eax, dword ptr [rcx]
0xfa06  4  cmp  dword ptr [r11 + rcx], eax
0xfa0a  2  jne  0xfa1d
0xfa0c  3  dec  r9d
0xfa0f  3  dec  rdx
0xfa12  4  sub  rcx, 4
0xfa16  3  cmp  rdx, rbx
0xfa19  2  jge  0xfa04
0xfa1b  2  jmp  0xfa34
0xfa1d  3  mov  eax, r9d
0xfa20  3  sub  eax, r8d
0xfa23  3  movsxd  rdx, eax
0xfa26  3  movsxd  rax, r9d
0xfa29  4  mov  ecx, dword ptr [rsi + rax*4 + 4]
0xfa2d  5  cmp  dword ptr [r15 + rdx*4 + 4], ecx
0xfa32  2  jae  0xfa37
0xfa34  3  inc  r8d
0xfa37  3  test  r8d, r8d
0xfa3a  6  je  0xfd1b
0xfa40  5  mov  r9d, dword ptr [r15 + rbp*4 + 4]
0xfa45  3  lea  eax, [rdi - 2]
0xfa48  5  mov  r11d, dword ptr [r15 + rax*4 + 4]
0xfa4d  2  xor  ebp, ebp
0xfa4f  4  bsr  eax, r9d
0xfa53  8  mov  dword ptr [rsp + 0x270], r11d
0xfa5b  2  je  0xfa7b
0xfa5d  5  mov  ebx, 0x1f
0xfa62  6  mov  r14d, 0x20
0xfa68  2  sub  ebx, eax
0xfa6a  3  sub  r14d, ebx
0xfa6d  8  mov  dword ptr [rsp + 0x260], r14d
0xfa75  2  test  ebx, ebx
0xfa77  2  je  0xfac7
0xfa79  2  jmp  0xfa8a
0xfa7b  5  mov  ebx, 0x20
0xfa80  7  mov  dword ptr [rsp + 0x260], ebp
0xfa87  3  mov  r14d, ebp
0xfa8a  3  mov  eax, r9d
0xfa8d  3  mov  edx, r11d
0xfa90  3  mov  ecx, r14d
0xfa93  2  shr  edx, cl
0xfa95  2  mov  ecx, ebx
0xfa97  2  shl  eax, cl
0xfa99  3  mov  r9d, edx
0xfa9c  3  shl  r11d, cl
0xfa9f  3  or  r9d, eax
0xfaa2  8  mov  dword ptr [rsp + 0x270], r11d
0xfaaa  3  cmp  edi, 2
0xfaad  2  jbe  0xfac7
0xfaaf  3  lea  eax, [rdi - 3]
0xfab2  3  mov  ecx, r14d
0xfab5  5  mov  eax, dword ptr [r15 + rax*4 + 4]
0xfaba  2  shr  eax, cl
0xfabc  3  or  r11d, eax
0xfabf  8  mov  dword ptr [rsp + 0x270], r11d
0xfac7  4  lea  r12d, [r8 - 1]
0xfacb  5  mov  qword ptr [rsp + 0x30], rbp
0xfad0  3  mov  r11, rbp
0xfad3  3  test  r12d, r12d
0xfad6  6  js  0xfcdc
0xfadc  3  mov  eax, r14d
0xfadf  6  mov  r15d, 0xffffffff
0xfae5  5  mov  qword ptr [rsp + 0x38], rax
0xfaea  3  mov  eax, r9d
0xfaed  8  mov  qword ptr [rsp + 0x218], r13
0xfaf5  4  lea  r13d, [r12 + rdi]
0xfaf9  5  mov  qword ptr [rsp + 0x28], rax
0xfafe  5  nop  dword ptr [rax + rax]
0xfb03  3  cmp  r13d, r10d
0xfb06  2  ja  0xfb0f
0xfb08  5  mov  edx, dword ptr [rsi + r13*4 + 4]
0xfb0d  2  jmp  0xfb11
0xfb0f  2  mov  edx, ebp
0xfb11  7  mov  dword ptr [rsp + 0x278], edx
0xfb18  4  lea  eax, [r13 - 1]
0xfb1c  4  mov  ecx, dword ptr [rsi + rax*4 + 4]
0xfb20  4  lea  eax, [r13 - 2]
0xfb24  5  mov  r11d, dword ptr [rsi + rax*4 + 4]
0xfb29  5  mov  qword ptr [rsp + 0x20], rcx
0xfb2e  4  mov  dword ptr [rsp + 0x24], edx
0xfb32  2  test  ebx, ebx
0xfb34  2  je  0xfb69
0xfb36  5  mov  rcx, qword ptr [rsp + 0x38]
0xfb3b  3  mov  r8d, r11d
0xfb3e  5  mov  rax, qword ptr [rsp + 0x20]
0xfb43  3  shr  r8, cl
0xfb46  2  mov  ecx, ebx
0xfb48  3  shl  rax, cl
0xfb4b  3  or  r8, rax
0xfb4e  3  shl  r11d, cl
0xfb51  4  cmp  r13d, 3
0xfb55  2  jb  0xfb6e
0xfb57  4  lea  eax, [r13 - 3]
0xfb5b  3  mov  ecx, r14d
0xfb5e  4  mov  eax, dword ptr [rsi + rax*4 + 4]
0xfb62  2  shr  eax, cl
0xfb64  3  or  r11d, eax
0xfb67  2  jmp  0xfb6e
0xfb69  5  mov  r8, qword ptr [rsp + 0x20]
0xfb6e  5  mov  rcx, qword ptr [rsp + 0x28]
0xfb73  2  xor  edx, edx
0xfb75  3  mov  rax, r8
0xfb78  3  div  rcx
0xfb7b  2  xor  edx, edx
0xfb7d  3  mov  r9, rax
0xfb80  3  mov  rax, r8
0xfb83  3  div  rcx
0xfb86  3  mov  r8d, edx
0xfb89  3  cmp  r9, r15
0xfb8c  2  jbe  0xfba5
0xfb8e  10  movabs  rax, 0xffffffff00000001
0xfb98  3  add  rax, r9
0xfb9b  3  mov  r9, r15
0xfb9e  4  imul  rax, rcx
0xfba2  3  add  r8, rax
0xfba5  3  cmp  r8, r15
0xfba8  2  ja  0xfbe8
0xfbaa  7  mov  edx, dword ptr [rsp + 0x270]
0xfbb1  3  mov  r14, rcx
0xfbb4  2  mov  eax, edx
0xfbb6  4  imul  rax, r9
0xfbba  9  nop  word ptr [rax + rax]
0xfbc3  3  mov  rcx, r8
0xfbc6  4  shl  rcx, 0x20
0xfbca  3  or  rcx, r11
0xfbcd  3  cmp  rax, rcx
0xfbd0  2  jbe  0xfbe0
0xfbd2  3  dec  r9
0xfbd5  3  sub  rax, rdx
0xfbd8  3  add  r8, r14
0xfbdb  3  cmp  r8, r15
0xfbde  2  jbe  0xfbc3
0xfbe0  8  mov  r14d, dword ptr [rsp + 0x260]
0xfbe8  3  test  r9, r9
0xfbeb  6  je  0xfcb3
0xfbf1  3  mov  r10, rbp
0xfbf4  3  mov  r11d, ebp
0xfbf7  2  test  edi, edi
0xfbf9  2  je  0xfc5f
0xfbfb  8  mov  r14, qword ptr [rsp + 0x268]
0xfc03  8  mov  r15d, dword ptr [rsp + 0x260]
0xfc0b  4  add  r14, 4
0xfc0f  4  nop  dword ptr [rax]
0xfc13  3  mov  eax, dword ptr [r14]
0xfc16  4  lea  r14, [r14 + 4]
0xfc1a  4  imul  rax, r9
0xfc1e  3  add  r10, rax
0xfc21  4  lea  eax, [r11 + r12]
0xfc25  3  mov  r8d, r10d
0xfc28  2  mov  ecx, eax
0xfc2a  4  shr  r10, 0x20
0xfc2e  4  mov  eax, dword ptr [rsi + rax*4 + 4]
0xfc32  3  mov  rdx, r10
0xfc35  3  inc  r10
0xfc38  3  cmp  eax, r8d
0xfc3b  4  cmovae  r10, rdx
0xfc3f  3  sub  eax, r8d
0xfc42  3  inc  r11d
0xfc45  4  mov  dword ptr [rsi + rcx*4 + 4], eax
0xfc49  3  cmp  r11d, edi
0xfc4c  2  jb  0xfc13
0xfc4e  3  mov  r14d, r15d
0xfc51  8  mov  dword ptr [rsp + 0x260], r15d
0xfc59  6  mov  r15d, 0xffffffff
0xfc5f  8  mov  r11, qword ptr [rsp + 0x268]
0xfc67  7  mov  eax, dword ptr [rsp + 0x278]
0xfc6e  4  add  r11, 4
0xfc72  3  cmp  rax, r10
0xfc75  2  jae  0xfcaf
0xfc77  3  mov  r10d, ebp
0xfc7a  2  test  edi, edi
0xfc7c  2  je  0xfcac
0xfc7e  3  mov  r8, rbp
0xfc81  2  nop  
0xfc83  4  lea  eax, [r10 + r12]
0xfc87  3  inc  r10d
0xfc8a  4  mov  ecx, dword ptr [rsi + rax*4 + 4]
0xfc8e  4  lea  rdx, [rsi + rax*4]
0xfc92  3  mov  eax, dword ptr [r11]
0xfc95  4  lea  r11, [r11 + 4]
0xfc99  3  add  r8, rax
0xfc9c  3  add  r8, rcx
0xfc9f  4  mov  dword ptr [rdx + 4], r8d
0xfca3  4  shr  r8, 0x20
0xfca7  3  cmp  r10d, edi
0xfcaa  2  jb  0xfc83
0xfcac  3  dec  r9
0xfcaf  4  lea  r10d, [r13 - 1]
0xfcb3  5  mov  r11, qword ptr [rsp + 0x30]
0xfcb8  3  dec  r13d
0xfcbb  4  shl  r11, 0x20
0xfcbf  3  mov  eax, r9d
0xfcc2  3  add  r11, rax
0xfcc5  4  sub  r12d, 1
0xfcc9  5  mov  qword ptr [rsp + 0x30], r11
0xfcce  6  jns  0xfb03
0xfcd4  8  mov  r13, qword ptr [rsp + 0x218]
0xfcdc  3  inc  r10d
0xfcdf  3  mov  ecx, r10d
0xfce2  3  cmp  r10d, dword ptr [rsi]
0xfce5  2  jae  0xfcf3
0xfce7  2  mov  eax, ecx
0xfce9  2  inc  ecx
0xfceb  4  mov  dword ptr [rsi + rax*4 + 4], ebp
0xfcef  2  cmp  ecx, dword ptr [rsi]
0xfcf1  2  jb  0xfce7
0xfcf3  3  mov  dword ptr [rsi], r10d
0xfcf6  3  test  r10d, r10d
0xfcf9  2  je  0xfd16
0xfcfb  8  nop  dword ptr [rax + rax]
0xfd03  4  lea  edx, [r10 - 1]
0xfd07  3  mov  r10d, edx
0xfd0a  4  cmp  dword ptr [rsi + rdx*4 + 4], ebp
0xfd0e  2  jne  0xfd16
0xfd10  2  mov  dword ptr [rsi], edx
0xfd12  2  test  edx, edx
0xfd14  2  jne  0xfd03
0xfd16  3  mov  rax, r11
0xfd19  2  jmp  0xfd1d
0xfd1b  2  xor  eax, eax
0xfd1d  7  add  rsp, 0x220
0xfd24  2  pop  r15
0xfd26  2  pop  r14
0xfd28  2  pop  r12
0xfd2a  1  pop  rdi
0xfd2b  1  pop  rsi
0xfd2c  1  pop  rbp
0xfd2d  1  pop  rbx
0xfd2e  1  ret  
0xfd2f  2  push  rbp
0xfd31  1  push  rbx
0xfd32  1  push  rsi
0xfd33  1  push  rdi
0xfd34  2  push  r12
0xfd36  2  push  r14
0xfd38  2  push  r15
0xfd3a  8  lea  rbp, [rsp - 0x6f0]
0xfd42  7  sub  rsp, 0x7f0
0xfd49  7  mov  rax, qword ptr [rip + 0x112e8]
0xfd50  3  xor  rax, rsp
0xfd53  7  mov  qword ptr [rbp + 0x6e0], rax
0xfd5a  7  mov  r14, qword ptr [rbp + 0x750]
0xfd61  3  mov  r12, r9
0xfd64  5  mov  qword ptr [rsp + 0x50], rcx
0xfd69  2  mov  esi, edx
0xfd6b  5  lea  rcx, [rsp + 0x70]
0xfd70  4  mov  qword ptr [rbp - 0x78], r14
0xfd74  4  mov  qword ptr [rbp - 0x68], r9
0xfd78  5  mov  dword ptr [rsp + 0x64], r8d
0xfd7d  5  call  0x12c6f
0xfd82  4  mov  eax, dword ptr [rsp + 0x70]
0xfd86  6  mov  r15d, 1
0xfd8c  3  and  eax, 0x1f
0xfd8f  2  cmp  al, 0x1f
0xfd91  2  jne  0xfd9a
0xfd93  5  mov  byte ptr [rsp + 0x78], 0
0xfd98  2  jmp  0xfda9
0xfd9a  5  lea  rcx, [rsp + 0x70]
0xfd9f  5  call  0x12ce7
0xfda4  5  mov  byte ptr [rsp + 0x78], r15b
0xfda9  5  mov  rbx, qword ptr [rsp + 0x50]
0xfdae  5  mov  edi, 0x20
0xfdb3  2  mov  eax, edi
0xfdb5  5  mov  qword ptr [r12 + 8], r14
0xfdba  3  test  rbx, rbx
0xfdbd  3  lea  ecx, [rdi + 0xd]
0xfdc0  3  cmovs  eax, ecx
0xfdc3  3  xor  r8d, r8d
0xfdc6  2  xor  edx, edx
0xfdc8  4  mov  dword ptr [r12], eax
0xfdcc  4  lea  rcx, [rbp - 0x80]
0xfdd0  5  call  0x12c0b
0xfdd5  3  mov  rax, rbx
0xfdd8  5  mov  edx, 0x7ff
0xfddd  4  shr  rax, 0x34
0xfde1  10  movabs  rcx, 0xfffffffffffff
0xfdeb  3  and  rax, rdx
0xfdee  2  jne  0xfe11
0xfdf0  3  test  rcx, rbx
0xfdf3  2  je  0xfe02
0xfdf5  7  test  dword ptr [rbp - 0x80], 0x1000000
0xfdfc  6  je  0xfec5
0xfe02  6  and  dword ptr [r12 + 4], 0
0xfe08  7  lea  r8, [rip + 0xcb1d]
0xfe0f  2  jmp  0xfe71
0xfe11  3  cmp  rax, rdx
0xfe14  6  jne  0xfec5
0xfe1a  3  mov  rax, rbx
0xfe1d  3  and  rax, rcx
0xfe20  2  jne  0xfe27
0xfe22  3  mov  eax, r15d
0xfe25  2  jmp  0xfe51
0xfe27  3  test  rbx, rbx
0xfe2a  2  jns  0xfe42
0xfe2c  10  movabs  rcx, 0x8000000000000
0xfe36  3  cmp  rax, rcx
0xfe39  2  jne  0xfe42
0xfe3b  5  mov  eax, 4
0xfe40  2  jmp  0xfe51
0xfe42  3  mov  rax, rbx
0xfe45  4  shr  rax, 0x33
0xfe49  2  not  eax
0xfe4b  3  and  eax, r15d
0xfe4e  3  or  eax, 2
0xfe51  5  mov  dword ptr [r12 + 4], r15d
0xfe56  3  sub  eax, r15d
0xfe59  2  je  0xfe9f
0xfe5b  3  sub  eax, r15d
0xfe5e  2  je  0xfe96
0xfe60  3  sub  eax, r15d
0xfe63  2  je  0xfe8d
0xfe65  3  cmp  eax, r15d
0xfe68  2  jne  0xfec5
0xfe6a  7  lea  r8, [rip + 0xcad7]
0xfe71  7  mov  rdx, qword ptr [rbp + 0x758]
0xfe78  3  mov  rcx, r14
0xfe7b  5  call  0x8427
0xfe80  2  test  eax, eax
0xfe82  6  jne  0x10fa7
0xfe88  5  jmp  0x10f72
0xfe8d  7  lea  r8, [rip + 0xcaac]
0xfe94  2  jmp  0xfe71
0xfe96  7  lea  r8, [rip + 0xca9b]
0xfe9d  2  jmp  0xfe71
0xfe9f  7  mov  rdx, qword ptr [rbp + 0x758]
0xfea6  7  lea  r8, [rip + 0xca83]
0xfead  3  mov  rcx, r14
0xfeb0  5  call  0x8427
0xfeb5  2  test  eax, eax
0xfeb7  6  jne  0x10fa7
0xfebd  3  xor  r15d, r15d
0xfec0  5  jmp  0x10f72
0xfec5  10  movabs  rax, 0x7fffffffffffffff
0xfecf  5  lea  rcx, [rsp + 0x68]
0xfed4  3  and  rbx, rax
0xfed7  3  xor  r8d, r8d
0xfeda  5  mov  qword ptr [rsp + 0x50], rbx
0xfedf  2  xor  edx, edx
0xfee1  5  mov  ebx, 0x8001f
0xfee6  4  mov  dword ptr [rsp + 0x6c], ebx
0xfeea  5  call  0x12c0b
0xfeef  5  mov  r8d, dword ptr [rsp + 0x6c]
0xfef4  5  lea  rcx, [rsp + 0x40]
0xfef9  2  mov  edx, ebx
0xfefb  5  call  0x12c0b
0xff00  6  movsd  xmm0, qword ptr [rsp + 0x50]
0xff06  2  inc  esi
0xff08  6  mov  r9d, 0x7ff
0xff0e  6  movsd  qword ptr [rsp + 0x58], xmm0
0xff14  5  mov  rdx, qword ptr [rsp + 0x58]
0xff19  3  mov  r8, rdx
0xff1c  4  mov  dword ptr [rsp + 0x60], esi
0xff20  4  shr  r8, 0x34
0xff24  5  mov  esi, 2
0xff29  3  mov  rcx, r8
0xff2c  3  and  rcx, r9
0xff2f  3  mov  rax, rcx
0xff32  3  neg  rax
0xff35  10  movabs  rax, 0x10000000000000
0xff3f  3  sbb  rbx, rbx
0xff42  3  and  rbx, rax
0xff45  10  movabs  rax, 0xfffffffffffff
0xff4f  3  and  rdx, rax
0xff52  3  add  rbx, rdx
0xff55  3  neg  rcx
0xff58  2  sbb  eax, eax
0xff5a  3  and  r8d, r9d
0xff5d  4  lea  r12d, [rsi + rax]
0xff61  3  add  r12d, r8d
0xff64  5  call  0x12e03
0xff69  5  call  0x12d37
0xff6e  4  cvttsd2si  ecx, xmm0
0xff72  3  mov  dword ptr [rbp - 0x5c], ebx
0xff75  6  lea  eax, [rcx - 0x7fffffff]
0xff7b  3  and  eax, 0xfffffffe
0xff7e  2  neg  eax
0xff80  2  sbb  eax, eax
0xff82  4  shr  rbx, 0x20
0xff86  2  and  eax, ecx
0xff88  3  mov  dword ptr [rbp - 0x58], ebx
0xff8b  4  mov  dword ptr [rsp + 0x30], eax
0xff8f  2  mov  eax, ebx
0xff91  2  neg  eax
0xff93  2  sbb  edx, edx
0xff95  2  neg  edx
0xff97  3  add  edx, r15d
0xff9a  3  mov  dword ptr [rbp - 0x60], edx
0xff9d  7  cmp  r12d, 0x434
0xffa4  6  jb  0x101c4
0xffaa  2  xor  eax, eax
0xffac  10  mov  dword ptr [rbp + 0x348], 0x100000
0xffb6  6  mov  dword ptr [rbp + 0x344], eax
0xffbc  6  mov  dword ptr [rbp + 0x340], esi
0xffc2  2  test  ebx, ebx
0xffc4  6  je  0x100d6
0xffca  3  xor  r8d, r8d
0xffcd  5  mov  eax, dword ptr [rbp + r8*4 - 0x5c]
0xffd2  8  cmp  dword ptr [rbp + r8*4 + 0x344], eax
0xffda  6  jne  0x100d6
0xffe0  3  add  r8d, r15d
0xffe3  3  cmp  r8d, esi
0xffe6  2  jne  0xffcd
0xffe8  5  and  dword ptr [rsp + 0x40], 0
0xffed  8  lea  r11d, [r12 - 0x432]
0xfff5  3  mov  r8d, r11d
0xfff8  3  lea  eax, [rdx - 1]
0xfffb  4  and  r11d, 0x1f
0xffff  4  shr  r8d, 5
0x10003  2  mov  esi, edi
0x10005  3  mov  rbx, r15
0x10008  3  sub  esi, r11d
0x1000b  2  mov  ecx, esi
0x1000d  3  shl  rbx, cl
0x10010  3  sub  ebx, r15d
0x10013  5  bsr  eax, dword ptr [rbp + rax*4 - 0x5c]
0x10018  3  mov  r12d, ebx
0x1001b  3  not  r12d
0x1001e  2  je  0x10024
0x10020  2  inc  eax
0x10022  2  jmp  0x10026
0x10024  2  xor  eax, eax
0x10026  2  sub  edi, eax
0x10028  4  lea  eax, [rdx + r8]
0x1002c  3  cmp  eax, 0x73
0x1002f  6  ja  0x100b6
0x10035  3  xor  r14d, r14d
0x10038  3  cmp  r11d, edi
0x1003b  4  seta  r14b
0x1003f  3  add  r14d, edx
0x10042  3  add  r14d, r8d
0x10045  4  cmp  r14d, 0x73
0x10049  2  ja  0x100b6
0x1004b  4  lea  edi, [r8 - 1]
0x1004f  4  lea  r10d, [r14 - 1]
0x10053  3  cmp  r10d, edi
0x10056  2  je  0x100a0
0x10058  3  mov  eax, r10d
0x1005b  3  sub  eax, r8d
0x1005e  3  lea  ecx, [rax - 1]
0x10061  2  cmp  eax, edx
0x10063  2  jae  0x1006c
0x10065  5  mov  r9d, dword ptr [rbp + rax*4 - 0x5c]
0x1006a  2  jmp  0x1006f
0x1006c  3  xor  r9d, r9d
0x1006f  2  cmp  ecx, edx
0x10071  2  jae  0x10079
0x10073  4  mov  edx, dword ptr [rbp + rcx*4 - 0x5c]
0x10077  2  jmp  0x1007b
0x10079  2  xor  edx, edx
0x1007b  3  and  edx, r12d
0x1007e  2  mov  ecx, esi
0x10080  2  shr  edx, cl
0x10082  3  and  r9d, ebx
0x10085  3  mov  ecx, r11d
0x10088  3  shl  r9d, cl
0x1008b  3  or  edx, r9d
0x1008e  5  mov  dword ptr [rbp + r10*4 - 0x5c], edx
0x10093  3  dec  r10d
0x10096  3  cmp  r10d, edi
0x10099  2  je  0x100a0
0x1009b  3  mov  edx, dword ptr [rbp - 0x60]
0x1009e  2  jmp  0x10058
0x100a0  2  xor  ecx, ecx
0x100a2  3  test  r8d, r8d
0x100a5  2  je  0x100b9
0x100a7  5  and  dword ptr [rbp + rcx*4 - 0x5c], 0
0x100ac  3  add  ecx, r15d
0x100af  3  cmp  ecx, r8d
0x100b2  2  jne  0x100a7
0x100b4  2  jmp  0x100b9
0x100b6  3  xor  r14d, r14d
0x100b9  4  mov  dword ptr [rbp - 0x60], r14d
0x100bd  3  mov  r12d, r15d
0x100c0  7  mov  dword ptr [rbp + 0x170], r15d
0x100c7  10  mov  dword ptr [rbp + 0x174], 4
0x100d1  5  jmp  0x103f5
0x100d6  5  and  dword ptr [rsp + 0x40], 0
0x100db  8  lea  r11d, [r12 - 0x433]
0x100e3  3  mov  r8d, r11d
0x100e6  3  lea  eax, [rdx - 1]
0x100e9  4  and  r11d, 0x1f
0x100ed  4  shr  r8d, 5
0x100f1  2  mov  esi, edi
0x100f3  3  mov  rbx, r15
0x100f6  3  sub  esi, r11d
0x100f9  2  mov  ecx, esi
0x100fb  3  shl  rbx, cl
0x100fe  3  sub  ebx, r15d
0x10101  5  bsr  eax, dword ptr [rbp + rax*4 - 0x5c]
0x10106  3  mov  r12d, ebx
0x10109  3  not  r12d
0x1010c  2  je  0x10112
0x1010e  2  inc  eax
0x10110  2  jmp  0x10114
0x10112  2  xor  eax, eax
0x10114  2  sub  edi, eax
0x10116  4  lea  eax, [rdx + r8]
0x1011a  3  cmp  eax, 0x73
0x1011d  6  ja  0x101a4
0x10123  3  xor  r14d, r14d
0x10126  3  cmp  r11d, edi
0x10129  4  seta  r14b
0x1012d  3  add  r14d, edx
0x10130  3  add  r14d, r8d
0x10133  4  cmp  r14d, 0x73
0x10137  2  ja  0x101a4
0x10139  4  lea  edi, [r8 - 1]
0x1013d  4  lea  r10d, [r14 - 1]
0x10141  3  cmp  r10d, edi
0x10144  2  je  0x1018e
0x10146  3  mov  eax, r10d
0x10149  3  sub  eax, r8d
0x1014c  3  lea  ecx, [rax - 1]
0x1014f  2  cmp  eax, edx
0x10151  2  jae  0x1015a
0x10153  5  mov  r9d, dword ptr [rbp + rax*4 - 0x5c]
0x10158  2  jmp  0x1015d
0x1015a  3  xor  r9d, r9d
0x1015d  2  cmp  ecx, edx
0x1015f  2  jae  0x10167
0x10161  4  mov  edx, dword ptr [rbp + rcx*4 - 0x5c]
0x10165  2  jmp  0x10169
0x10167  2  xor  edx, edx
0x10169  3  and  edx, r12d
0x1016c  2  mov  ecx, esi
0x1016e  2  shr  edx, cl
0x10170  3  and  r9d, ebx
0x10173  3  mov  ecx, r11d
0x10176  3  shl  r9d, cl
0x10179  3  or  edx, r9d
0x1017c  5  mov  dword ptr [rbp + r10*4 - 0x5c], edx
0x10181  3  dec  r10d
0x10184  3  cmp  r10d, edi
0x10187  2  je  0x1018e
0x10189  3  mov  edx, dword ptr [rbp - 0x60]
0x1018c  2  jmp  0x10146
0x1018e  2  xor  ecx, ecx
0x10190  3  test  r8d, r8d
0x10193  2  je  0x101a7
0x10195  5  and  dword ptr [rbp + rcx*4 - 0x5c], 0
0x1019a  3  add  ecx, r15d
0x1019d  3  cmp  ecx, r8d
0x101a0  2  jne  0x10195
0x101a2  2  jmp  0x101a7
0x101a4  3  xor  r14d, r14d
0x101a7  4  mov  dword ptr [rbp - 0x60], r14d
0x101ab  3  mov  r12d, r15d
0x101ae  7  mov  dword ptr [rbp + 0x170], r15d
0x101b5  10  mov  dword ptr [rbp + 0x174], 2
0x101bf  5  jmp  0x103f5
0x101c4  4  cmp  r12d, 0x36
0x101c8  6  je  0x10312
0x101ce  2  xor  eax, eax
0x101d0  10  mov  dword ptr [rbp + 0x348], 0x100000
0x101da  6  mov  dword ptr [rbp + 0x344], eax
0x101e0  6  mov  dword ptr [rbp + 0x340], esi
0x101e6  2  test  ebx, ebx
0x101e8  6  je  0x10312
0x101ee  3  xor  r8d, r8d
0x101f1  5  mov  eax, dword ptr [rbp + r8*4 - 0x5c]
0x101f6  8  cmp  dword ptr [rbp + r8*4 + 0x344], eax
0x101fe  6  jne  0x10312
0x10204  3  add  r8d, r15d
0x10207  3  cmp  r8d, esi
0x1020a  2  jne  0x101f1
0x1020c  5  and  dword ptr [rsp + 0x40], 0
0x10211  3  bsr  eax, ebx
0x10214  2  je  0x1021a
0x10216  2  inc  eax
0x10218  2  jmp  0x1021c
0x1021a  2  xor  eax, eax
0x1021c  3  xor  r14d, r14d
0x1021f  2  sub  edi, eax
0x10221  2  cmp  edi, esi
0x10223  4  setb  r14b
0x10227  4  or  r11d, 0xffffffff
0x1022b  3  add  r14d, edx
0x1022e  4  cmp  r14d, 0x73
0x10232  6  jbe  0x102bf
0x10238  3  xor  r14d, r14d
0x1023b  5  mov  esi, 0x436
0x10240  4  mov  dword ptr [rbp - 0x60], r14d
0x10244  3  sub  esi, r12d
0x10247  7  lea  rcx, [rbp + 0x344]
0x1024e  2  mov  edi, esi
0x10250  2  xor  edx, edx
0x10252  3  shr  edi, 5
0x10255  8  lea  rbx, [rdi*4]
0x1025d  3  mov  r8, rbx
0x10260  5  call  0x1f03
0x10265  3  and  esi, 0x1f
0x10268  3  mov  eax, r15d
0x1026b  3  mov  cl, sil
0x1026e  2  shl  eax, cl
0x10270  7  mov  dword ptr [rbp + rbx + 0x344], eax
0x10277  4  lea  r12d, [rdi + 1]
0x1027b  3  mov  r8d, r12d
0x1027e  4  shl  r8, 2
0x10282  7  mov  dword ptr [rbp + 0x340], r12d
0x10289  7  mov  dword ptr [rbp + 0x170], r12d
0x10290  3  test  r8, r8
0x10293  6  je  0x103f5
0x10299  5  mov  ebx, 0x1cc
0x1029e  7  lea  rcx, [rbp + 0x174]
0x102a5  3  cmp  r8, rbx
0x102a8  6  ja  0x103d4
0x102ae  7  lea  rdx, [rbp + 0x344]
0x102b5  5  call  0x2dd3
0x102ba  5  jmp  0x103ee
0x102bf  4  lea  eax, [r14 - 1]
0x102c3  3  cmp  eax, r11d
0x102c6  6  je  0x1023b
0x102cc  3  mov  r10d, eax
0x102cf  4  lea  r8d, [rax - 1]
0x102d3  2  cmp  eax, edx
0x102d5  2  jae  0x102de
0x102d7  5  mov  r9d, dword ptr [rbp + r10*4 - 0x5c]
0x102dc  2  jmp  0x102e1
0x102de  3  xor  r9d, r9d
0x102e1  3  cmp  r8d, edx
0x102e4  2  jae  0x102ed
0x102e6  5  mov  ecx, dword ptr [rbp + r8*4 - 0x5c]
0x102eb  2  jmp  0x102ef
0x102ed  2  xor  ecx, ecx
0x102ef  3  shr  ecx, 0x1e
0x102f2  8  lea  eax, [r9*4]
0x102fa  2  or  ecx, eax
0x102fc  3  mov  eax, r8d
0x102ff  5  mov  dword ptr [rbp + r10*4 - 0x5c], ecx
0x10304  3  cmp  r8d, r11d
0x10307  6  je  0x1023b
0x1030d  3  mov  edx, dword ptr [rbp - 0x60]
0x10310  2  jmp  0x102cc
0x10312  2  neg  ebx
0x10314  3  sbb  rax, rax
0x10317  5  and  dword ptr [rsp + 0x40], 0
0x1031c  3  and  eax, 4
0x1031f  5  bsr  eax, dword ptr [rbp + rax - 0x5c]
0x10324  2  je  0x1032a
0x10326  2  inc  eax
0x10328  2  jmp  0x1032c
0x1032a  2  xor  eax, eax
0x1032c  3  xor  r14d, r14d
0x1032f  2  sub  edi, eax
0x10331  3  cmp  edi, r15d
0x10334  4  setb  r14b
0x10338  4  or  r11d, 0xffffffff
0x1033c  3  add  r14d, edx
0x1033f  4  cmp  r14d, 0x73
0x10343  2  jbe  0x10389
0x10345  3  xor  r14d, r14d
0x10348  5  mov  esi, 0x435
0x1034d  4  mov  dword ptr [rbp - 0x60], r14d
0x10351  3  sub  esi, r12d
0x10354  7  lea  rcx, [rbp + 0x344]
0x1035b  2  mov  edi, esi
0x1035d  2  xor  edx, edx
0x1035f  3  shr  edi, 5
0x10362  8  lea  rbx, [rdi*4]
0x1036a  3  mov  r8, rbx
0x1036d  5  call  0x1f03
0x10372  3  and  esi, 0x1f
0x10375  3  mov  eax, r15d
0x10378  3  mov  cl, sil
0x1037b  2  shl  eax, cl
0x1037d  7  mov  dword ptr [rbp + rbx + 0x344], eax
0x10384  5  jmp  0x10277
0x10389  4  lea  eax, [r14 - 1]
0x1038d  3  cmp  eax, r11d
0x10390  2  je  0x10348
0x10392  3  mov  r10d, eax
0x10395  4  lea  r8d, [rax - 1]
0x10399  2  cmp  eax, edx
0x1039b  2  jae  0x103a4
0x1039d  5  mov  r9d, dword ptr [rbp + r10*4 - 0x5c]
0x103a2  2  jmp  0x103a7
0x103a4  3  xor  r9d, r9d
0x103a7  3  cmp  r8d, edx
0x103aa  2  jae  0x103b3
0x103ac  5  mov  ecx, dword ptr [rbp + r8*4 - 0x5c]
0x103b1  2  jmp  0x103b5
0x103b3  2  xor  ecx, ecx
0x103b5  3  shr  ecx, 0x1f
0x103b8  4  lea  eax, [r9 + r9]
0x103bc  2  or  ecx, eax
0x103be  3  mov  eax, r8d
0x103c1  5  mov  dword ptr [rbp + r10*4 - 0x5c], ecx
0x103c6  3  cmp  r8d, r11d
0x103c9  6  je  0x10348
0x103cf  3  mov  edx, dword ptr [rbp - 0x60]
0x103d2  2  jmp  0x10392
0x103d4  3  mov  r8, rbx
0x103d7  2  xor  edx, edx
0x103d9  5  call  0x1f03
0x103de  5  call  0x8a6f
0x103e3  6  mov  dword ptr [rax], 0x22
0x103e9  5  call  0x8933
0x103ee  7  mov  r12d, dword ptr [rbp + 0x170]
0x103f5  4  mov  ecx, dword ptr [rsp + 0x30]
0x103f9  5  mov  eax, 0xcccccccd
0x103fe  2  test  ecx, ecx
0x10400  6  js  0x108ee
0x10406  2  mul  ecx
0x10408  2  mov  eax, edx
0x1040a  7  lea  rdx, [rip - 0x1040e]
0x10411  3  shr  eax, 3
0x10414  4  mov  dword ptr [rsp + 0x50], eax
0x10418  2  mov  ecx, eax
0x1041a  4  mov  dword ptr [rsp + 0x38], eax
0x1041e  2  test  eax, eax
0x10420  6  je  0x1084c
0x10426  6  mov  r8d, 0x26
0x1042c  3  cmp  ecx, r8d
0x1042f  2  mov  eax, ecx
0x10431  4  cmova  eax, r8d
0x10435  4  mov  dword ptr [rsp + 0x48], eax
0x10439  2  dec  eax
0x1043b  2  mov  edi, eax
0x1043d  8  movzx  ecx, byte ptr [rdx + rax*4 + 0x1c872]
0x10445  8  movzx  esi, byte ptr [rdx + rax*4 + 0x1c873]
0x1044d  2  xor  edx, edx
0x1044f  8  lea  rbx, [rcx*4]
0x10457  3  lea  eax, [rsi + rcx]
0x1045a  3  mov  r8, rbx
0x1045d  7  lea  rcx, [rbp + 0x344]
0x10464  6  mov  dword ptr [rbp + 0x340], eax
0x1046a  5  call  0x1f03
0x1046f  7  lea  rcx, [rip - 0x10473]
0x10476  4  shl  rsi, 2
0x1047a  8  movzx  eax, word ptr [rcx + rdi*4 + 0x1c870]
0x10482  7  lea  rdx, [rcx + 0x1bf60]
0x10489  7  lea  rcx, [rbp + 0x344]
0x10490  3  mov  r8, rsi
0x10493  3  add  rcx, rbx
0x10496  4  lea  rdx, [rdx + rax*4]
0x1049a  5  call  0x2dd3
0x1049f  7  mov  r9d, dword ptr [rbp + 0x340]
0x104a6  3  cmp  r9d, r15d
0x104a9  2  ja  0x10506
0x104ab  6  mov  eax, dword ptr [rbp + 0x344]
0x104b1  2  test  eax, eax
0x104b3  2  jne  0x104bd
0x104b5  3  xor  r12d, r12d
0x104b8  5  jmp  0x105d5
0x104bd  3  cmp  eax, r15d
0x104c0  6  je  0x105f3
0x104c6  3  test  r12d, r12d
0x104c9  6  je  0x105f3
0x104cf  3  xor  r8d, r8d
0x104d2  3  mov  r10, rax
0x104d5  3  xor  r9d, r9d
0x104d8  8  mov  ecx, dword ptr [rbp + r9*4 + 0x174]
0x104e0  3  mov  eax, r8d
0x104e3  4  imul  rcx, r10
0x104e7  3  add  rcx, rax
0x104ea  3  mov  r8, rcx
0x104ed  8  mov  dword ptr [rbp + r9*4 + 0x174], ecx
0x104f5  4  shr  r8, 0x20
0x104f9  3  add  r9d, r15d
0x104fc  3  cmp  r9d, r12d
0x104ff  2  jne  0x104d8
0x10501  5  jmp  0x105af
0x10506  3  cmp  r12d, r15d
0x10509  6  ja  0x10663
0x1050f  6  mov  ebx, dword ptr [rbp + 0x174]
0x10515  3  mov  r8, r9
0x10518  4  shl  r8, 2
0x1051c  3  mov  r12d, r9d
0x1051f  7  mov  dword ptr [rbp + 0x170], r9d
0x10526  3  test  r8, r8
0x10529  2  je  0x1056b
0x1052b  5  mov  eax, 0x1cc
0x10530  7  lea  rcx, [rbp + 0x174]
0x10537  3  cmp  r8, rax
0x1053a  2  ja  0x1054a
0x1053c  7  lea  rdx, [rbp + 0x344]
0x10543  5  call  0x2dd3
0x10548  2  jmp  0x10564
0x1054a  3  mov  r8, rax
0x1054d  2  xor  edx, edx
0x1054f  5  call  0x1f03
0x10554  5  call  0x8a6f
0x10559  6  mov  dword ptr [rax], 0x22
0x1055f  5  call  0x8933
0x10564  7  mov  r12d, dword ptr [rbp + 0x170]
0x1056b  2  test  ebx, ebx
0x1056d  6  je  0x104b5
0x10573  3  cmp  ebx, r15d
0x10576  2  je  0x105f3
0x10578  3  test  r12d, r12d
0x1057b  2  je  0x105f3
0x1057d  3  xor  r8d, r8d
0x10580  3  mov  r10, rbx
0x10583  3  xor  r9d, r9d
0x10586  8  mov  ecx, dword ptr [rbp + r9*4 + 0x174]
0x1058e  3  mov  eax, r8d
0x10591  4  imul  rcx, r10
0x10595  3  add  rcx, rax
0x10598  3  mov  r8, rcx
0x1059b  8  mov  dword ptr [rbp + r9*4 + 0x174], ecx
0x105a3  4  shr  r8, 0x20
0x105a7  3  add  r9d, r15d
0x105aa  3  cmp  r9d, r12d
0x105ad  2  jne  0x10586
0x105af  3  test  r8d, r8d
0x105b2  2  je  0x105ec
0x105b4  7  cmp  dword ptr [rbp + 0x170], 0x73
0x105bb  2  jae  0x105de
0x105bd  6  mov  eax, dword ptr [rbp + 0x170]
0x105c3  8  mov  dword ptr [rbp + rax*4 + 0x174], r8d
0x105cb  7  mov  r12d, dword ptr [rbp + 0x170]
0x105d2  3  add  r12d, r15d
0x105d5  7  mov  dword ptr [rbp + 0x170], r12d
0x105dc  2  jmp  0x105f3
0x105de  3  xor  r12d, r12d
0x105e1  2  xor  al, al
0x105e3  7  mov  dword ptr [rbp + 0x170], r12d
0x105ea  2  jmp  0x105f6
0x105ec  7  mov  r12d, dword ptr [rbp + 0x170]
0x105f3  3  mov  al, r15b
0x105f6  2  test  al, al
0x105f8  6  jne  0x10829
0x105fe  3  xor  r12d, r12d
0x10601  7  mov  dword ptr [rbp + 0x170], r12d
0x10608  4  mov  rsi, qword ptr [rbp - 0x78]
0x1060c  3  mov  rbx, rsi
0x1060f  3  test  r14d, r14d
0x10612  6  je  0x10d5a
0x10618  3  xor  r8d, r8d
0x1061b  3  xor  r9d, r9d
0x1061e  5  mov  eax, dword ptr [rbp + r9*4 - 0x5c]
0x10623  4  lea  rcx, [rax + rax*4]
0x10627  3  mov  eax, r8d
0x1062a  4  lea  r8, [rax + rcx*2]
0x1062e  5  mov  dword ptr [rbp + r9*4 - 0x5c], r8d
0x10633  3  add  r9d, r15d
0x10636  4  shr  r8, 0x20
0x1063a  3  cmp  r9d, r14d
0x1063d  2  jne  0x1061e
0x1063f  3  test  r8d, r8d
0x10642  6  je  0x10d5a
0x10648  4  cmp  dword ptr [rbp - 0x60], 0x73
0x1064c  6  jae  0x10d37
0x10652  3  mov  eax, dword ptr [rbp - 0x60]
0x10655  5  mov  dword ptr [rbp + rax*4 - 0x5c], r8d
0x1065a  4  add  dword ptr [rbp - 0x60], r15d
0x1065e  5  jmp  0x10d5a
0x10663  3  cmp  r9d, r12d
0x10666  7  lea  rdx, [rbp + 0x174]
0x1066d  3  mov  ebx, r12d
0x10670  7  lea  rcx, [rbp + 0x344]
0x10677  4  cmovae  rcx, rdx
0x1067b  7  lea  r8, [rbp + 0x344]
0x10682  4  cmovb  ebx, r9d
0x10686  5  mov  qword ptr [rsp + 0x58], rcx
0x1068b  3  setb  al
0x1068e  4  mov  dword ptr [rsp + 0x34], ebx
0x10692  7  lea  rdx, [rbp + 0x174]
0x10699  4  cmovae  rdx, r8
0x1069d  2  test  al, al
0x1069f  5  mov  qword ptr [rsp + 0x40], rdx
0x106a4  4  cmovne  r9d, r12d
0x106a8  3  xor  r12d, r12d
0x106ab  3  xor  r10d, r10d
0x106ae  7  mov  dword ptr [rbp + 0x510], r12d
0x106b5  2  test  ebx, ebx
0x106b7  6  je  0x107d6
0x106bd  4  mov  esi, dword ptr [rcx + r10*4]
0x106c1  2  test  esi, esi
0x106c3  2  jne  0x106e6
0x106c5  3  cmp  r10d, r12d
0x106c8  6  jne  0x107ca
0x106ce  8  and  dword ptr [rbp + r10*4 + 0x514], esi
0x106d6  4  lea  r12d, [r10 + 1]
0x106da  7  mov  dword ptr [rbp + 0x510], r12d
0x106e1  5  jmp  0x107ca
0x106e6  3  xor  r11d, r11d
0x106e9  3  mov  r8d, r10d
0x106ec  3  test  r9d, r9d
0x106ef  6  je  0x107b6
0x106f5  3  mov  ebx, r10d
0x106f8  2  neg  ebx
0x106fa  4  cmp  r8d, 0x73
0x106fe  2  je  0x10760
0x10700  3  mov  edi, r8d
0x10703  2  mov  ecx, ebx
0x10705  3  cmp  r8d, r12d
0x10708  2  jne  0x1071c
0x1070a  8  and  dword ptr [rbp + rdi*4 + 0x514], 0
0x10712  4  lea  eax, [r8 + 1]
0x10716  6  mov  dword ptr [rbp + 0x510], eax
0x1071c  3  mov  eax, r8d
0x1071f  3  add  r8d, r15d
0x10722  2  add  eax, ecx
0x10724  3  mov  edx, dword ptr [rdx + rax*4]
0x10727  3  mov  eax, r11d
0x1072a  4  imul  rdx, rsi
0x1072e  3  add  rdx, rax
0x10731  7  mov  eax, dword ptr [rbp + rdi*4 + 0x514]
0x10738  3  add  rdx, rax
0x1073b  4  lea  eax, [r8 + rbx]
0x1073f  3  mov  r11, rdx
0x10742  7  mov  dword ptr [rbp + rdi*4 + 0x514], edx
0x10749  7  mov  r12d, dword ptr [rbp + 0x510]
0x10750  4  shr  r11, 0x20
0x10754  3  cmp  eax, r9d
0x10757  2  je  0x10760
0x10759  5  mov  rdx, qword ptr [rsp + 0x40]
0x1075e  2  jmp  0x106fa
0x10760  3  test  r11d, r11d
0x10763  2  je  0x107b2
0x10765  4  cmp  r8d, 0x73
0x10769  6  je  0x105fe
0x1076f  4  lea  eax, [r8 + 1]
0x10773  3  mov  edx, r8d
0x10776  3  cmp  r8d, r12d
0x10779  3  mov  r8d, eax
0x1077c  2  jne  0x1078c
0x1077e  8  and  dword ptr [rbp + rdx*4 + 0x514], 0
0x10786  6  mov  dword ptr [rbp + 0x510], eax
0x1078c  7  mov  eax, dword ptr [rbp + rdx*4 + 0x514]
0x10793  3  mov  ecx, r11d
0x10796  3  add  rcx, rax
0x10799  7  mov  dword ptr [rbp + rdx*4 + 0x514], ecx
0x107a0  7  mov  r12d, dword ptr [rbp + 0x510]
0x107a7  4  shr  rcx, 0x20
0x107ab  3  mov  r11d, ecx
0x107ae  2  test  ecx, ecx
0x107b0  2  jne  0x10765
0x107b2  4  mov  ebx, dword ptr [rsp + 0x34]
0x107b6  4  cmp  r8d, 0x73
0x107ba  6  je  0x105fe
0x107c0  5  mov  rcx, qword ptr [rsp + 0x58]
0x107c5  5  mov  rdx, qword ptr [rsp + 0x40]
0x107ca  3  add  r10d, r15d
0x107cd  3  cmp  r10d, ebx
0x107d0  6  jne  0x106bd
0x107d6  3  mov  r8d, r12d
0x107d9  4  shl  r8, 2
0x107dd  7  mov  dword ptr [rbp + 0x170], r12d
0x107e4  3  test  r8, r8
0x107e7  2  je  0x10829
0x107e9  5  mov  eax, 0x1cc
0x107ee  7  lea  rcx, [rbp + 0x174]
0x107f5  3  cmp  r8, rax
0x107f8  2  ja  0x10808
0x107fa  7  lea  rdx, [rbp + 0x514]
0x10801  5  call  0x2dd3
0x10806  2  jmp  0x10822
0x10808  3  mov  r8, rax
0x1080b  2  xor  edx, edx
0x1080d  5  call  0x1f03
0x10812  5  call  0x8a6f
0x10817  6  mov  dword ptr [rax], 0x22
0x1081d  5  call  0x8933
0x10822  7  mov  r12d, dword ptr [rbp + 0x170]
0x10829  4  mov  ecx, dword ptr [rsp + 0x38]
0x1082d  7  lea  rdx, [rip - 0x10831]
0x10834  4  sub  ecx, dword ptr [rsp + 0x48]
0x10838  6  mov  r8d, 0x26
0x1083e  4  mov  dword ptr [rsp + 0x38], ecx
0x10842  6  jne  0x1042c
0x10848  4  mov  eax, dword ptr [rsp + 0x50]
0x1084c  4  mov  ecx, dword ptr [rsp + 0x30]
0x10850  3  lea  eax, [rax + rax*4]
0x10853  2  add  eax, eax
0x10855  2  sub  ecx, eax
0x10857  6  je  0x10608
0x1085d  3  lea  eax, [rcx - 1]
0x10860  7  mov  eax, dword ptr [rdx + rax*4 + 0x1c908]
0x10867  2  test  eax, eax
0x10869  6  je  0x105fe
0x1086f  3  cmp  eax, r15d
0x10872  6  je  0x10608
0x10878  3  test  r12d, r12d
0x1087b  6  je  0x10608
0x10881  3  xor  r8d, r8d
0x10884  3  mov  r10d, eax
0x10887  3  xor  r9d, r9d
0x1088a  8  mov  ecx, dword ptr [rbp + r9*4 + 0x174]
0x10892  3  mov  eax, r8d
0x10895  4  imul  rcx, r10
0x10899  3  add  rcx, rax
0x1089c  3  mov  r8, rcx
0x1089f  8  mov  dword ptr [rbp + r9*4 + 0x174], ecx
0x108a7  4  shr  r8, 0x20
0x108ab  3  add  r9d, r15d
0x108ae  3  cmp  r9d, r12d
0x108b1  2  jne  0x1088a
0x108b3  3  test  r8d, r8d
0x108b6  2  je  0x108e2
0x108b8  7  cmp  dword ptr [rbp + 0x170], 0x73
0x108bf  6  jae  0x105fe
0x108c5  6  mov  eax, dword ptr [rbp + 0x170]
0x108cb  8  mov  dword ptr [rbp + rax*4 + 0x174], r8d
0x108d3  7  mov  r12d, dword ptr [rbp + 0x170]
0x108da  3  add  r12d, r15d
0x108dd  5  jmp  0x10601
0x108e2  7  mov  r12d, dword ptr [rbp + 0x170]
0x108e9  5  jmp  0x10608
0x108ee  2  neg  ecx
0x108f0  7  lea  r8, [rip - 0x108f4]
0x108f7  2  mul  ecx
0x108f9  4  mov  dword ptr [rsp + 0x48], ecx
0x108fd  2  mov  eax, edx
0x108ff  3  shr  eax, 3
0x10902  4  mov  dword ptr [rsp + 0x40], eax
0x10906  2  mov  edx, eax
0x10908  4  mov  dword ptr [rsp + 0x34], eax
0x1090c  2  test  eax, eax
0x1090e  6  je  0x10ca9
0x10914  5  mov  ecx, 0x26
0x10919  2  cmp  edx, ecx
0x1091b  2  mov  eax, edx
0x1091d  3  cmova  eax, ecx
0x10920  2  xor  edx, edx
0x10922  4  mov  dword ptr [rsp + 0x50], eax
0x10926  2  dec  eax
0x10928  2  mov  edi, eax
0x1092a  9  movzx  ecx, byte ptr [r8 + rax*4 + 0x1c872]
0x10933  9  movzx  esi, byte ptr [r8 + rax*4 + 0x1c873]
0x1093c  8  lea  rbx, [rcx*4]
0x10944  3  lea  eax, [rsi + rcx]
0x10947  3  mov  r8, rbx
0x1094a  7  lea  rcx, [rbp + 0x344]
0x10951  6  mov  dword ptr [rbp + 0x340], eax
0x10957  5  call  0x1f03
0x1095c  7  lea  rcx, [rip - 0x10960]
0x10963  4  shl  rsi, 2
0x10967  8  movzx  eax, word ptr [rcx + rdi*4 + 0x1c870]
0x1096f  7  lea  rdx, [rcx + 0x1bf60]
0x10976  7  lea  rcx, [rbp + 0x344]
0x1097d  3  mov  r8, rsi
0x10980  3  add  rcx, rbx
0x10983  4  lea  rdx, [rdx + rax*4]
0x10987  5  call  0x2dd3
0x1098c  7  mov  r9d, dword ptr [rbp + 0x340]
0x10993  3  cmp  r9d, r15d
0x10996  2  ja  0x109ed
0x10998  6  mov  eax, dword ptr [rbp + 0x344]
0x1099e  2  test  eax, eax
0x109a0  2  jne  0x109aa
0x109a2  3  xor  r14d, r14d
0x109a5  5  jmp  0x10a9e
0x109aa  3  cmp  eax, r15d
0x109ad  6  je  0x10ab3
0x109b3  3  test  r14d, r14d
0x109b6  6  je  0x10ab3
0x109bc  3  xor  r8d, r8d
0x109bf  3  mov  r10, rax
0x109c2  3  xor  r9d, r9d
0x109c5  5  mov  ecx, dword ptr [rbp + r9*4 - 0x5c]
0x109ca  3  mov  eax, r8d
0x109cd  4  imul  rcx, r10
0x109d1  3  add  rcx, rax
0x109d4  3  mov  r8, rcx
0x109d7  5  mov  dword ptr [rbp + r9*4 - 0x5c], ecx
0x109dc  4  shr  r8, 0x20
0x109e0  3  add  r9d, r15d
0x109e3  3  cmp  r9d, r14d
0x109e6  2  jne  0x109c5
0x109e8  5  jmp  0x10a84
0x109ed  3  cmp  r14d, r15d
0x109f0  6  ja  0x10ace
0x109f6  3  mov  ebx, dword ptr [rbp - 0x5c]
0x109f9  3  mov  r8, r9
0x109fc  4  shl  r8, 2
0x10a00  3  mov  r14d, r9d
0x10a03  4  mov  dword ptr [rbp - 0x60], r9d
0x10a07  3  test  r8, r8
0x10a0a  2  je  0x10a46
0x10a0c  5  mov  eax, 0x1cc
0x10a11  4  lea  rcx, [rbp - 0x5c]
0x10a15  3  cmp  r8, rax
0x10a18  2  ja  0x10a28
0x10a1a  7  lea  rdx, [rbp + 0x344]
0x10a21  5  call  0x2dd3
0x10a26  2  jmp  0x10a42
0x10a28  3  mov  r8, rax
0x10a2b  2  xor  edx, edx
0x10a2d  5  call  0x1f03
0x10a32  5  call  0x8a6f
0x10a37  6  mov  dword ptr [rax], 0x22
0x10a3d  5  call  0x8933
0x10a42  4  mov  r14d, dword ptr [rbp - 0x60]
0x10a46  2  test  ebx, ebx
0x10a48  6  je  0x109a2
0x10a4e  3  cmp  ebx, r15d
0x10a51  2  je  0x10ab3
0x10a53  3  test  r14d, r14d
0x10a56  2  je  0x10ab3
0x10a58  3  xor  r8d, r8d
0x10a5b  3  mov  r10, rbx
0x10a5e  3  xor  r9d, r9d
0x10a61  5  mov  ecx, dword ptr [rbp + r9*4 - 0x5c]
0x10a66  3  mov  eax, r8d
0x10a69  4  imul  rcx, r10
0x10a6d  3  add  rcx, rax
0x10a70  3  mov  r8, rcx
0x10a73  5  mov  dword ptr [rbp + r9*4 - 0x5c], ecx
0x10a78  4  shr  r8, 0x20
0x10a7c  3  add  r9d, r15d
0x10a7f  3  cmp  r9d, r14d
0x10a82  2  jne  0x10a61
0x10a84  3  test  r8d, r8d
0x10a87  2  je  0x10aaf
0x10a89  4  cmp  dword ptr [rbp - 0x60], 0x73
0x10a8d  2  jae  0x10aa4
0x10a8f  3  mov  eax, dword ptr [rbp - 0x60]
0x10a92  5  mov  dword ptr [rbp + rax*4 - 0x5c], r8d
0x10a97  4  mov  r14d, dword ptr [rbp - 0x60]
0x10a9b  3  add  r14d, r15d
0x10a9e  4  mov  dword ptr [rbp - 0x60], r14d
0x10aa2  2  jmp  0x10ab3
0x10aa4  3  xor  r14d, r14d
0x10aa7  2  xor  al, al
0x10aa9  4  mov  dword ptr [rbp - 0x60], r14d
0x10aad  2  jmp  0x10ab6
0x10aaf  4  mov  r14d, dword ptr [rbp - 0x60]
0x10ab3  3  mov  al, r15b
0x10ab6  2  test  al, al
0x10ab8  6  jne  0x10c83
0x10abe  4  mov  rsi, qword ptr [rbp - 0x78]
0x10ac2  4  and  dword ptr [rbp - 0x60], 0
0x10ac6  3  mov  rbx, rsi
0x10ac9  5  jmp  0x10d5a
0x10ace  3  cmp  r9d, r14d
0x10ad1  4  lea  rdx, [rbp - 0x5c]
0x10ad5  3  mov  r11d, r14d
0x10ad8  7  lea  rcx, [rbp + 0x344]
0x10adf  4  cmovae  rcx, rdx
0x10ae3  7  lea  r8, [rbp + 0x344]
0x10aea  4  cmovb  r11d, r9d
0x10aee  4  mov  qword ptr [rbp - 0x70], rcx
0x10af2  3  setb  al
0x10af5  5  mov  dword ptr [rsp + 0x38], r11d
0x10afa  4  lea  rdx, [rbp - 0x5c]
0x10afe  4  cmovae  rdx, r8
0x10b02  2  test  al, al
0x10b04  5  mov  qword ptr [rsp + 0x58], rdx
0x10b09  4  cmovne  r9d, r14d
0x10b0d  3  xor  r14d, r14d
0x10b10  3  xor  r10d, r10d
0x10b13  7  mov  dword ptr [rbp + 0x510], r14d
0x10b1a  3  test  r11d, r11d
0x10b1d  6  je  0x10c39
0x10b23  4  mov  esi, dword ptr [rcx + r10*4]
0x10b27  2  test  esi, esi
0x10b29  2  jne  0x10b4c
0x10b2b  3  cmp  r10d, r14d
0x10b2e  6  jne  0x10c2d
0x10b34  8  and  dword ptr [rbp + r10*4 + 0x514], esi
0x10b3c  4  lea  r14d, [r10 + 1]
0x10b40  7  mov  dword ptr [rbp + 0x510], r14d
0x10b47  5  jmp  0x10c2d
0x10b4c  2  xor  ebx, ebx
0x10b4e  3  mov  r8d, r10d
0x10b51  3  test  r9d, r9d
0x10b54  6  je  0x10c1a
0x10b5a  3  mov  r11d, r10d
0x10b5d  3  neg  r11d
0x10b60  4  cmp  r8d, 0x73
0x10b64  2  je  0x10bc6
0x10b66  3  mov  edi, r8d
0x10b69  3  mov  ecx, r11d
0x10b6c  3  cmp  r8d, r14d
0x10b6f  2  jne  0x10b83
0x10b71  8  and  dword ptr [rbp + rdi*4 + 0x514], 0
0x10b79  4  lea  eax, [r8 + 1]
0x10b7d  6  mov  dword ptr [rbp + 0x510], eax
0x10b83  3  mov  eax, r8d
0x10b86  3  add  r8d, r15d
0x10b89  2  add  eax, ecx
0x10b8b  3  mov  edx, dword ptr [rdx + rax*4]
0x10b8e  7  mov  eax, dword ptr [rbp + rdi*4 + 0x514]
0x10b95  4  imul  rdx, rsi
0x10b99  3  add  rdx, rax
0x10b9c  2  mov  eax, ebx
0x10b9e  3  add  rdx, rax
0x10ba1  4  lea  eax, [r11 + r8]
0x10ba5  3  mov  rbx, rdx
0x10ba8  7  mov  dword ptr [rbp + rdi*4 + 0x514], edx
0x10baf  7  mov  r14d, dword ptr [rbp + 0x510]
0x10bb6  4  shr  rbx, 0x20
0x10bba  3  cmp  eax, r9d
0x10bbd  2  je  0x10bc6
0x10bbf  5  mov  rdx, qword ptr [rsp + 0x58]
0x10bc4  2  jmp  0x10b60
0x10bc6  2  test  ebx, ebx
0x10bc8  2  je  0x10c15
0x10bca  4  cmp  r8d, 0x73
0x10bce  6  je  0x10abe
0x10bd4  4  lea  eax, [r8 + 1]
0x10bd8  3  mov  edx, r8d
0x10bdb  3  cmp  r8d, r14d
0x10bde  3  mov  r8d, eax
0x10be1  2  jne  0x10bf1
0x10be3  8  and  dword ptr [rbp + rdx*4 + 0x514], 0
0x10beb  6  mov  dword ptr [rbp + 0x510], eax
0x10bf1  7  mov  ecx, dword ptr [rbp + rdx*4 + 0x514]
0x10bf8  2  mov  eax, ebx
0x10bfa  3  add  rcx, rax
0x10bfd  7  mov  dword ptr [rbp + rdx*4 + 0x514], ecx
0x10c04  7  mov  r14d, dword ptr [rbp + 0x510]
0x10c0b  4  shr  rcx, 0x20
0x10c0f  2  mov  ebx, ecx
0x10c11  2  test  ecx, ecx
0x10c13  2  jne  0x10bca
0x10c15  5  mov  r11d, dword ptr [rsp + 0x38]
0x10c1a  4  cmp  r8d, 0x73
0x10c1e  6  je  0x10abe
0x10c24  4  mov  rcx, qword ptr [rbp - 0x70]
0x10c28  5  mov  rdx, qword ptr [rsp + 0x58]
0x10c2d  3  add  r10d, r15d
0x10c30  3  cmp  r10d, r11d
0x10c33  6  jne  0x10b23
0x10c39  3  mov  r8d, r14d
0x10c3c  4  shl  r8, 2
0x10c40  4  mov  dword ptr [rbp - 0x60], r14d
0x10c44  3  test  r8, r8
0x10c47  2  je  0x10c83
0x10c49  5  mov  eax, 0x1cc
0x10c4e  4  lea  rcx, [rbp - 0x5c]
0x10c52  3  cmp  r8, rax
0x10c55  2  ja  0x10c65
0x10c57  7  lea  rdx, [rbp + 0x514]
0x10c5e  5  call  0x2dd3
0x10c63  2  jmp  0x10c7f
0x10c65  3  mov  r8, rax
0x10c68  2  xor  edx, edx
0x10c6a  5  call  0x1f03
0x10c6f  5  call  0x8a6f
0x10c74  6  mov  dword ptr [rax], 0x22
0x10c7a  5  call  0x8933
0x10c7f  4  mov  r14d, dword ptr [rbp - 0x60]
0x10c83  4  mov  edx, dword ptr [rsp + 0x34]
0x10c87  7  lea  r8, [rip - 0x10c8b]
0x10c8e  4  sub  edx, dword ptr [rsp + 0x50]
0x10c92  5  mov  ecx, 0x26
0x10c97  4  mov  dword ptr [rsp + 0x34], edx
0x10c9b  6  jne  0x10919
0x10ca1  4  mov  ecx, dword ptr [rsp + 0x48]
0x10ca5  4  mov  eax, dword ptr [rsp + 0x40]
0x10ca9  3  lea  eax, [rax + rax*4]
0x10cac  2  add  eax, eax
0x10cae  2  sub  ecx, eax
0x10cb0  6  je  0x10608
0x10cb6  3  lea  eax, [rcx - 1]
0x10cb9  8  mov  eax, dword ptr [r8 + rax*4 + 0x1c908]
0x10cc1  2  test  eax, eax
0x10cc3  6  je  0x10abe
0x10cc9  3  cmp  eax, r15d
0x10ccc  6  je  0x10608
0x10cd2  3  test  r14d, r14d
0x10cd5  6  je  0x10608
0x10cdb  3  xor  r8d, r8d
0x10cde  3  mov  r10d, eax
0x10ce1  3  xor  r9d, r9d
0x10ce4  5  mov  ecx, dword ptr [rbp + r9*4 - 0x5c]
0x10ce9  3  mov  eax, r8d
0x10cec  4  imul  rcx, r10
0x10cf0  3  add  rcx, rax
0x10cf3  3  mov  r8, rcx
0x10cf6  5  mov  dword ptr [rbp + r9*4 - 0x5c], ecx
0x10cfb  4  shr  r8, 0x20
0x10cff  3  add  r9d, r15d
0x10d02  3  cmp  r9d, r14d
0x10d05  2  jne  0x10ce4
0x10d07  3  test  r8d, r8d
0x10d0a  2  je  0x10d2e
0x10d0c  4  cmp  dword ptr [rbp - 0x60], 0x73
0x10d10  6  jae  0x10abe
0x10d16  3  mov  eax, dword ptr [rbp - 0x60]
0x10d19  5  mov  dword ptr [rbp + rax*4 - 0x5c], r8d
0x10d1e  4  mov  r14d, dword ptr [rbp - 0x60]
0x10d22  3  add  r14d, r15d
0x10d25  4  mov  dword ptr [rbp - 0x60], r14d
0x10d29  5  jmp  0x10608
0x10d2e  4  mov  r14d, dword ptr [rbp - 0x60]
0x10d32  5  jmp  0x10608
0x10d37  7  and  dword ptr [rbp + 0x340], 0
0x10d3e  7  lea  r8, [rbp + 0x344]
0x10d45  4  and  dword ptr [rbp - 0x60], 0
0x10d49  4  lea  rcx, [rbp - 0x5c]
0x10d4d  3  xor  r9d, r9d
0x10d50  5  mov  edx, 0x1cc
0x10d55  5  call  0x10fbf
0x10d5a  7  lea  rdx, [rbp + 0x170]
0x10d61  4  lea  rcx, [rbp - 0x60]
0x10d65  5  call  0xf893
0x10d6a  4  mov  edi, dword ptr [rsp + 0x30]
0x10d6e  3  cmp  eax, 0xa
0x10d71  6  jne  0x10e07
0x10d77  3  add  edi, r15d
0x10d7a  3  mov  byte ptr [rsi], 0x31
0x10d7d  4  lea  rbx, [rsi + 1]
0x10d81  3  test  r12d, r12d
0x10d84  6  je  0x10e18
0x10d8a  3  xor  r8d, r8d
0x10d8d  3  xor  r9d, r9d
0x10d90  8  mov  eax, dword ptr [rbp + r9*4 + 0x174]
0x10d98  4  lea  rcx, [rax + rax*4]
0x10d9c  3  mov  eax, r8d
0x10d9f  4  lea  r8, [rax + rcx*2]
0x10da3  8  mov  dword ptr [rbp + r9*4 + 0x174], r8d
0x10dab  3  add  r9d, r15d
0x10dae  4  shr  r8, 0x20
0x10db2  3  cmp  r9d, r12d
0x10db5  2  jne  0x10d90
0x10db7  3  test  r8d, r8d
0x10dba  2  je  0x10e18
0x10dbc  7  cmp  dword ptr [rbp + 0x170], 0x73
0x10dc3  2  jae  0x10ddc
0x10dc5  6  mov  eax, dword ptr [rbp + 0x170]
0x10dcb  8  mov  dword ptr [rbp + rax*4 + 0x174], r8d
0x10dd3  7  add  dword ptr [rbp + 0x170], r15d
0x10dda  2  jmp  0x10e18
0x10ddc  7  and  dword ptr [rbp + 0x340], 0
0x10de3  7  lea  r8, [rbp + 0x344]
0x10dea  7  and  dword ptr [rbp + 0x170], 0
0x10df1  7  lea  rcx, [rbp + 0x174]
0x10df8  3  xor  r9d, r9d
0x10dfb  5  mov  edx, 0x1cc
0x10e00  5  call  0x10fbf
0x10e05  2  jmp  0x10e18
0x10e07  2  test  eax, eax
0x10e09  2  jne  0x10e10
0x10e0b  3  sub  edi, r15d
0x10e0e  2  jmp  0x10e18
0x10e10  2  add  al, 0x30
0x10e12  4  lea  rbx, [rsi + 1]
0x10e16  2  mov  byte ptr [rsi], al
0x10e18  4  mov  rax, qword ptr [rbp - 0x68]
0x10e1c  3  mov  dword ptr [rax + 4], edi
0x10e1f  4  mov  eax, dword ptr [rsp + 0x60]
0x10e23  2  test  edi, edi
0x10e25  2  js  0x10e37
0x10e27  5  cmp  eax, 0x7fffffff
0x10e2c  2  ja  0x10e37
0x10e2e  5  cmp  dword ptr [rsp + 0x64], 0
0x10e33  2  jne  0x10e37
0x10e35  2  add  eax, edi
0x10e37  2  mov  edi, eax
0x10e39  7  mov  rax, qword ptr [rbp + 0x758]
0x10e40  3  dec  rax
0x10e43  3  cmp  rax, rdi
0x10e46  4  cmovb  rdi, rax
0x10e4a  3  add  rdi, rsi
0x10e4d  3  xor  sil, sil
0x10e50  3  cmp  rbx, rdi
0x10e53  6  je  0x10f4b
0x10e59  6  mov  r14d, 9
0x10e5f  4  mov  r9d, dword ptr [rbp - 0x60]
0x10e63  3  test  r9d, r9d
0x10e66  6  je  0x10f4f
0x10e6c  3  xor  r8d, r8d
0x10e6f  3  xor  r10d, r10d
0x10e72  5  mov  eax, dword ptr [rbp + r10*4 - 0x5c]
0x10e77  7  imul  rcx, rax, 0x3b9aca00
0x10e7e  3  mov  eax, r8d
0x10e81  3  add  rcx, rax
0x10e84  3  mov  r8, rcx
0x10e87  5  mov  dword ptr [rbp + r10*4 - 0x5c], ecx
0x10e8c  4  shr  r8, 0x20
0x10e90  3  add  r10d, r15d
0x10e93  3  cmp  r10d, r9d
0x10e96  2  jne  0x10e72
0x10e98  3  test  r8d, r8d
0x10e9b  2  je  0x10ed4
0x10e9d  4  cmp  dword ptr [rbp - 0x60], 0x73
0x10ea1  2  jae  0x10eb1
0x10ea3  3  mov  eax, dword ptr [rbp - 0x60]
0x10ea6  5  mov  dword ptr [rbp + rax*4 - 0x5c], r8d
0x10eab  4  add  dword ptr [rbp - 0x60], r15d
0x10eaf  2  jmp  0x10ed4
0x10eb1  7  and  dword ptr [rbp + 0x340], 0
0x10eb8  7  lea  r8, [rbp + 0x344]
0x10ebf  4  and  dword ptr [rbp - 0x60], 0
0x10ec3  4  lea  rcx, [rbp - 0x5c]
0x10ec7  3  xor  r9d, r9d
0x10eca  5  mov  edx, 0x1cc
0x10ecf  5  call  0x10fbf
0x10ed4  7  lea  rdx, [rbp + 0x170]
0x10edb  4  lea  rcx, [rbp - 0x60]
0x10edf  5  call  0xf893
0x10ee4  3  mov  r10d, edi
0x10ee7  3  mov  r8, rax
0x10eea  3  sub  r10d, ebx
0x10eed  6  mov  r9d, 8
0x10ef3  5  mov  eax, 0xcccccccd
0x10ef8  3  mul  r8d
0x10efb  3  shr  edx, 3
0x10efe  2  mov  cl, dl
0x10f00  3  shl  cl, 2
0x10f03  3  lea  eax, [rcx + rdx]
0x10f06  2  add  al, al
0x10f08  3  sub  r8b, al
0x10f0b  4  lea  ecx, [r8 + 0x30]
0x10f0f  3  mov  r8d, edx
0x10f12  3  cmp  r10d, r9d
0x10f15  2  ja  0x10f21
0x10f17  3  cmp  cl, 0x30
0x10f1a  2  je  0x10f27
0x10f1c  3  mov  sil, r15b
0x10f1f  2  jmp  0x10f27
0x10f21  3  mov  eax, r9d
0x10f24  3  mov  byte ptr [rax + rbx], cl
0x10f27  3  or  eax, 0xffffffff
0x10f2a  3  add  r9d, eax
0x10f2d  3  cmp  r9d, eax
0x10f30  2  jne  0x10ef3
0x10f32  3  mov  rax, rdi
0x10f35  3  sub  rax, rbx
0x10f38  3  cmp  rax, r14
0x10f3b  4  cmovg  rax, r14
0x10f3f  3  add  rbx, rax
0x10f42  3  cmp  rbx, rdi
0x10f45  6  jne  0x10e5f
0x10f4b  4  mov  r9d, dword ptr [rbp - 0x60]
0x10f4f  3  mov  byte ptr [rbx], 0
0x10f52  3  test  r9d, r9d
0x10f55  2  jne  0x10f5c
0x10f57  3  test  sil, sil
0x10f5a  2  je  0x10f5f
0x10f5c  3  xor  r15d, r15d
0x10f5f  5  mov  r8d, dword ptr [rsp + 0x6c]
0x10f64  5  lea  rcx, [rsp + 0x64]
0x10f69  4  mov  edx, dword ptr [rsp + 0x68]
0x10f6d  5  call  0x12c0b
0x10f72  5  cmp  byte ptr [rsp + 0x78], 0
0x10f77  2  je  0x10f83
0x10f79  5  lea  rcx, [rsp + 0x70]
0x10f7e  5  call  0x12c8f
0x10f83  3  mov  eax, r15d
0x10f86  7  mov  rcx, qword ptr [rbp + 0x6e0]
0x10f8d  3  xor  rcx, rsp
0x10f90  5  call  0x14c73
0x10f95  7  add  rsp, 0x7f0
0x10f9c  2  pop  r15
0x10f9e  2  pop  r14
0x10fa0  2  pop  r12
0x10fa2  1  pop  rdi
0x10fa3  1  pop  rsi
0x10fa4  1  pop  rbx
0x10fa5  1  pop  rbp
0x10fa6  1  ret  
0x10fa7  6  and  qword ptr [rsp + 0x20], 0
0x10fad  3  xor  r9d, r9d
0x10fb0  3  xor  r8d, r8d
0x10fb3  2  xor  edx, edx
0x10fb5  2  xor  ecx, ecx
0x10fb7  5  call  0x8953
0x10fbc  1  int3  
0x10fbd  1  int3  
0x10fbe  1  int3  
0x10fbf  5  mov  qword ptr [rsp + 8], rbx
0x10fc4  5  mov  qword ptr [rsp + 0x10], rsi
0x10fc9  1  push  rdi
0x10fca  4  sub  rsp, 0x20
0x10fce  3  mov  rbx, r9
0x10fd1  3  mov  rsi, r8
0x10fd4  3  mov  rdi, rdx
0x10fd7  3  test  r9, r9
0x10fda  2  jne  0x10fe0
0x10fdc  2  xor  eax, eax
0x10fde  2  jmp  0x11036
0x10fe0  3  test  rcx, rcx
0x10fe3  2  jne  0x10ffa
0x10fe5  5  call  0x8a6f
0x10fea  5  mov  ebx, 0x16
0x10fef  2  mov  dword ptr [rax], ebx
0x10ff1  5  call  0x8933
0x10ff6  2  mov  eax, ebx
0x10ff8  2  jmp  0x11036
0x10ffa  3  test  rsi, rsi
0x10ffd  2  je  0x11011
0x10fff  3  cmp  rdi, rbx
0x11002  2  jb  0x11011
0x11004  3  mov  r8, rbx
0x11007  3  mov  rdx, rsi
0x1100a  5  call  0x2dd3
0x1100f  2  jmp  0x10fdc
0x11011  3  mov  r8, rdi
0x11014  2  xor  edx, edx
0x11016  5  call  0x1f03
0x1101b  3  test  rsi, rsi
0x1101e  2  je  0x10fe5
0x11020  3  cmp  rdi, rbx
0x11023  2  jae  0x11031
0x11025  5  call  0x8a6f
0x1102a  5  mov  ebx, 0x22
0x1102f  2  jmp  0x10fef
0x11031  5  mov  eax, 0x16
0x11036  5  mov  rbx, qword ptr [rsp + 0x30]
0x1103b  5  mov  rsi, qword ptr [rsp + 0x38]
0x11040  4  add  rsp, 0x20
0x11044  1  pop  rdi
0x11045  1  ret  
0x11046  1  int3  
0x11047  4  sub  rsp, 0x28
0x1104b  5  call  0x133bb
0x11050  2  mov  ecx, eax
0x11052  4  add  rsp, 0x28
0x11056  5  jmp  0x133af
0x1105b  2  xor  eax, eax
0x1105d  3  mov  r10, rcx
0x11060  3  test  rcx, rcx
0x11063  2  jne  0x1106e
0x11065  3  mov  qword ptr [r8], rax
0x11068  5  mov  eax, 1
0x1106d  1  ret  
0x1106e  2  test  edx, edx
0x11070  2  jne  0x11076
0x11072  2  mov  byte ptr [rcx], al
0x11074  2  jmp  0x11065
0x11076  6  test  edx, 0xffffff80
0x1107c  2  jne  0x11082
0x1107e  2  mov  byte ptr [rcx], dl
0x11080  2  jmp  0x11068
0x11082  6  test  edx, 0xfffff800
0x11088  2  jne  0x11094
0x1108a  5  mov  ecx, 1
0x1108f  3  mov  r9b, 0xc0
0x11092  2  jmp  0x110cb
0x11094  6  test  edx, 0xffff0000
0x1109a  2  jne  0x110b3
0x1109c  6  lea  eax, [rdx - 0xd800]
0x110a2  5  cmp  eax, 0x7ff
0x110a7  2  jbe  0x110f2
0x110a9  5  mov  ecx, 2
0x110ae  3  mov  r9b, 0xe0
0x110b1  2  jmp  0x110cb
0x110b3  6  test  edx, 0xffe00000
0x110b9  2  jne  0x110f2
0x110bb  6  cmp  edx, 0x10ffff
0x110c1  2  ja  0x110f2
0x110c3  5  mov  ecx, 3
0x110c8  3  mov  r9b, 0xf0
0x110cb  3  mov  r11, rcx
0x110ce  2  mov  al, dl
0x110d0  3  shr  edx, 6
0x110d3  2  and  al, 0x3f
0x110d5  2  or  al, 0x80
0x110d7  4  mov  byte ptr [r11 + r10], al
0x110db  4  sub  r11, 1
0x110df  2  jne  0x110ce
0x110e1  3  or  dl, r9b
0x110e4  3  mov  byte ptr [r10], dl
0x110e7  3  inc  rcx
0x110ea  3  mov  rdx, r8
0x110ed  5  jmp  0x136a3
0x110f2  3  mov  rdx, r9
0x110f5  3  mov  rcx, r8
0x110f8  5  jmp  0x136ab
0x110fd  1  int3  
0x110fe  1  int3  
0x110ff  2  push  rbx
0x11101  4  sub  rsp, 0x40
0x11105  5  mov  rax, qword ptr [rsp + 0x70]
0x1110a  3  mov  rbx, rcx
0x1110d  5  lea  rcx, [rsp + 0x30]
0x11112  5  mov  qword ptr [rsp + 0x20], rax
0x11117  5  call  0x136bf
0x1111c  4  cmp  rax, 4
0x11120  2  ja  0x1113c
0x11122  4  mov  edx, dword ptr [rsp + 0x30]
0x11126  5  mov  ecx, 0xfffd
0x1112b  6  cmp  edx, 0xffff
0x11131  3  cmova  edx, ecx
0x11134  3  test  rbx, rbx
0x11137  2  je  0x1113c
0x11139  3  mov  word ptr [rbx], dx
0x1113c  4  add  rsp, 0x40
0x11140  1  pop  rbx
0x11141  1  ret  
0x11142  1  int3  
0x11143  5  mov  qword ptr [rsp + 0x10], rbx
0x11148  5  mov  qword ptr [rsp + 0x18], rbp
0x1114d  1  push  rdi
0x1114e  2  push  r12
0x11150  2  push  r13
0x11152  2  push  r14
0x11154  2  push  r15
0x11156  4  sub  rsp, 0x30
0x1115a  3  mov  rdi, qword ptr [rdx]
0x1115d  2  xor  eax, eax
0x1115f  3  mov  r12, r9
0x11162  3  mov  rbp, r8
0x11165  3  mov  r15, rdx
0x11168  3  mov  r14, rcx
0x1116b  3  test  rcx, rcx
0x1116e  6  je  0x1125b
0x11174  3  mov  rbx, rcx
0x11177  3  test  r8, r8
0x1117a  6  je  0x11230
0x11180  8  mov  r13, qword ptr [rsp + 0x80]
0x11188  2  cmp  byte ptr [rdi], al
0x1118a  2  jne  0x11194
0x1118c  6  mov  r8d, 1
0x11192  2  jmp  0x111b0
0x11194  3  cmp  byte ptr [rdi + 1], al
0x11197  2  jne  0x111a1
0x11199  6  mov  r8d, 2
0x1119f  2  jmp  0x111b0
0x111a1  3  mov  al, byte ptr [rdi + 2]
0x111a4  2  neg  al
0x111a6  3  sbb  r8, r8
0x111a9  3  neg  r8
0x111ac  4  add  r8, 3
0x111b0  3  mov  r9, r12
0x111b3  5  mov  qword ptr [rsp + 0x20], r13
0x111b8  3  mov  rdx, rdi
0x111bb  5  lea  rcx, [rsp + 0x60]
0x111c0  5  call  0x136bf
0x111c5  3  mov  rdx, rax
0x111c8  4  cmp  rax, -1
0x111cc  2  je  0x11249
0x111ce  2  xor  eax, eax
0x111d0  3  test  rdx, rdx
0x111d3  2  je  0x11241
0x111d5  4  mov  ecx, dword ptr [rsp + 0x60]
0x111d9  6  cmp  ecx, 0xffff
0x111df  2  jbe  0x1121c
0x111e1  4  cmp  rbp, 1
0x111e5  2  jbe  0x11230
0x111e7  6  add  ecx, 0xffff0000
0x111ed  6  mov  r8d, 0xd800
0x111f3  2  mov  eax, ecx
0x111f5  4  mov  dword ptr [rsp + 0x60], ecx
0x111f9  3  shr  eax, 0xa
0x111fc  3  dec  rbp
0x111ff  4  or  ax, r8w
0x11203  3  mov  word ptr [rbx], ax
0x11206  5  mov  eax, 0x3ff
0x1120b  3  and  cx, ax
0x1120e  4  add  rbx, 2
0x11212  5  mov  eax, 0xdc00
0x11217  3  or  cx, ax
0x1121a  2  xor  eax, eax
0x1121c  3  mov  word ptr [rbx], cx
0x1121f  3  add  rdi, rdx
0x11222  4  add  rbx, 2
0x11226  4  sub  rbp, 1
0x1122a  6  jne  0x11188
0x11230  3  sub  rbx, r14
0x11233  3  mov  qword ptr [r15], rdi
0x11236  3  sar  rbx, 1
0x11239  3  mov  rax, rbx
0x1123c  5  jmp  0x112cd
0x11241  3  mov  rdi, rax
0x11244  3  mov  word ptr [rbx], ax
0x11247  2  jmp  0x11230
0x11249  3  mov  qword ptr [r15], rdi
0x1124c  5  mov  byte ptr [r13 + 0x30], 1
0x11251  8  mov  dword ptr [r13 + 0x2c], 0x2a
0x11259  2  jmp  0x112c9
0x1125b  8  mov  rbp, qword ptr [rsp + 0x80]
0x11263  3  mov  rbx, rax
0x11266  2  cmp  byte ptr [rdi], al
0x11268  2  jne  0x11272
0x1126a  6  mov  r8d, 1
0x11270  2  jmp  0x1128e
0x11272  3  cmp  byte ptr [rdi + 1], al
0x11275  2  jne  0x1127f
0x11277  6  mov  r8d, 2
0x1127d  2  jmp  0x1128e
0x1127f  3  mov  al, byte ptr [rdi + 2]
0x11282  2  neg  al
0x11284  3  sbb  r8, r8
0x11287  3  neg  r8
0x1128a  4  add  r8, 3
0x1128e  3  mov  r9, r12
0x11291  5  mov  qword ptr [rsp + 0x20], rbp
0x11296  3  mov  rdx, rdi
0x11299  2  xor  ecx, ecx
0x1129b  5  call  0x136bf
0x112a0  4  cmp  rax, -1
0x112a4  2  je  0x112be
0x112a6  3  test  rax, rax
0x112a9  2  je  0x11239
0x112ab  4  cmp  rax, 4
0x112af  2  jne  0x112b4
0x112b1  3  inc  rbx
0x112b4  3  add  rdi, rax
0x112b7  3  inc  rbx
0x112ba  2  xor  eax, eax
0x112bc  2  jmp  0x11266
0x112be  4  mov  byte ptr [rbp + 0x30], 1
0x112c2  7  mov  dword ptr [rbp + 0x2c], 0x2a
0x112c9  4  or  rax, 0xffffffffffffffff
0x112cd  5  mov  rbx, qword ptr [rsp + 0x68]
0x112d2  5  mov  rbp, qword ptr [rsp + 0x70]
0x112d7  4  add  rsp, 0x30
0x112db  2  pop  r15
0x112dd  2  pop  r14
0x112df  2  pop  r13
0x112e1  2  pop  r12
0x112e3  1  pop  rdi
0x112e4  1  ret  
0x112e5  1  int3  
0x112e6  1  int3  
0x112e7  3  mov  rax, rsp
0x112ea  4  mov  qword ptr [rax + 0x10], rbx
0x112ee  4  mov  qword ptr [rax + 0x18], rbp
0x112f2  4  mov  qword ptr [rax + 0x20], rsi
0x112f6  3  mov  byte ptr [rax + 8], cl
0x112f9  1  push  rdi
0x112fa  4  sub  rsp, 0x20
0x112fe  3  mov  rcx, rdx
0x11301  3  mov  rsi, r8
0x11304  3  mov  rbx, rdx
0x11307  5  call  0xad03
0x1130c  3  mov  ecx, dword ptr [rbx + 0x14]
0x1130f  1  nop  
0x11310  3  movsxd  r10, eax
0x11313  3  test  cl, 0xc0
0x11316  6  je  0x113ad
0x1131c  2  mov  edi, dword ptr [rbx]
0x1131e  2  xor  ebp, ebp
0x11320  4  mov  rdx, qword ptr [rbx + 8]
0x11324  3  sub  edi, dword ptr [rbx + 8]
0x11327  4  lea  rax, [rdx + 1]
0x1132b  3  mov  qword ptr [rbx], rax
0x1132e  3  mov  eax, dword ptr [rbx + 0x20]
0x11331  2  dec  eax
0x11333  3  mov  dword ptr [rbx + 0x10], eax
0x11336  2  test  edi, edi
0x11338  2  jle  0x11358
0x1133a  3  mov  r9, rsi
0x1133d  3  mov  r8d, edi
0x11340  3  mov  ecx, r10d
0x11343  5  call  0xf287
0x11348  2  mov  ebp, eax
0x1134a  4  mov  rcx, qword ptr [rbx + 8]
0x1134e  2  cmp  ebp, edi
0x11350  4  mov  al, byte ptr [rsp + 0x30]
0x11354  2  mov  byte ptr [rcx], al
0x11356  2  jmp  0x113c6
0x11358  4  lea  eax, [r10 + 2]
0x1135c  3  cmp  eax, 1
0x1135f  2  jbe  0x11383
0x11361  3  mov  rcx, r10
0x11364  7  lea  rdx, [rip + 0x10cc5]
0x1136b  3  mov  rax, r10
0x1136e  4  sar  rax, 6
0x11372  3  and  ecx, 0x3f
0x11375  4  mov  rax, qword ptr [rdx + rax*8]
0x11379  4  lea  rcx, [rcx + rcx*8]
0x1137d  4  lea  rdx, [rax + rcx*8]
0x11381  2  jmp  0x1138a
0x11383  7  lea  rdx, [rip + 0xfde6]
0x1138a  4  test  byte ptr [rdx + 0x38], 0x20
0x1138e  2  je  0x1134a
0x11390  2  xor  edx, edx
0x11392  3  mov  ecx, r10d
0x11395  4  lea  r8d, [rdx + 2]
0x11399  5  call  0x12b2b
0x1139e  4  cmp  rax, -1
0x113a2  2  jne  0x1134a
0x113a4  5  lock or  dword ptr [rbx + 0x14], 0x10
0x113a9  2  mov  al, 1
0x113ab  2  jmp  0x113c9
0x113ad  3  mov  r9, rsi
0x113b0  5  lea  rdx, [rsp + 0x30]
0x113b5  6  mov  r8d, 1
0x113bb  3  mov  ecx, r10d
0x113be  5  call  0xf287
0x113c3  3  cmp  eax, 1
0x113c6  3  sete  al
0x113c9  5  mov  rbx, qword ptr [rsp + 0x38]
0x113ce  5  mov  rbp, qword ptr [rsp + 0x40]
0x113d3  5  mov  rsi, qword ptr [rsp + 0x48]
0x113d8  4  add  rsp, 0x20
0x113dc  1  pop  rdi
0x113dd  1  ret  
0x113de  1  int3  
0x113df  2  push  rbx
0x113e1  4  sub  rsp, 0x20
0x113e5  3  mov  edx, dword ptr [rcx + 0x14]
0x113e8  1  nop  
0x113e9  3  shr  edx, 3
0x113ec  3  test  dl, 1
0x113ef  2  je  0x113f5
0x113f1  2  mov  al, 1
0x113f3  2  jmp  0x11455
0x113f5  3  mov  eax, dword ptr [rcx + 0x14]
0x113f8  1  nop  
0x113f9  2  test  al, 0xc0
0x113fb  2  je  0x11406
0x113fd  4  mov  rax, qword ptr [rcx + 8]
0x11401  3  cmp  qword ptr [rcx], rax
0x11404  2  je  0x11453
0x11406  3  mov  ecx, dword ptr [rcx + 0x18]
0x11409  1  nop  
0x1140a  5  call  0xd8eb
0x1140f  3  mov  rbx, rax
0x11412  4  cmp  rax, -1
0x11416  2  je  0x11453
0x11418  6  mov  r9d, 1
0x1141e  5  lea  r8, [rsp + 0x38]
0x11423  2  xor  edx, edx
0x11425  3  mov  rcx, rax
0x11428  6  call  qword ptr [rip + 0x4dfa]
0x1142e  2  test  eax, eax
0x11430  2  je  0x11453
0x11432  5  lea  rdx, [rsp + 0x30]
0x11437  3  mov  rcx, rbx
0x1143a  6  call  qword ptr [rip + 0x4de0]
0x11440  2  test  eax, eax
0x11442  2  je  0x11453
0x11444  5  mov  rax, qword ptr [rsp + 0x30]
0x11449  5  cmp  qword ptr [rsp + 0x38], rax
0x1144e  3  sete  al
0x11451  2  jmp  0x11455
0x11453  2  xor  al, al
0x11455  4  add  rsp, 0x20
0x11459  1  pop  rbx
0x1145a  1  ret  
0x1145b  5  mov  qword ptr [rsp + 8], rbx
0x11460  5  mov  qword ptr [rsp + 0x10], rsi
0x11465  1  push  rdi
0x11466  4  sub  rsp, 0x20
0x1146a  2  mov  esi, ecx
0x1146c  3  mov  rdi, r8
0x1146f  3  mov  rcx, rdx
0x11472  3  mov  rbx, rdx
0x11475  5  call  0xad03
0x1147a  3  mov  eax, dword ptr [rbx + 0x14]
0x1147d  1  nop  
0x1147e  2  test  al, 6
0x11480  2  jne  0x11497
0x11482  7  mov  dword ptr [rdi + 0x2c], 9
0x11489  4  mov  byte ptr [rdi + 0x30], 1
0x1148d  5  lock or  dword ptr [rbx + 0x14], 0x10
0x11492  3  or  eax, 0xffffffff
0x11495  2  jmp  0x11516
0x11497  3  mov  eax, dword ptr [rbx + 0x14]
0x1149a  1  nop  
0x1149b  3  shr  eax, 0xc
0x1149e  2  test  al, 1
0x114a0  2  je  0x114ab
0x114a2  7  mov  dword ptr [rdi + 0x2c], 0x22
0x114a9  2  jmp  0x11489
0x114ab  3  mov  eax, dword ptr [rbx + 0x14]
0x114ae  1  nop  
0x114af  2  test  al, 1
0x114b1  2  je  0x114cf
0x114b3  3  mov  rcx, rbx
0x114b6  5  call  0x113df
0x114bb  4  and  dword ptr [rbx + 0x10], 0
0x114bf  2  test  al, al
0x114c1  2  je  0x1148d
0x114c3  4  mov  rax, qword ptr [rbx + 8]
0x114c7  3  mov  qword ptr [rbx], rax
0x114ca  5  lock and  dword ptr [rbx + 0x14], 0xfffffffe
0x114cf  5  lock or  dword ptr [rbx + 0x14], 2
0x114d4  5  lock and  dword ptr [rbx + 0x14], 0xfffffff7
0x114d9  4  and  dword ptr [rbx + 0x10], 0
0x114dd  3  mov  eax, dword ptr [rbx + 0x14]
0x114e0  1  nop  
0x114e1  5  test  eax, 0x4c0
0x114e6  2  jne  0x114fc
0x114e8  3  mov  rcx, rbx
0x114eb  5  call  0xad5b
0x114f0  2  test  al, al
0x114f2  2  jne  0x114fc
0x114f4  3  mov  rcx, rbx
0x114f7  5  call  0x1389b
0x114fc  3  mov  r8, rdi
0x114ff  3  mov  rdx, rbx
0x11502  3  mov  cl, sil
0x11505  5  call  0x112e7
0x1150a  2  test  al, al
0x1150c  6  je  0x1148d
0x11512  4  movzx  eax, sil
0x11516  5  mov  rbx, qword ptr [rsp + 0x30]
0x1151b  5  mov  rsi, qword ptr [rsp + 0x38]
0x11520  4  add  rsp, 0x20
0x11524  1  pop  rdi
0x11525  1  ret  
0x11526  1  int3  
0x11527  4  sub  rsp, 0x28
0x1152b  3  cmp  ecx, -2
0x1152e  2  jne  0x1153d
0x11530  5  call  0x8a6f
0x11535  6  mov  dword ptr [rax], 9
0x1153b  2  jmp  0x1157f
0x1153d  2  test  ecx, ecx
0x1153f  2  js  0x1156f
0x11541  6  cmp  ecx, dword ptr [rip + 0x10ee9]
0x11547  2  jae  0x1156f
0x11549  3  movsxd  rcx, ecx
0x1154c  7  lea  rdx, [rip + 0x10add]
0x11553  3  mov  rax, rcx
0x11556  3  and  ecx, 0x3f
0x11559  4  shr  rax, 6
0x1155d  4  lea  rcx, [rcx + rcx*8]
0x11561  4  mov  rax, qword ptr [rdx + rax*8]
0x11565  5  movzx  eax, byte ptr [rax + rcx*8 + 0x38]
0x1156a  3  and  eax, 0x40
0x1156d  2  jmp  0x11581
0x1156f  5  call  0x8a6f
0x11574  6  mov  dword ptr [rax], 9
0x1157a  5  call  0x8933
0x1157f  2  xor  eax, eax
0x11581  4  add  rsp, 0x28
0x11585  1  ret  
0x11586  1  int3  
0x11587  1  int3  
0x11588  1  int3  
0x11589  1  int3  
0x1158a  1  int3  
0x1158b  1  int3  
0x1158c  1  int3  
0x1158d  1  int3  
0x1158e  1  int3  
0x1158f  1  int3  
0x11590  1  int3  
0x11591  1  int3  
0x11592  1  int3  
0x11593  2  push  r12
0x11595  2  push  r13
0x11597  2  push  r14
0x11599  7  sub  rsp, 0x450
0x115a0  7  mov  rax, qword ptr [rip + 0xfa91]
0x115a7  3  xor  rax, rsp
0x115aa  8  mov  qword ptr [rsp + 0x410], rax
0x115b2  3  mov  r12, r9
0x115b5  3  mov  r14, r8
0x115b8  3  mov  r13, rcx
0x115bb  3  test  rcx, rcx
0x115be  2  jne  0x115da
0x115c0  3  test  rdx, rdx
0x115c3  2  je  0x115da
0x115c5  5  call  0x8a6f
0x115ca  6  mov  dword ptr [rax], 0x16
0x115d0  5  call  0x8933
0x115d5  5  jmp  0x11983
0x115da  3  test  r14, r14
0x115dd  2  je  0x115c5
0x115df  3  test  r12, r12
0x115e2  2  je  0x115c5
0x115e4  4  cmp  rdx, 2
0x115e8  6  jb  0x11983
0x115ee  8  mov  qword ptr [rsp + 0x448], rbx
0x115f6  8  mov  qword ptr [rsp + 0x440], rbp
0x115fe  8  mov  qword ptr [rsp + 0x438], rsi
0x11606  8  mov  qword ptr [rsp + 0x430], rdi
0x1160e  8  mov  qword ptr [rsp + 0x428], r15
0x11616  4  lea  r15, [rdx - 1]
0x1161a  4  imul  r15, r14
0x1161e  3  add  r15, rcx
0x11621  2  xor  ecx, ecx
0x11623  5  mov  qword ptr [rsp + 0x20], rcx
0x11628  11  nop  word ptr [rax + rax]
0x11633  2  xor  edx, edx
0x11635  3  mov  rax, r15
0x11638  3  sub  rax, r13
0x1163b  3  div  r14
0x1163e  4  lea  rbx, [rax + 1]
0x11642  4  cmp  rbx, 8
0x11646  6  ja  0x116e7
0x1164c  3  cmp  r15, r13
0x1164f  2  jbe  0x116c6
0x11651  4  lea  rsi, [r14 + r13]
0x11655  3  mov  rbx, r13
0x11658  3  mov  rdi, rsi
0x1165b  3  cmp  rsi, r15
0x1165e  2  ja  0x1168a
0x11660  3  nop  dword ptr [rax]
0x11663  10  movabs  r10, 0x9375b7955ede8970
0x1166d  3  mov  rdx, rbx
0x11670  3  mov  rcx, rdi
0x11673  3  mov  rax, r12
0x11676  6  call  qword ptr [rip + 0x4bf4]
0x1167c  2  test  eax, eax
0x1167e  4  cmovg  rbx, rdi
0x11682  3  add  rdi, r14
0x11685  3  cmp  rdi, r15
0x11688  2  jbe  0x11663
0x1168a  3  mov  r8, r14
0x1168d  3  mov  rdx, r15
0x11690  3  cmp  rbx, r15
0x11693  2  je  0x116b9
0x11695  3  sub  rbx, r15
0x11698  11  nop  word ptr [rax + rax]
0x116a3  3  movzx  eax, byte ptr [rdx]
0x116a6  4  movzx  ecx, byte ptr [rbx + rdx]
0x116aa  3  mov  byte ptr [rbx + rdx], al
0x116ad  2  mov  byte ptr [rdx], cl
0x116af  4  lea  rdx, [rdx + 1]
0x116b3  4  sub  r8, 1
0x116b7  2  jne  0x116a3
0x116b9  3  sub  r15, r14
0x116bc  3  cmp  r15, r13
0x116bf  2  ja  0x11655
0x116c1  5  mov  rcx, qword ptr [rsp + 0x20]
0x116c6  4  sub  rcx, 1
0x116ca  5  mov  qword ptr [rsp + 0x20], rcx
0x116cf  6  js  0x1195b
0x116d5  5  mov  r13, qword ptr [rsp + rcx*8 + 0x30]
0x116da  8  mov  r15, qword ptr [rsp + rcx*8 + 0x220]
0x116e2  5  jmp  0x11633
0x116e7  3  shr  rbx, 1
0x116ea  4  imul  rbx, r14
0x116ee  4  lea  rsi, [rbx + r13]
0x116f2  10  movabs  r10, 0x9375b7955ede8970
0x116fc  3  mov  rdx, rsi
0x116ff  3  mov  rcx, r13
0x11702  3  mov  rax, r12
0x11705  6  call  qword ptr [rip + 0x4b65]
0x1170b  2  test  eax, eax
0x1170d  2  jle  0x1173e
0x1170f  3  mov  r9, r14
0x11712  3  mov  r8, rsi
0x11715  3  cmp  r13, rsi
0x11718  2  je  0x1173e
0x1171a  9  nop  word ptr [rax + rax]
0x11723  4  movzx  eax, byte ptr [r8]
0x11727  3  mov  rdx, r8
0x1172a  3  sub  rdx, rbx
0x1172d  3  movzx  ecx, byte ptr [rdx]
0x11730  2  mov  byte ptr [rdx], al
0x11732  3  mov  byte ptr [r8], cl
0x11735  3  inc  r8
0x11738  4  sub  r9, 1
0x1173c  2  jne  0x11723
0x1173e  10  movabs  r10, 0x9375b7955ede8970
0x11748  3  mov  rdx, r15
0x1174b  3  mov  rcx, r13
0x1174e  3  mov  rax, r12
0x11751  6  call  qword ptr [rip + 0x4b19]
0x11757  2  test  eax, eax
0x11759  2  jle  0x1178b
0x1175b  3  mov  r8, r14
0x1175e  3  mov  rdx, r15
0x11761  3  cmp  r13, r15
0x11764  2  je  0x1178b
0x11766  3  mov  r9, r13
0x11769  3  sub  r9, r15
0x1176c  7  nop  dword ptr [rax]
0x11773  3  movzx  eax, byte ptr [rdx]
0x11776  5  movzx  ecx, byte ptr [r9 + rdx]
0x1177b  4  mov  byte ptr [r9 + rdx], al
0x1177f  2  mov  byte ptr [rdx], cl
0x11781  4  lea  rdx, [rdx + 1]
0x11785  4  sub  r8, 1
0x11789  2  jne  0x11773
0x1178b  10  movabs  r10, 0x9375b7955ede8970
0x11795  3  mov  rdx, r15
0x11798  3  mov  rcx, rsi
0x1179b  3  mov  rax, r12
0x1179e  6  call  qword ptr [rip + 0x4acc]
0x117a4  2  test  eax, eax
0x117a6  2  jle  0x117db
0x117a8  3  mov  r8, r14
0x117ab  3  mov  rdx, r15
0x117ae  3  cmp  rsi, r15
0x117b1  2  je  0x117db
0x117b3  3  mov  r9, rsi
0x117b6  3  sub  r9, r15
0x117b9  10  nop  word ptr [rax + rax]
0x117c3  3  movzx  eax, byte ptr [rdx]
0x117c6  5  movzx  ecx, byte ptr [r9 + rdx]
0x117cb  4  mov  byte ptr [r9 + rdx], al
0x117cf  2  mov  byte ptr [rdx], cl
0x117d1  4  lea  rdx, [rdx + 1]
0x117d5  4  sub  r8, 1
0x117d9  2  jne  0x117c3
0x117db  3  mov  rbx, r13
0x117de  3  mov  rdi, r15
0x117e1  2  nop  
0x117e3  3  cmp  rsi, rbx
0x117e6  2  jbe  0x11813
0x117e8  3  add  rbx, r14
0x117eb  3  cmp  rbx, rsi
0x117ee  2  jae  0x11813
0x117f0  10  movabs  r10, 0x9375b7955ede8970
0x117fa  3  mov  rdx, rsi
0x117fd  3  mov  rcx, rbx
0x11800  3  mov  rax, r12
0x11803  6  call  qword ptr [rip + 0x4a67]
0x11809  2  test  eax, eax
0x1180b  2  jle  0x117e8
0x1180d  2  jmp  0x11838
0x1180f  4  nop  dword ptr [rax]
0x11813  3  add  rbx, r14
0x11816  3  cmp  rbx, r15
0x11819  2  ja  0x11838
0x1181b  10  movabs  r10, 0x9375b7955ede8970
0x11825  3  mov  rdx, rsi
0x11828  3  mov  rcx, rbx
0x1182b  3  mov  rax, r12
0x1182e  6  call  qword ptr [rip + 0x4a3c]
0x11834  2  test  eax, eax
0x11836  2  jle  0x11813
0x11838  3  mov  rbp, rdi
0x1183b  3  sub  rdi, r14
0x1183e  3  cmp  rdi, rsi
0x11841  2  jbe  0x11860
0x11843  10  movabs  r10, 0x9375b7955ede8970
0x1184d  3  mov  rdx, rsi
0x11850  3  mov  rcx, rdi
0x11853  3  mov  rax, r12
0x11856  6  call  qword ptr [rip + 0x4a14]
0x1185c  2  test  eax, eax
0x1185e  2  jg  0x11838
0x11860  3  cmp  rdi, rbx
0x11863  2  jb  0x1189d
0x11865  3  mov  r8, r14
0x11868  3  mov  rdx, rdi
0x1186b  2  je  0x1188b
0x1186d  3  mov  r9, rbx
0x11870  3  sub  r9, rdi
0x11873  3  movzx  eax, byte ptr [rdx]
0x11876  5  movzx  ecx, byte ptr [r9 + rdx]
0x1187b  4  mov  byte ptr [r9 + rdx], al
0x1187f  2  mov  byte ptr [rdx], cl
0x11881  4  lea  rdx, [rdx + 1]
0x11885  4  sub  r8, 1
0x11889  2  jne  0x11873
0x1188b  3  cmp  rsi, rdi
0x1188e  3  mov  rax, rbx
0x11891  4  cmovne  rax, rsi
0x11895  3  mov  rsi, rax
0x11898  5  jmp  0x117e3
0x1189d  3  cmp  rsi, rbp
0x118a0  2  jae  0x118ca
0x118a2  1  nop  
0x118a3  3  sub  rbp, r14
0x118a6  3  cmp  rbp, rsi
0x118a9  2  jbe  0x118ca
0x118ab  10  movabs  r10, 0x9375b7955ede8970
0x118b5  3  mov  rdx, rsi
0x118b8  3  mov  rcx, rbp
0x118bb  3  mov  rax, r12
0x118be  6  call  qword ptr [rip + 0x49ac]
0x118c4  2  test  eax, eax
0x118c6  2  je  0x118a3
0x118c8  2  jmp  0x118ef
0x118ca  3  sub  rbp, r14
0x118cd  3  cmp  rbp, r13
0x118d0  2  jbe  0x118ef
0x118d2  10  movabs  r10, 0x9375b7955ede8970
0x118dc  3  mov  rdx, rsi
0x118df  3  mov  rcx, rbp
0x118e2  3  mov  rax, r12
0x118e5  6  call  qword ptr [rip + 0x4985]
0x118eb  2  test  eax, eax
0x118ed  2  je  0x118ca
0x118ef  3  mov  rcx, r15
0x118f2  3  mov  rax, rbp
0x118f5  3  sub  rcx, rbx
0x118f8  3  sub  rax, r13
0x118fb  3  cmp  rax, rcx
0x118fe  5  mov  rcx, qword ptr [rsp + 0x20]
0x11903  2  jl  0x11930
0x11905  3  cmp  r13, rbp
0x11908  2  jae  0x1191f
0x1190a  5  mov  qword ptr [rsp + rcx*8 + 0x30], r13
0x1190f  8  mov  qword ptr [rsp + rcx*8 + 0x220], rbp
0x11917  3  inc  rcx
0x1191a  5  mov  qword ptr [rsp + 0x20], rcx
0x1191f  3  cmp  rbx, r15
0x11922  6  jae  0x116c6
0x11928  3  mov  r13, rbx
0x1192b  5  jmp  0x11633
0x11930  3  cmp  rbx, r15
0x11933  2  jae  0x1194a
0x11935  5  mov  qword ptr [rsp + rcx*8 + 0x30], rbx
0x1193a  8  mov  qword ptr [rsp + rcx*8 + 0x220], r15
0x11942  3  inc  rcx
0x11945  5  mov  qword ptr [rsp + 0x20], rcx
0x1194a  3  cmp  r13, rbp
0x1194d  6  jae  0x116c6
0x11953  3  mov  r15, rbp
0x11956  5  jmp  0x11633
0x1195b  8  mov  rdi, qword ptr [rsp + 0x430]
0x11963  8  mov  rsi, qword ptr [rsp + 0x438]
0x1196b  8  mov  rbp, qword ptr [rsp + 0x440]
0x11973  8  mov  rbx, qword ptr [rsp + 0x448]
0x1197b  8  mov  r15, qword ptr [rsp + 0x428]
0x11983  8  mov  rcx, qword ptr [rsp + 0x410]
0x1198b  3  xor  rcx, rsp
0x1198e  5  call  0x14c73
0x11993  7  add  rsp, 0x450
0x1199a  2  pop  r14
0x1199c  2  pop  r13
0x1199e  2  pop  r12
0x119a0  1  ret  
0x119a1  1  int3  
0x119a2  1  int3  
0x119a3  5  mov  qword ptr [rsp + 8], rbx
0x119a8  5  mov  qword ptr [rsp + 0x10], rsi
0x119ad  1  push  rdi
0x119ae  4  sub  rsp, 0x20
0x119b2  3  xor  r10d, r10d
0x119b5  3  mov  rbx, r8
0x119b8  3  mov  r11, rdx
0x119bb  3  test  r9, r9
0x119be  2  jne  0x119f1
0x119c0  3  test  rcx, rcx
0x119c3  2  jne  0x119f6
0x119c5  3  test  rdx, rdx
0x119c8  2  je  0x119de
0x119ca  5  call  0x8a6f
0x119cf  5  mov  ebx, 0x16
0x119d4  2  mov  dword ptr [rax], ebx
0x119d6  5  call  0x8933
0x119db  3  mov  r10d, ebx
0x119de  5  mov  rbx, qword ptr [rsp + 0x30]
0x119e3  3  mov  eax, r10d
0x119e6  5  mov  rsi, qword ptr [rsp + 0x38]
0x119eb  4  add  rsp, 0x20
0x119ef  1  pop  rdi
0x119f0  1  ret  
0x119f1  3  test  rcx, rcx
0x119f4  2  je  0x119ca
0x119f6  3  test  r11, r11
0x119f9  2  je  0x119ca
0x119fb  3  test  r9, r9
0x119fe  2  jne  0x11a05
0x11a00  3  mov  byte ptr [rcx], r10b
0x11a03  2  jmp  0x119de
0x11a05  3  test  rbx, rbx
0x11a08  2  jne  0x11a0f
0x11a0a  3  mov  byte ptr [rcx], r10b
0x11a0d  2  jmp  0x119ca
0x11a0f  3  sub  rbx, rcx
0x11a12  3  mov  rdx, rcx
0x11a15  3  mov  r8, r11
0x11a18  3  mov  rdi, r9
0x11a1b  4  cmp  r9, -1
0x11a1f  2  jne  0x11a35
0x11a21  3  mov  al, byte ptr [rbx + rdx]
0x11a24  2  mov  byte ptr [rdx], al
0x11a26  3  inc  rdx
0x11a29  2  test  al, al
0x11a2b  2  je  0x119de
0x11a2d  4  sub  r8, 1
0x11a31  2  jne  0x11a21
0x11a33  2  jmp  0x11a63
0x11a35  3  mov  al, byte ptr [rbx + rdx]
0x11a38  3  mov  rsi, rdi
0x11a3b  2  mov  byte ptr [rdx], al
0x11a3d  3  inc  rdx
0x11a40  2  test  al, al
0x11a42  2  je  0x119de
0x11a44  4  sub  r8, 1
0x11a48  2  je  0x11a50
0x11a4a  4  sub  rdi, 1
0x11a4e  2  jne  0x11a35
0x11a50  3  test  r8, r8
0x11a53  4  lea  rax, [rsi - 1]
0x11a57  4  cmove  rax, rsi
0x11a5b  3  test  rax, rax
0x11a5e  2  jne  0x11a63
0x11a60  3  mov  byte ptr [rdx], r10b
0x11a63  3  test  r8, r8
0x11a66  6  jne  0x119de
0x11a6c  4  cmp  r9, -1
0x11a70  2  jne  0x11a80
0x11a72  5  mov  byte ptr [rcx + r11 - 1], r10b
0x11a77  4  lea  r10d, [r8 + 0x50]
0x11a7b  5  jmp  0x119de
0x11a80  3  mov  byte ptr [rcx], r10b
0x11a83  5  call  0x8a6f
0x11a88  5  mov  ebx, 0x22
0x11a8d  5  jmp  0x119d4
0x11a92  1  int3  
0x11a93  4  sub  rsp, 0x58
0x11a97  7  mov  rax, qword ptr [rip + 0xf59a]
0x11a9e  3  xor  rax, rsp
0x11aa1  5  mov  qword ptr [rsp + 0x40], rax
0x11aa6  2  xor  eax, eax
0x11aa8  3  mov  r9, rdx
0x11aab  4  cmp  rax, 0x20
0x11aaf  3  mov  r8, rcx
0x11ab2  2  jae  0x11b2b
0x11ab4  5  mov  byte ptr [rsp + rax + 0x20], 0
0x11ab9  3  inc  rax
0x11abc  4  cmp  rax, 0x20
0x11ac0  2  jl  0x11ab2
0x11ac2  2  mov  al, byte ptr [rdx]
0x11ac4  2  jmp  0x11ae5
0x11ac6  3  movzx  edx, al
0x11ac9  4  shr  rdx, 3
0x11acd  3  movzx  eax, al
0x11ad0  3  and  eax, 7
0x11ad3  5  movzx  ecx, byte ptr [rsp + rdx + 0x20]
0x11ad8  3  bts  ecx, eax
0x11adb  3  inc  r9
0x11ade  4  mov  byte ptr [rsp + rdx + 0x20], cl
0x11ae2  3  mov  al, byte ptr [r9]
0x11ae5  2  test  al, al
0x11ae7  2  jne  0x11ac6
0x11ae9  2  jmp  0x11b0a
0x11aeb  4  movzx  eax, r9b
0x11aef  5  mov  edx, 1
0x11af4  4  movzx  ecx, r9b
0x11af8  3  and  ecx, 7
0x11afb  4  shr  rax, 3
0x11aff  2  shl  edx, cl
0x11b01  4  test  byte ptr [rsp + rax + 0x20], dl
0x11b05  2  jne  0x11b26
0x11b07  3  inc  r8
0x11b0a  3  mov  r9b, byte ptr [r8]
0x11b0d  3  test  r9b, r9b
0x11b10  2  jne  0x11aeb
0x11b12  2  xor  eax, eax
0x11b14  5  mov  rcx, qword ptr [rsp + 0x40]
0x11b19  3  xor  rcx, rsp
0x11b1c  5  call  0x14c73
0x11b21  4  add  rsp, 0x58
0x11b25  1  ret  
0x11b26  3  mov  rax, r8
0x11b29  2  jmp  0x11b14
0x11b2b  5  call  0x14da3
0x11b30  1  int3  
0x11b31  1  int3  
0x11b32  1  int3  
0x11b33  5  mov  qword ptr [rsp + 8], rbx
0x11b38  5  mov  qword ptr [rsp + 0x10], rsi
0x11b3d  1  push  rdi
0x11b3e  3  mov  r10, rdx
0x11b41  7  lea  rsi, [rip - 0x11b45]
0x11b48  4  and  r10d, 0xf
0x11b4c  3  mov  rdi, rdx
0x11b4f  3  sub  rdi, r10
0x11b52  3  mov  rbx, rdx
0x11b55  3  mov  r8, rcx
0x11b58  3  xorps  xmm3, xmm3
0x11b5b  4  lea  rax, [r10 - 1]
0x11b5f  4  movdqu  xmm1, xmmword ptr [rdi]
0x11b63  4  cmp  rax, 0xe
0x11b67  2  ja  0x11bdc
0x11b69  7  mov  eax, dword ptr [rsi + rax*4 + 0x11e3c]
0x11b70  3  add  rax, rsi
0x11b73  2  jmp  rax
0x11b75  5  psrldq  xmm1, 1
0x11b7a  2  jmp  0x11bdc
0x11b7c  5  psrldq  xmm1, 2
0x11b81  2  jmp  0x11bdc
0x11b83  5  psrldq  xmm1, 3
0x11b88  2  jmp  0x11bdc
0x11b8a  5  psrldq  xmm1, 4
0x11b8f  2  jmp  0x11bdc
0x11b91  5  psrldq  xmm1, 5
0x11b96  2  jmp  0x11bdc
0x11b98  5  psrldq  xmm1, 6
0x11b9d  2  jmp  0x11bdc
0x11b9f  5  psrldq  xmm1, 7
0x11ba4  2  jmp  0x11bdc
0x11ba6  5  psrldq  xmm1, 8
0x11bab  2  jmp  0x11bdc
0x11bad  5  psrldq  xmm1, 9
0x11bb2  2  jmp  0x11bdc
0x11bb4  5  psrldq  xmm1, 0xa
0x11bb9  2  jmp  0x11bdc
0x11bbb  5  psrldq  xmm1, 0xb
0x11bc0  2  jmp  0x11bdc
0x11bc2  5  psrldq  xmm1, 0xc
0x11bc7  2  jmp  0x11bdc
0x11bc9  5  psrldq  xmm1, 0xd
0x11bce  2  jmp  0x11bdc
0x11bd0  5  psrldq  xmm1, 0xe
0x11bd5  2  jmp  0x11bdc
0x11bd7  5  psrldq  xmm1, 0xf
0x11bdc  3  xorps  xmm0, xmm0
0x11bdf  6  mov  r9d, 0xf
0x11be5  4  pcmpeqb  xmm0, xmm1
0x11be9  4  pmovmskb  eax, xmm0
0x11bed  2  test  eax, eax
0x11bef  6  je  0x11d28
0x11bf5  3  bsf  edx, eax
0x11bf8  3  test  r10, r10
0x11bfb  2  jne  0x11c03
0x11bfd  4  lea  r11d, [r9 - 0xe]
0x11c01  2  jmp  0x11c17
0x11c03  3  xor  r11d, r11d
0x11c06  2  mov  eax, edx
0x11c08  5  mov  ecx, 0x10
0x11c0d  3  sub  rcx, r10
0x11c10  3  cmp  rax, rcx
0x11c13  4  setb  r11b
0x11c17  3  mov  eax, r9d
0x11c1a  2  sub  eax, edx
0x11c1c  3  cmp  eax, r9d
0x11c1f  6  ja  0x11cf4
0x11c25  7  mov  ecx, dword ptr [rsi + rax*4 + 0x11e78]
0x11c2c  3  add  rcx, rsi
0x11c2f  2  jmp  rcx
0x11c31  5  pslldq  xmm1, 1
0x11c36  5  psrldq  xmm1, 1
0x11c3b  5  jmp  0x11cf4
0x11c40  5  pslldq  xmm1, 2
0x11c45  5  psrldq  xmm1, 2
0x11c4a  5  jmp  0x11cf4
0x11c4f  5  pslldq  xmm1, 3
0x11c54  5  psrldq  xmm1, 3
0x11c59  5  jmp  0x11cf4
0x11c5e  5  pslldq  xmm1, 4
0x11c63  5  psrldq  xmm1, 4
0x11c68  5  jmp  0x11cf4
0x11c6d  5  pslldq  xmm1, 5
0x11c72  5  psrldq  xmm1, 5
0x11c77  2  jmp  0x11cf4
0x11c79  5  pslldq  xmm1, 6
0x11c7e  5  psrldq  xmm1, 6
0x11c83  2  jmp  0x11cf4
0x11c85  5  pslldq  xmm1, 7
0x11c8a  5  psrldq  xmm1, 7
0x11c8f  2  jmp  0x11cf4
0x11c91  5  pslldq  xmm1, 8
0x11c96  5  psrldq  xmm1, 8
0x11c9b  2  jmp  0x11cf4
0x11c9d  5  pslldq  xmm1, 9
0x11ca2  5  psrldq  xmm1, 9
0x11ca7  2  jmp  0x11cf4
0x11ca9  5  pslldq  xmm1, 0xa
0x11cae  5  psrldq  xmm1, 0xa
0x11cb3  2  jmp  0x11cf4
0x11cb5  5  pslldq  xmm1, 0xb
0x11cba  5  psrldq  xmm1, 0xb
0x11cbf  2  jmp  0x11cf4
0x11cc1  5  pslldq  xmm1, 0xc
0x11cc6  5  psrldq  xmm1, 0xc
0x11ccb  2  jmp  0x11cf4
0x11ccd  5  pslldq  xmm1, 0xd
0x11cd2  5  psrldq  xmm1, 0xd
0x11cd7  2  jmp  0x11cf4
0x11cd9  5  pslldq  xmm1, 0xe
0x11cde  5  psrldq  xmm1, 0xe
0x11ce3  2  jmp  0x11cf4
0x11ce5  5  pslldq  xmm1, 0xf
0x11cea  5  psrldq  xmm1, 0xf
0x11cef  2  jmp  0x11cf4
0x11cf1  3  xorps  xmm1, xmm1
0x11cf4  3  test  r11d, r11d
0x11cf7  6  jne  0x11ddf
0x11cfd  5  movdqu  xmm2, xmmword ptr [rdi + 0x10]
0x11d02  4  movdqa  xmm0, xmm2
0x11d06  4  pcmpeqb  xmm0, xmm3
0x11d0a  4  pmovmskb  eax, xmm0
0x11d0e  2  test  eax, eax
0x11d10  2  jne  0x11d47
0x11d12  3  mov  rdx, rbx
0x11d15  3  mov  rcx, r8
0x11d18  5  mov  rbx, qword ptr [rsp + 0x10]
0x11d1d  5  mov  rsi, qword ptr [rsp + 0x18]
0x11d22  1  pop  rdi
0x11d23  5  jmp  0x11a93
0x11d28  3  test  r10, r10
0x11d2b  2  jne  0x11cfd
0x11d2d  4  cmp  byte ptr [rdi + 1], r10b
0x11d31  6  je  0x11ddf
0x11d37  5  mov  rbx, qword ptr [rsp + 0x10]
0x11d3c  5  mov  rsi, qword ptr [rsp + 0x18]
0x11d41  1  pop  rdi
0x11d42  5  jmp  0x11a93
0x11d47  3  bsf  ecx, eax
0x11d4a  2  mov  eax, ecx
0x11d4c  3  sub  rax, r10
0x11d4f  4  add  rax, 0x10
0x11d53  4  cmp  rax, 0x10
0x11d57  2  ja  0x11d12
0x11d59  3  sub  r9d, ecx
0x11d5c  4  cmp  r9d, 0xf
0x11d60  2  ja  0x11ddb
0x11d62  8  mov  ecx, dword ptr [rsi + r9*4 + 0x11eb8]
0x11d6a  3  add  rcx, rsi
0x11d6d  2  jmp  rcx
0x11d6f  5  pslldq  xmm2, 1
0x11d74  2  jmp  0x11ddb
0x11d76  5  pslldq  xmm2, 2
0x11d7b  2  jmp  0x11ddb
0x11d7d  5  pslldq  xmm2, 3
0x11d82  2  jmp  0x11ddb
0x11d84  5  pslldq  xmm2, 4
0x11d89  2  jmp  0x11ddb
0x11d8b  5  pslldq  xmm2, 5
0x11d90  2  jmp  0x11ddb
0x11d92  5  pslldq  xmm2, 6
0x11d97  2  jmp  0x11ddb
0x11d99  5  pslldq  xmm2, 7
0x11d9e  2  jmp  0x11ddb
0x11da0  5  pslldq  xmm2, 8
0x11da5  2  jmp  0x11ddb
0x11da7  5  pslldq  xmm2, 9
0x11dac  2  jmp  0x11ddb
0x11dae  5  pslldq  xmm2, 0xa
0x11db3  2  jmp  0x11ddb
0x11db5  5  pslldq  xmm2, 0xb
0x11dba  2  jmp  0x11ddb
0x11dbc  5  pslldq  xmm2, 0xc
0x11dc1  2  jmp  0x11ddb
0x11dc3  5  pslldq  xmm2, 0xd
0x11dc8  2  jmp  0x11ddb
0x11dca  5  pslldq  xmm2, 0xe
0x11dcf  2  jmp  0x11ddb
0x11dd1  5  pslldq  xmm2, 0xf
0x11dd6  2  jmp  0x11ddb
0x11dd8  3  xorps  xmm2, xmm2
0x11ddb  4  por  xmm1, xmm2
0x11ddf  4  movzx  eax, byte ptr [r8]
0x11de3  2  test  al, al
0x11de5  2  je  0x11e1f
0x11de7  4  nop  dword ptr [rax]
0x11deb  8  nop  dword ptr [rax + rax]
0x11df3  3  movsx  eax, al
0x11df6  4  movd  xmm0, eax
0x11dfa  4  punpcklbw  xmm0, xmm0
0x11dfe  4  punpcklbw  xmm0, xmm0
0x11e02  5  pshufd  xmm0, xmm0, 0
0x11e07  4  pcmpeqb  xmm0, xmm1
0x11e0b  4  pmovmskb  eax, xmm0
0x11e0f  2  test  eax, eax
0x11e11  2  jne  0x11e2d
0x11e13  5  movzx  eax, byte ptr [r8 + 1]
0x11e18  3  inc  r8
0x11e1b  2  test  al, al
0x11e1d  2  jne  0x11df3
0x11e1f  2  xor  eax, eax
0x11e21  5  mov  rbx, qword ptr [rsp + 0x10]
0x11e26  5  mov  rsi, qword ptr [rsp + 0x18]
0x11e2b  1  pop  rdi
0x11e2c  1  ret  
0x11e2d  5  mov  rbx, qword ptr [rsp + 0x10]
0x11e32  3  mov  rax, r8
0x11e35  5  mov  rsi, qword ptr [rsp + 0x18]
0x11e3a  1  pop  rdi
0x11e3b  1  ret  
0x11e3c  3  nop  dword ptr [rax]
0x11e3f  2  jb  0x11e5c
0x11e41  2  add  dword ptr [rax], eax
0x11e43  2  jns  0x11e60
0x11e45  2  add  dword ptr [rax], eax
0x11e47  3  sbb  byte ptr [rbx], 1
0x11e4a  6  add  byte ptr [rdi - 0x71fffee5], al
0x11e50  2  sbb  eax, dword ptr [rcx]
0x11e52  6  add  byte ptr [rbp - 0x63fffee5], dl
0x11e58  2  sbb  eax, dword ptr [rcx]
0x11e5a  6  add  byte ptr [rbx - 0x55fffee5], ah
0x11e60  2  sbb  eax, dword ptr [rcx]
0x11e62  6  add  byte ptr [rcx - 0x47fffee5], dh
0x11e68  2  sbb  eax, dword ptr [rcx]
0x11e6a  6  add  byte ptr [rdi - 0x39fffee5], bh
0x11e70  2  sbb  eax, dword ptr [rcx]
0x11e72  2  add  ch, cl
0x11e74  2  sbb  eax, dword ptr [rcx]
0x11e76  2  add  ah, dl
0x11e78  2  sbb  eax, dword ptr [rcx]
0x11e7a  2  add  byte ptr [rsi], ch
0x11e7c  2  sbb  al, 1
0x11e7e  6  add  byte ptr [rip + 0x4c000119], bh
0x11e84  2  sbb  al, 1
0x11e86  3  add  byte ptr [rbx + 0x1c], bl
0x11e89  2  add  dword ptr [rax], eax
0x11e8b  2  push  0x1c
0x11e8d  2  add  dword ptr [rax], eax
0x11e8f  2  jbe  0x11ead
0x11e91  2  add  dword ptr [rax], eax

